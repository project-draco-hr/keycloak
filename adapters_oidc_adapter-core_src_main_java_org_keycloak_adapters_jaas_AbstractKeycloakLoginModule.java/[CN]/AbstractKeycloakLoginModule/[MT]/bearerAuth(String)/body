{
  AccessToken token=AdapterRSATokenVerifier.verifyToken(tokenString,deployment);
  boolean verifyCaller;
  if (deployment.isUseResourceRoleMappings()) {
    verifyCaller=token.isVerifyCaller(deployment.getResourceName());
  }
 else {
    verifyCaller=token.isVerifyCaller();
  }
  if (verifyCaller) {
    throw new IllegalStateException("VerifyCaller not supported yet in login module");
  }
  RefreshableKeycloakSecurityContext skSession=new RefreshableKeycloakSecurityContext(deployment,null,tokenString,token,null,null,null);
  String principalName=AdapterUtils.getPrincipalName(deployment,token);
  final KeycloakPrincipal<RefreshableKeycloakSecurityContext> principal=new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(principalName,skSession);
  final Set<String> roles=AdapterUtils.getRolesFromSecurityContext(skSession);
  return new Auth(principal,roles,tokenString);
}
