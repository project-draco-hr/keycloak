{
  if (refreshToken != null) {
    try {
      URI logoutUri=deployment.getLogoutUrl().clone().build();
      HttpPost post=new HttpPost(logoutUri);
      List<NameValuePair> formparams=new ArrayList<NameValuePair>();
      ClientCredentialsProviderUtils.setClientCredentials(deployment,post,formparams);
      formparams.add(new BasicNameValuePair(OAuth2Constants.REFRESH_TOKEN,refreshToken));
      UrlEncodedFormEntity form=new UrlEncodedFormEntity(formparams,"UTF-8");
      post.setEntity(form);
      HttpClient client=deployment.getClient();
      HttpResponse response=client.execute(post);
      int status=response.getStatusLine().getStatusCode();
      HttpEntity entity=response.getEntity();
      if (status != 204) {
        StringBuilder errorBuilder=new StringBuilder("Logout of refreshToken failed. Invalid status: " + status);
        if (entity != null) {
          InputStream is=entity.getContent();
          if (status == 400) {
            OAuth2ErrorRepresentation errorRep=JsonSerialization.readValue(is,OAuth2ErrorRepresentation.class);
            errorBuilder.append(", OAuth2 error. Error: " + errorRep.getError()).append(", Error description: " + errorRep.getErrorDescription());
          }
 else {
            if (is != null)             is.close();
          }
        }
        log.warn(errorBuilder.toString());
      }
    }
 catch (    IOException ioe) {
      log.warn(ioe);
    }
  }
  return super.logout();
}
