{
  DeploymentUnit deploymentUnit=phaseContext.getDeploymentUnit();
  WarMetaData warMetaData=deploymentUnit.getAttachment(WarMetaData.ATTACHMENT_KEY);
  if (warMetaData == null) {
    return;
  }
  JBossWebMetaData webMetaData=warMetaData.getMergedJBossWebMetaData();
  if (webMetaData == null) {
    webMetaData=new JBossWebMetaData();
    warMetaData.setMergedJBossWebMetaData(webMetaData);
  }
  LoginConfigMetaData loginConfig=webMetaData.getLoginConfig();
  try {
    boolean webRequiresKC=loginConfig != null && "KEYCLOAK-SAML".equalsIgnoreCase(loginConfig.getAuthMethod());
    boolean hasSubsystemConfig=Configuration.INSTANCE.isSecureDeployment(deploymentUnit);
    if (hasSubsystemConfig || webRequiresKC) {
      log.debug("Setting up KEYCLOAK-SAML auth method for WAR: " + deploymentUnit.getName());
      if (hasSubsystemConfig) {
        addXMLData(getXML(deploymentUnit),warMetaData);
        if (loginConfig != null) {
          loginConfig.setAuthMethod("KEYCLOAK-SAML");
        }
 else {
          log.warn("Failed to set up KEYCLOAK-SAML auth method for WAR: " + deploymentUnit.getName() + " (loginConfig == null)");
        }
      }
      addValve(webMetaData);
      KeycloakLogger.ROOT_LOGGER.deploymentSecured(deploymentUnit.getName());
    }
  }
 catch (  Exception e) {
    throw new DeploymentUnitProcessingException("Failed to configure KeycloakSamlExtension from subsystem model",e);
  }
}
