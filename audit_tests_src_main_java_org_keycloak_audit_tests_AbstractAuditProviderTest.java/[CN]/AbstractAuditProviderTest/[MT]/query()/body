{
  long oldest=System.currentTimeMillis() - 30000;
  long newest=System.currentTimeMillis() + 30000;
  provider.onEvent(create(EventType.LOGIN,"realmId","clientId","userId","127.0.0.1","error"));
  provider.onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId","127.0.0.1","error"));
  provider.onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId2","127.0.0.1","error"));
  provider.onEvent(create(EventType.LOGIN,"realmId2","clientId","userId","127.0.0.1","error"));
  provider.onEvent(create(oldest,EventType.LOGIN,"realmId","clientId2","userId","127.0.0.1","error"));
  provider.onEvent(create(EventType.LOGIN,"realmId","clientId","userId2","127.0.0.1","error"));
  provider.close();
  provider=factory.create(null);
  Assert.assertEquals(5,provider.createQuery().client("clientId").getResultList().size());
  Assert.assertEquals(5,provider.createQuery().realm("realmId").getResultList().size());
  Assert.assertEquals(4,provider.createQuery().event(EventType.LOGIN).getResultList().size());
  Assert.assertEquals(6,provider.createQuery().event(EventType.LOGIN,EventType.REGISTER).getResultList().size());
  Assert.assertEquals(4,provider.createQuery().user("userId").getResultList().size());
  Assert.assertEquals(1,provider.createQuery().user("userId").event(EventType.REGISTER).getResultList().size());
  Assert.assertEquals(2,provider.createQuery().maxResults(2).getResultList().size());
  Assert.assertEquals(1,provider.createQuery().firstResult(5).getResultList().size());
  Assert.assertEquals(newest,provider.createQuery().maxResults(1).getResultList().get(0).getTime());
  Assert.assertEquals(oldest,provider.createQuery().firstResult(5).maxResults(1).getResultList().get(0).getTime());
}
