{
  AuthenticationLinkModel authLink=user.getAuthenticationLink();
  if (authLink == null) {
    List<AuthenticationProviderModel> configuredProviders=getConfiguredProviderModels(realm);
    for (    AuthenticationProviderModel providerModel : configuredProviders) {
      if (providerModel.isPasswordUpdateSupported()) {
        AuthenticationProvider delegate=getProvider(providerModel.getProviderName());
        if (delegate != null) {
          AuthUser authUser=delegate.getUser(realm,providerModel.getConfig(),user.getLoginName());
          if (authUser != null) {
            if (providerModel.getProviderName().equals(AuthenticationProviderModel.DEFAULT_PROVIDER.getProviderName())) {
              authLink=new AuthenticationLinkModel(providerModel.getProviderName(),authUser.getId());
              user.setAuthenticationLink(authLink);
              logger.infof("User '%s' linked with provider '%s'",authUser.getUsername(),authUser.getProviderName());
            }
 else {
              throw new AuthenticationProviderException("User " + authUser.getUsername() + " exists in provider "+ authUser.getProviderName()+ " but is not linked with model user");
            }
          }
 else {
            String userIdInProvider=delegate.registerUser(realm,providerModel.getConfig(),user.getLoginName());
            authLink=new AuthenticationLinkModel(providerModel.getProviderName(),userIdInProvider);
            user.setAuthenticationLink(authLink);
            logger.infof("User '%s' registered in provider '%s' and linked",user.getLoginName(),providerModel.getProviderName());
          }
          break;
        }
      }
    }
    if (authLink == null) {
      logger.warnf("No providers found where password update is supported for user '%s'",user.getLoginName());
      return false;
    }
  }
  String providerName=authLink.getAuthProvider();
  AuthenticationProviderModel providerModel=getConfiguredProviderModel(realm,providerName);
  if (providerModel == null) {
    return false;
  }
  String username=user.getLoginName();
  if (providerModel.isPasswordUpdateSupported()) {
    try {
      AuthenticationProvider delegate=getProvider(providerName);
      if (delegate == null) {
        return false;
      }
      checkCorrectAuthLink(delegate,providerModel,authLink,username);
      if (delegate.updateCredential(realm,providerModel.getConfig(),user.getLoginName(),password)) {
        logger.debugf("Updated password in authentication provider '%s' for user '%s'",providerName,username);
        return true;
      }
 else {
        logger.warnf("Password not updated in authentication provider '%s' for user '%s'",providerName,username);
        return false;
      }
    }
 catch (    AuthenticationProviderException ape) {
      logger.warn("Failed to update password: " + ape.getMessage());
      throw ape;
    }
  }
 else {
    logger.warnf("Skip password update for authentication provider '%s' for user '%s'",providerName,username);
    return false;
  }
}
