{
  try {
    AssertionType assertion=getAssertion(responseType);
    SubjectType subject=assertion.getSubject();
    SubjectType.STSubType subType=subject.getSubType();
    NameIDType subjectNameID=(NameIDType)subType.getBaseID();
    Map<String,String> notes=new HashMap<>();
    notes.put("SAML_FEDERATED_SUBJECT",subjectNameID.getValue());
    if (subjectNameID.getFormat() != null)     notes.put("SAML_FEDERATED_SUBJECT_NAMEFORMAT",subjectNameID.getFormat().toString());
    FederatedIdentity identity=new FederatedIdentity(subjectNameID.getValue());
    identity.setUsername(subjectNameID.getValue());
    if (subjectNameID.getFormat().toString().equals(JBossSAMLURIConstants.NAMEID_FORMAT_EMAIL.get())) {
      identity.setEmail(subjectNameID.getValue());
    }
    if (config.isStoreToken()) {
      identity.setToken(samlResponse);
    }
    AuthnStatementType authn=null;
    for (    Object statement : assertion.getStatements()) {
      if (statement instanceof AuthnStatementType) {
        authn=(AuthnStatementType)statement;
        break;
      }
    }
    if (authn != null && authn.getSessionIndex() != null) {
      notes.put(SAML_FEDERATED_SESSION_INDEX,authn.getSessionIndex());
    }
    return callback.authenticated(notes,config,identity,relayState);
  }
 catch (  Exception e) {
    throw new IdentityBrokerException("Could not process response from SAML identity provider.",e);
  }
}
