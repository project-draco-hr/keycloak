{
  AssertionType assertion=(AssertionType)context.getContextData().get(SAMLEndpoint.SAML_ASSERTION);
  String template=mapperModel.getConfig().get(TEMPLATE);
  Matcher m=substitution.matcher(template);
  StringBuffer sb=new StringBuffer();
  while (m.find()) {
    String variable=m.group(1);
    if (variable.equals("ALIAS")) {
      m.appendReplacement(sb,context.getIdpConfig().getAlias());
    }
 else     if (variable.equals("UUID")) {
      m.appendReplacement(sb,KeycloakModelUtils.generateId());
    }
 else     if (variable.equals("NAMEID")) {
      SubjectType subject=assertion.getSubject();
      SubjectType.STSubType subType=subject.getSubType();
      NameIDType subjectNameID=(NameIDType)subType.getBaseID();
      m.appendReplacement(sb,subjectNameID.getValue());
    }
 else     if (variable.startsWith("ATTRIBUTE.")) {
      String name=variable.substring("ATTRIBUTE.".length());
      String value="";
      for (      AttributeStatementType statement : assertion.getAttributeStatements()) {
        for (        AttributeStatementType.ASTChoiceType choice : statement.getAttributes()) {
          AttributeType attr=choice.getAttribute();
          if (name.equals(attr.getName()) || name.equals(attr.getFriendlyName())) {
            List<Object> attributeValue=attr.getAttributeValue();
            if (attributeValue != null && !attributeValue.isEmpty()) {
              value=attributeValue.get(0).toString();
            }
            break;
          }
        }
      }
      m.appendReplacement(sb,value);
    }
 else {
      m.appendReplacement(sb,m.group(1));
    }
  }
  m.appendTail(sb);
  context.setModelUsername(sb.toString());
}
