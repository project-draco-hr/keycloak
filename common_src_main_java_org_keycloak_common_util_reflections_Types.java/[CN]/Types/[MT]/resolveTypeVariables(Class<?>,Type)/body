{
  if (type instanceof TypeVariable) {
    Type newType=resolveTypeVariable(root,(TypeVariable)type);
    return (newType == null) ? type : newType;
  }
 else   if (type instanceof ParameterizedType) {
    final ParameterizedType param=(ParameterizedType)type;
    final Type[] actuals=new Type[param.getActualTypeArguments().length];
    for (int i=0; i < actuals.length; i++) {
      Type newType=resolveTypeVariables(root,param.getActualTypeArguments()[i]);
      actuals[i]=newType == null ? param.getActualTypeArguments()[i] : newType;
    }
    return new ParameterizedType(){
      @Override public Type[] getActualTypeArguments(){
        return actuals;
      }
      @Override public Type getRawType(){
        return param.getRawType();
      }
      @Override public Type getOwnerType(){
        return param.getOwnerType();
      }
    }
;
  }
 else   if (type instanceof GenericArrayType) {
    GenericArrayType arrayType=(GenericArrayType)type;
    final Type componentType=resolveTypeVariables(root,arrayType.getGenericComponentType());
    if (componentType == null)     return type;
    return new GenericArrayType(){
      @Override public Type getGenericComponentType(){
        return componentType;
      }
    }
;
  }
 else {
    return type;
  }
}
