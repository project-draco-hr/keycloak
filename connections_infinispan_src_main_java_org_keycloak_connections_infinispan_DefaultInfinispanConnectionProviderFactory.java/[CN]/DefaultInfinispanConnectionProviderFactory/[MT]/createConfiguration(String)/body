{
  Config.Scope cacheConfig=config.scope("caches",cacheName);
  ConfigurationBuilder cb=new ConfigurationBuilder();
  String cacheMode=cacheConfig.get("cacheMode","local");
  boolean async=cacheConfig.getBoolean("async",false);
  if (cacheMode.equalsIgnoreCase("replicated")) {
    cb.clustering().cacheMode(async ? CacheMode.REPL_ASYNC : CacheMode.REPL_SYNC);
  }
 else   if (cacheMode.equalsIgnoreCase("distributed")) {
    cb.clustering().cacheMode(async ? CacheMode.DIST_ASYNC : CacheMode.DIST_SYNC);
    int owners=cacheConfig.getInt("owners",2);
    int segments=cacheConfig.getInt("segments",60);
    cb.clustering().hash().numOwners(owners).numSegments(segments);
  }
 else   if (cacheMode.equalsIgnoreCase("invalidation")) {
    cb.clustering().cacheMode(async ? CacheMode.INVALIDATION_ASYNC : CacheMode.INVALIDATION_SYNC);
  }
 else   if (!cacheMode.equalsIgnoreCase("local")) {
    throw new RuntimeException("Invalid cache mode " + cacheMode);
  }
  logger.debugv("Configured cache {0} with mode={1}, async={2}",cacheName,cacheMode,async);
  return cb.build();
}
