{
  if (emf == null) {
synchronized (this) {
      if (emf == null) {
        logger.debug("Initializing JPA connections");
        Connection connection=null;
        String unitName=config.get("unitName");
        String databaseSchema=config.get("databaseSchema");
        Map<String,Object> properties=new HashMap<String,Object>();
        if (unitName == null) {
          unitName="keycloak-default";
          String dataSource=config.get("dataSource");
          if (dataSource != null) {
            if (config.getBoolean("jta",false)) {
              properties.put(AvailableSettings.JTA_DATASOURCE,dataSource);
            }
 else {
              properties.put(AvailableSettings.NON_JTA_DATASOURCE,dataSource);
            }
          }
 else {
            properties.put(AvailableSettings.JDBC_URL,config.get("url"));
            properties.put(AvailableSettings.JDBC_DRIVER,config.get("driver"));
            String user=config.get("user");
            if (user != null) {
              properties.put(AvailableSettings.JDBC_USER,user);
            }
            String password=config.get("password");
            if (password != null) {
              properties.put(AvailableSettings.JDBC_PASSWORD,password);
            }
          }
          String driverDialect=config.get("driverDialect");
          if (driverDialect != null && driverDialect.length() > 0) {
            properties.put("hibernate.dialect",driverDialect);
          }
          if (databaseSchema != null) {
            if (databaseSchema.equals("development-update")) {
              properties.put("hibernate.hbm2ddl.auto","update");
              databaseSchema=null;
            }
 else             if (databaseSchema.equals("development-validate")) {
              properties.put("hibernate.hbm2ddl.auto","validate");
              databaseSchema=null;
            }
          }
          properties.put("hibernate.show_sql",config.getBoolean("showSql",false));
          properties.put("hibernate.format_sql",config.getBoolean("formatSql",true));
        }
        if (databaseSchema != null) {
          logger.trace("Updating database");
          JpaUpdaterProvider updater=session.getProvider(JpaUpdaterProvider.class);
          connection=getConnection();
          if (databaseSchema.equals("update")) {
            String currentVersion=null;
            try {
              ResultSet resultSet=connection.createStatement().executeQuery(updater.getCurrentVersionSql());
              if (resultSet.next()) {
                currentVersion=resultSet.getString(1);
              }
            }
 catch (            SQLException e) {
            }
            if (currentVersion == null || !JpaUpdaterProvider.LAST_VERSION.equals(currentVersion)) {
              updater.update(connection);
            }
 else {
              logger.debug("Database is up to date");
            }
          }
 else           if (databaseSchema.equals("validate")) {
            updater.validate(connection);
          }
 else {
            throw new RuntimeException("Invalid value for databaseSchema: " + databaseSchema);
          }
          logger.trace("Database update completed");
        }
        logger.trace("Creating EntityManagerFactory");
        emf=Persistence.createEntityManagerFactory(unitName,properties);
        logger.trace("EntityManagerFactory created");
        if (connection != null) {
          try {
            connection.close();
          }
 catch (          SQLException e) {
            logger.warn(e);
          }
        }
      }
    }
  }
}
