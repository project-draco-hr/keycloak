{
  if (client == null) {
synchronized (this) {
      if (client == null) {
        try {
          String host=config.get("host",ServerAddress.defaultHost());
          int port=config.getInt("port",ServerAddress.defaultPort());
          String dbName=config.get("db","keycloak");
          String user=config.get("user");
          String password=config.get("password");
          MongoClientOptions clientOptions=getClientOptions();
          if (user != null && password != null) {
            MongoCredential credential=MongoCredential.createMongoCRCredential(user,dbName,password.toCharArray());
            client=new MongoClient(new ServerAddress(host,port),Collections.singletonList(credential),clientOptions);
          }
 else {
            client=new MongoClient(new ServerAddress(host,port),clientOptions);
          }
          this.db=client.getDB(dbName);
          String databaseSchema=config.get("databaseSchema");
          if (databaseSchema != null) {
            if (databaseSchema.equals("update")) {
              MongoUpdaterProvider mongoUpdater=session.getProvider(MongoUpdaterProvider.class);
              if (mongoUpdater == null) {
                throw new RuntimeException("Can't update database: Mongo updater provider not found");
              }
              mongoUpdater.update(session,db);
            }
 else {
              throw new RuntimeException("Invalid value for databaseSchema: " + databaseSchema);
            }
          }
          this.mongoStore=new MongoStoreImpl(db,getManagedEntities());
          logger.debugv("Initialized mongo model. host: %s, port: %d, db: %s",host,port,dbName);
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
}
