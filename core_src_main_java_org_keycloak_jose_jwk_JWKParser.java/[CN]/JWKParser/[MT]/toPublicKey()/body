{
  String algorithm=jwk.getKeyType();
  if (RSAPublicJWK.RSA.equals(algorithm)) {
    BigInteger modulus=new BigInteger(1,Base64Url.decode(jwk.getOtherClaims().get(RSAPublicJWK.MODULUS).toString()));
    BigInteger publicExponent=new BigInteger(1,Base64Url.decode(jwk.getOtherClaims().get(RSAPublicJWK.PUBLIC_EXPONENT).toString()));
    try {
      return KeyFactory.getInstance("RSA").generatePublic(new RSAPublicKeySpec(modulus,publicExponent));
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
  }
 else {
    throw new RuntimeException("Unsupported algorithm " + algorithm);
  }
}
