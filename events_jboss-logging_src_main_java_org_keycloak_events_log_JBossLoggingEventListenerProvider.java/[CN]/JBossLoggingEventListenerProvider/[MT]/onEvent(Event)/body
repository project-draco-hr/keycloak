{
  Logger.Level level=event.getError() != null ? errorLevel : successLevel;
  if (logger.isEnabled(level)) {
    StringBuilder sb=new StringBuilder();
    sb.append("type=");
    sb.append(event.getType());
    sb.append(", realmId=");
    sb.append(event.getRealmId());
    sb.append(", clientId=");
    sb.append(event.getClientId());
    sb.append(", userId=");
    sb.append(event.getUserId());
    sb.append(", ipAddress=");
    sb.append(event.getIpAddress());
    if (event.getError() != null) {
      sb.append(", error=");
      sb.append(event.getError());
    }
    if (event.getDetails() != null) {
      for (      Map.Entry<String,String> e : event.getDetails().entrySet()) {
        sb.append(", ");
        sb.append(e.getKey());
        if (e.getValue() == null || e.getValue().indexOf(' ') == -1) {
          sb.append("=");
          sb.append(e.getValue());
        }
 else {
          sb.append("='");
          sb.append(e.getValue());
          sb.append("'");
        }
      }
    }
    if (logger.isTraceEnabled()) {
      KeycloakContext context=session.getContext();
      UriInfo uriInfo=context.getUri();
      HttpHeaders headers=context.getRequestHeaders();
      if (uriInfo != null) {
        sb.append(", requestUri=");
        sb.append(uriInfo.getRequestUri().toString());
      }
      if (headers != null) {
        sb.append(", cookies=[");
        boolean f=true;
        for (        Map.Entry<String,Cookie> e : headers.getCookies().entrySet()) {
          if (f) {
            f=false;
          }
 else {
            sb.append(", ");
          }
          sb.append(e.getValue().toString());
        }
        sb.append("]");
      }
    }
    logger.log(logger.isTraceEnabled() ? Logger.Level.TRACE : level,sb.toString());
  }
}
