{
  HttpClient client=new DefaultHttpClient();
  HttpGet get=new HttpGet(dbUri);
  try {
    if (userData.isHasAccessToken()) {
      get.addHeader("Authorization","Bearer " + userData.getAccessToken());
    }
    HttpResponse response=client.execute(get);
switch (response.getStatusLine().getStatusCode()) {
case 200:
      HttpEntity entity=response.getEntity();
    InputStream is=entity.getContent();
  try {
    return JsonSerialization.readValue(is,TypedList.class);
  }
  finally {
    is.close();
  }
case 401:
facesContext.addMessage(null,new FacesMessage("Status: 401. Request not authenticated! You need to retrieve access token first."));
break;
case 403:
facesContext.addMessage(null,new FacesMessage("Status: 403. Access token has insufficient privileges"));
break;
default :
facesContext.addMessage(null,new FacesMessage("Status: " + response.getStatusLine() + ". Not able to retrieve data. See log for details"));
logger.warn("Error occured. Status: " + response.getStatusLine());
}
return null;
}
 catch (IOException e) {
e.printStackTrace();
facesContext.addMessage(null,new FacesMessage("Unknown error. See log for details"));
return null;
}
}
