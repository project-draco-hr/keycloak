{
  JaxWsProxyFactoryBean factory=new JaxWsProxyFactoryBean();
  factory.setServiceClass(Product.class);
  factory.setAddress("http://localhost:8282/ProductServiceCF");
  Product simpleClient=(Product)factory.create();
  java.lang.String _getProduct_productIdVal=productId;
  javax.xml.ws.Holder<java.lang.String> _getProduct_productId=new javax.xml.ws.Holder<java.lang.String>(_getProduct_productIdVal);
  javax.xml.ws.Holder<java.lang.String> _getProduct_name=new javax.xml.ws.Holder<java.lang.String>();
  if (secured) {
    Client clientProxy=ClientProxy.getClient(simpleClient);
    KeycloakSecurityContext session=(KeycloakSecurityContext)req.getAttribute(KeycloakSecurityContext.class.getName());
    Map<String,List<String>> headers=new HashMap<String,List<String>>();
    headers.put("Authorization",Arrays.asList("Bearer " + session.getTokenString()));
    clientProxy.getRequestContext().put(Message.PROTOCOL_HEADERS,headers);
  }
  try {
    simpleClient.getProduct(_getProduct_productId,_getProduct_name);
    return String.format("Product received: id=%s, name=%s",_getProduct_productId.value,_getProduct_name.value);
  }
 catch (  UnknownProductFault upf) {
    return "UnknownProductFault has occurred. Details: " + upf.toString();
  }
catch (  WebServiceException wse) {
    String error="Can't receive product. Reason: " + wse.getMessage();
    if (wse.getCause() != null) {
      Throwable cause=wse.getCause();
      error=error + " Details: " + cause.getClass().getName()+ ": "+ cause.getMessage();
    }
    return error;
  }
}
