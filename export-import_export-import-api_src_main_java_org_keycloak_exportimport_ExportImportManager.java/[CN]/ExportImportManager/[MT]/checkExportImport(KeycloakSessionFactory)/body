{
  String exportImportAction=ExportImportConfig.getAction();
  String realmName=ExportImportConfig.getRealmName();
  boolean export=false;
  boolean importt=false;
  if (ExportImportConfig.ACTION_EXPORT.equals(exportImportAction)) {
    export=true;
  }
 else   if (ExportImportConfig.ACTION_IMPORT.equals(exportImportAction)) {
    importt=true;
  }
  if (export || importt) {
    String exportImportProviderId=ExportImportConfig.getProvider();
    logger.debug("Will use provider: " + exportImportProviderId);
    KeycloakSession session=sessionFactory.create();
    try {
      if (export) {
        ExportProvider exportProvider=session.getProvider(ExportProvider.class,exportImportProviderId);
        if (realmName == null) {
          logger.info("Full model export requested");
          exportProvider.exportModel(session);
        }
 else {
          logger.infof("Export of realm '%s' requested",realmName);
          exportProvider.exportRealm(session,realmName);
        }
        logger.info("Export finished successfully");
      }
 else {
        ImportProvider importProvider=session.getProvider(ImportProvider.class,exportImportProviderId);
        Strategy strategy=ExportImportConfig.getStrategy();
        if (realmName == null) {
          logger.infof("Full model import requested. Strategy: %s",strategy.toString());
          importProvider.importModel(session,strategy);
        }
 else {
          logger.infof("Import of realm '%s' requested. Strategy: %s",realmName,strategy.toString());
          importProvider.importRealm(session,realmName,strategy);
        }
        logger.info("Import finished successfully");
      }
    }
 catch (    Throwable ioe) {
      logger.error("Error during export/import",ioe);
    }
 finally {
      session.close();
    }
  }
}
