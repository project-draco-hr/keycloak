{
  Class<?> modelClass=getModelClass(model);
  checkPropertiesAvailable(modelClass,entity.getClass());
  Map<String,Property<Object>> modelProps=this.objectProperties.get(modelClass);
  Map<String,Property<Object>> entityProps=this.objectProperties.get(entity.getClass());
  Map<String,Property<Object>> entityPropsCopy=new HashMap<String,Property<Object>>(entityProps);
  logger.debugf("Properties of entity %s: %s",entity,entityProps.keySet());
  for (  Property<Object> modelProperty : modelProps.values()) {
    Property<Object> entityProperty=entityPropsCopy.get(modelProperty.getName());
    entityPropsCopy.remove(modelProperty.getName());
    if (entityProperty != null) {
      Object propertyValue=modelProperty.getValue(model);
      if (propertyValue instanceof Set) {
        Set propValueAsSet=(Set)propertyValue;
        entityProperty.setValue(entity,new ArrayList(propValueAsSet));
      }
 else {
        entityProperty.setValue(entity,propertyValue);
      }
      if (logger.isTraceEnabled()) {
        logger.tracef("Property %s successfully set in JSON to entity %s",modelProperty.getName(),entity);
      }
    }
 else {
      logger.debugf("Property %s not known in JSON for entity %s",modelProperty.getName(),entity);
    }
  }
  logger.debugf("Entity properties for manual setup: %s",entityPropsCopy.keySet());
}
