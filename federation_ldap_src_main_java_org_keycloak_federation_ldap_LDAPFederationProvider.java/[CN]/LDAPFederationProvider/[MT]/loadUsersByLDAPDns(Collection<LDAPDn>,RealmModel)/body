{
  LDAPQuery query=LDAPUtils.createQueryForUserSearch(this,realm);
  LDAPQueryConditionsBuilder conditionsBuilder=new LDAPQueryConditionsBuilder();
  Condition[] orSubconditions=new Condition[userDns.size()];
  int index=0;
  for (  LDAPDn userDn : userDns) {
    Condition condition=conditionsBuilder.equal(userDn.getFirstRdnAttrName(),userDn.getFirstRdnAttrValue());
    orSubconditions[index]=condition;
    index++;
  }
  Condition orCondition=conditionsBuilder.orCondition(orSubconditions);
  query.addWhereCondition(orCondition);
  List<LDAPObject> ldapUsers=query.getResultList();
  List<UserModel> result=new LinkedList<>();
  for (  LDAPObject ldapUser : ldapUsers) {
    String username=LDAPUtils.getUsername(ldapUser,getLdapIdentityStore().getConfig());
    UserModel kcUser=session.users().getUserByUsername(username,realm);
    if (!model.getId().equals(kcUser.getFederationLink())) {
      logger.warnf("Incorrect federation provider of user %s" + kcUser.getUsername());
    }
 else {
      result.add(kcUser);
    }
  }
  return result;
}
