{
  List<LDAPObject> results=new ArrayList<LDAPObject>();
  if (attributes.containsKey(USERNAME)) {
    LDAPObject user=loadLDAPUserByUsername(realm,attributes.get(USERNAME));
    if (user != null) {
      results.add(user);
    }
  }
  if (attributes.containsKey(EMAIL)) {
    LDAPObject user=queryByEmail(realm,attributes.get(EMAIL));
    if (user != null) {
      results.add(user);
    }
  }
  if (attributes.containsKey(FIRST_NAME) || attributes.containsKey(LAST_NAME)) {
    LDAPQuery ldapQuery=LDAPUtils.createQueryForUserSearch(this,realm);
    LDAPQueryConditionsBuilder conditionsBuilder=new LDAPQueryConditionsBuilder();
    if (attributes.containsKey(FIRST_NAME)) {
      ldapQuery.where(conditionsBuilder.equal(new QueryParameter(FIRST_NAME),attributes.get(FIRST_NAME)));
    }
    if (attributes.containsKey(LAST_NAME)) {
      ldapQuery.where(conditionsBuilder.equal(new QueryParameter(LAST_NAME),attributes.get(LAST_NAME)));
    }
    List<LDAPObject> ldapObjects=ldapQuery.getResultList();
    results.addAll(ldapObjects);
  }
  return results;
}
