{
  if (credential.getType().equals(UserCredentialModel.KERBEROS)) {
    if (kerberosConfig.isAllowKerberosAuthentication()) {
      String spnegoToken=credential.getValue();
      SPNEGOAuthenticator spnegoAuthenticator=factory.createSPNEGOAuthenticator(spnegoToken,kerberosConfig);
      spnegoAuthenticator.authenticate();
      Map<String,String> state=new HashMap<String,String>();
      if (spnegoAuthenticator.isAuthenticated()) {
        String username=spnegoAuthenticator.getAuthenticatedUsername();
        UserModel user=findOrCreateAuthenticatedUser(realm,username);
        if (user == null) {
          logger.warnf("Kerberos/SPNEGO authentication succeeded with username [%s], but couldn't find or create user with federation provider [%s]",username,model.getDisplayName());
          return CredentialValidationOutput.failed();
        }
 else {
          String delegationCredential=spnegoAuthenticator.getSerializedDelegationCredential();
          if (delegationCredential != null) {
            state.put(KerberosConstants.GSS_DELEGATION_CREDENTIAL,delegationCredential);
          }
          return new CredentialValidationOutput(user,CredentialValidationOutput.Status.AUTHENTICATED,state);
        }
      }
 else {
        state.put(KerberosConstants.RESPONSE_TOKEN,spnegoAuthenticator.getResponseToken());
        return new CredentialValidationOutput(null,CredentialValidationOutput.Status.CONTINUE,state);
      }
    }
  }
  return CredentialValidationOutput.failed();
}
