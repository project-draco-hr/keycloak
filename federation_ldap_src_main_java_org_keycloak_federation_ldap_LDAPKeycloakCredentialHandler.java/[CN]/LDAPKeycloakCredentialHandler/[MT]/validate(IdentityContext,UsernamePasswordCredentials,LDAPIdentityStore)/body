{
  credentials.setStatus(Credentials.Status.INVALID);
  credentials.setValidatedAccount(null);
  if (CREDENTIAL_LOGGER.isDebugEnabled()) {
    CREDENTIAL_LOGGER.debugf("Validating credentials [%s][%s] using identity store [%s] and credential handler [%s].",credentials.getClass(),credentials,store,this);
  }
  User account=getAccount(context,credentials.getUsername());
  if (account != null) {
    if (CREDENTIAL_LOGGER.isDebugEnabled()) {
      CREDENTIAL_LOGGER.debugf("Found account [%s] from credentials [%s].",account,credentials);
    }
    if (account.isEnabled()) {
      if (CREDENTIAL_LOGGER.isDebugEnabled()) {
        CREDENTIAL_LOGGER.debugf("Account [%s] is ENABLED.",account,credentials);
      }
      char[] password=credentials.getPassword().getValue();
      LDAPOperationManager operationManager=Reflections.invokeMethod(false,KeycloakLDAPIdentityStore.GET_OPERATION_MANAGER_METHOD,LDAPOperationManager.class,store);
      String bindingDN=getDNOfUser(account,getIdentityManager(context),store,operationManager);
      if (operationManager.authenticate(bindingDN,new String(password))) {
        credentials.setValidatedAccount(account);
        credentials.setStatus(Credentials.Status.VALID);
      }
    }
 else {
      if (CREDENTIAL_LOGGER.isDebugEnabled()) {
        CREDENTIAL_LOGGER.debugf("Account [%s] is DISABLED.",account,credentials);
      }
      credentials.setStatus(Credentials.Status.ACCOUNT_DISABLED);
    }
  }
 else {
    if (CREDENTIAL_LOGGER.isDebugEnabled()) {
      CREDENTIAL_LOGGER.debugf("Account NOT FOUND for credentials [%s][%s].",credentials.getClass(),credentials);
    }
  }
  if (CREDENTIAL_LOGGER.isDebugEnabled()) {
    CREDENTIAL_LOGGER.debugf("Credential [%s][%s] validated using identity store [%s] and credential handler [%s]. Status [%s]. Validated Account [%s]",credentials.getClass(),credentials,store,this,credentials.getStatus(),credentials.getValidatedAccount());
  }
}
