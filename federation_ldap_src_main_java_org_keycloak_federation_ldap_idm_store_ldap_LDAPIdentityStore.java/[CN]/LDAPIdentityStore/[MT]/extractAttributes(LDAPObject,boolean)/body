{
  BasicAttributes entryAttributes=new BasicAttributes();
  for (  Map.Entry<String,Object> attrEntry : ldapObject.getAttributes().entrySet()) {
    String attrName=attrEntry.getKey();
    Object attrValue=attrEntry.getValue();
    if (!ldapObject.getReadOnlyAttributeNames().contains(attrName.toLowerCase()) && (isCreate || !ldapObject.getRdnAttributeName().equalsIgnoreCase(attrName))) {
      if (String.class.isInstance(attrValue)) {
        if (attrValue.toString().trim().length() == 0) {
          attrValue=LDAPConstants.EMPTY_ATTRIBUTE_VALUE;
        }
        entryAttributes.put(attrName,attrValue);
      }
 else       if (Collection.class.isInstance(attrValue)) {
        BasicAttribute attr=new BasicAttribute(attrName);
        Collection<String> valueCollection=(Collection<String>)attrValue;
        for (        String val : valueCollection) {
          attr.add(val);
        }
        entryAttributes.put(attr);
      }
 else       if (attrValue == null || attrValue.toString().trim().length() == 0) {
        entryAttributes.put(attrName,LDAPConstants.EMPTY_ATTRIBUTE_VALUE);
      }
 else {
        throw new ModelException("Unexpected type of value of argument " + attrName + ". Value is "+ attrValue);
      }
    }
  }
  if (isCreate) {
    BasicAttribute objectClassAttribute=new BasicAttribute(LDAPConstants.OBJECT_CLASS);
    for (    String objectClassValue : ldapObject.getObjectClasses()) {
      objectClassAttribute.add(objectClassValue);
      if (objectClassValue.equalsIgnoreCase(LDAPConstants.GROUP_OF_NAMES) || objectClassValue.equalsIgnoreCase(LDAPConstants.GROUP_OF_ENTRIES) || objectClassValue.equalsIgnoreCase(LDAPConstants.GROUP_OF_UNIQUE_NAMES)) {
        entryAttributes.put(LDAPConstants.MEMBER,LDAPConstants.EMPTY_MEMBER_ATTRIBUTE_VALUE);
      }
    }
    entryAttributes.put(objectClassAttribute);
  }
  return entryAttributes;
}
