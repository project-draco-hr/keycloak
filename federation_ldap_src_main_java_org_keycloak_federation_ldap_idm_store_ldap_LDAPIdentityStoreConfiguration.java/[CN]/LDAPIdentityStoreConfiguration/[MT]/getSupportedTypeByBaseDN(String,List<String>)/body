{
  String entryBaseDN=entryDN.substring(entryDN.indexOf(LDAPConstants.COMMA) + 1);
  for (  LDAPMappingConfiguration mappingConfig : this.mappingConfig.values()) {
    if (mappingConfig.getBaseDN() != null) {
      if (mappingConfig.getBaseDN().equalsIgnoreCase(entryDN) || mappingConfig.getParentMapping().values().contains(entryDN)) {
        return mappingConfig.getMappedClass();
      }
      if (mappingConfig.getBaseDN().equalsIgnoreCase(entryBaseDN) || mappingConfig.getParentMapping().values().contains(entryBaseDN)) {
        return mappingConfig.getMappedClass();
      }
    }
  }
  for (  LDAPMappingConfiguration mappingConfig : this.mappingConfig.values()) {
    for (    String objectClass : objectClasses) {
      if (mappingConfig.getObjectClasses().contains(objectClass)) {
        return mappingConfig.getMappedClass();
      }
    }
  }
  throw new ModelException("No type found with Base DN [" + entryDN + "] or objectClasses ["+ objectClasses+ ".");
}
