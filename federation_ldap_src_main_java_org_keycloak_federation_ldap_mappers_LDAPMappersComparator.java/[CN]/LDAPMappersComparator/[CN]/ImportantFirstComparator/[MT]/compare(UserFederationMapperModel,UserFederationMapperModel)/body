{
  boolean isO1AttrMapper=o1.getFederationMapperType().equals(UserAttributeLDAPFederationMapperFactory.PROVIDER_ID);
  boolean isO2AttrMapper=o2.getFederationMapperType().equals(UserAttributeLDAPFederationMapperFactory.PROVIDER_ID);
  if (!isO1AttrMapper) {
    if (isO2AttrMapper) {
      return 1;
    }
 else {
      return 0;
    }
  }
 else   if (!isO2AttrMapper) {
    return -1;
  }
  String model1=o1.getConfig().get(UserAttributeLDAPFederationMapper.USER_MODEL_ATTRIBUTE);
  String model2=o2.getConfig().get(UserAttributeLDAPFederationMapper.USER_MODEL_ATTRIBUTE);
  boolean isO1UsernameMapper=model1 != null && model1.equalsIgnoreCase(UserModel.USERNAME);
  boolean isO2UsernameMapper=model2 != null && model2.equalsIgnoreCase(UserModel.USERNAME);
  if (!isO1UsernameMapper) {
    if (isO2UsernameMapper) {
      return 1;
    }
 else {
      return 0;
    }
  }
 else   if (!isO2UsernameMapper) {
    return -1;
  }
  String o1LdapAttr=o1.getConfig().get(UserAttributeLDAPFederationMapper.LDAP_ATTRIBUTE);
  String o2LdapAttr=o2.getConfig().get(UserAttributeLDAPFederationMapper.LDAP_ATTRIBUTE);
  boolean isO1LdapAttr=o1LdapAttr != null && ldapConfig.getUsernameLdapAttribute().equalsIgnoreCase(o1LdapAttr);
  boolean isO2LdapAttr=o2LdapAttr != null && ldapConfig.getUsernameLdapAttribute().equalsIgnoreCase(o2LdapAttr);
  if (!isO1LdapAttr) {
    if (isO2LdapAttr) {
      return 1;
    }
 else {
      return 0;
    }
  }
 else   if (!isO2LdapAttr) {
    return -1;
  }
  return 0;
}
