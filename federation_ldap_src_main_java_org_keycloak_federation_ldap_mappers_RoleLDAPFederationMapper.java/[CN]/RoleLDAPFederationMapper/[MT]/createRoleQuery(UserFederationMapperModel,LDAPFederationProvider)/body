{
  LDAPQuery ldapQuery=new LDAPQuery(ldapProvider);
  ldapQuery.setSearchScope(ldapProvider.getLdapIdentityStore().getConfig().getSearchScope());
  String rolesDn=getRolesDn(mapperModel);
  ldapQuery.setSearchDn(rolesDn);
  Collection<String> roleObjectClasses=getRoleObjectClasses(mapperModel,ldapProvider);
  ldapQuery.addObjectClasses(roleObjectClasses);
  String rolesRdnAttr=getRoleNameLdapAttribute(mapperModel);
  String customFilter=mapperModel.getConfig().get(RoleLDAPFederationMapper.ROLES_LDAP_FILTER);
  if (customFilter != null && customFilter.trim().length() > 0) {
    Condition customFilterCondition=new LDAPQueryConditionsBuilder().addCustomLDAPFilter(customFilter);
    ldapQuery.addWhereCondition(customFilterCondition);
  }
  String membershipAttr=getMembershipLdapAttribute(mapperModel);
  ldapQuery.addReturningLdapAttribute(rolesRdnAttr);
  ldapQuery.addReturningLdapAttribute(membershipAttr);
  return ldapQuery;
}
