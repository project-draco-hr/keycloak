{
  String userModelAttrName=mapperModel.getConfig().get(USER_MODEL_ATTRIBUTE);
  String ldapAttrName=mapperModel.getConfig().get(LDAP_ATTRIBUTE);
  boolean isMandatoryInLdap=parseBooleanParameter(mapperModel,IS_MANDATORY_IN_LDAP);
  Property<Object> userModelProperty=userModelProperties.get(userModelAttrName.toLowerCase());
  if (userModelProperty != null) {
    Object attrValue=userModelProperty.getValue(localUser);
    if (attrValue == null) {
      if (isMandatoryInLdap) {
        ldapUser.setSingleAttribute(ldapAttrName,LDAPConstants.EMPTY_ATTRIBUTE_VALUE);
      }
 else {
        ldapUser.setAttribute(ldapAttrName,new LinkedHashSet<String>());
      }
    }
 else {
      ldapUser.setSingleAttribute(ldapAttrName,attrValue.toString());
    }
  }
 else {
    List<String> attrValues=localUser.getAttribute(userModelAttrName);
    if (attrValues.size() == 0) {
      if (isMandatoryInLdap) {
        ldapUser.setSingleAttribute(ldapAttrName,LDAPConstants.EMPTY_ATTRIBUTE_VALUE);
      }
 else {
        ldapUser.setAttribute(ldapAttrName,new LinkedHashSet<String>());
      }
    }
 else {
      ldapUser.setAttribute(ldapAttrName,new LinkedHashSet<>(attrValues));
    }
  }
  if (isReadOnly()) {
    ldapUser.addReadOnlyAttributeName(ldapAttrName);
  }
}
