{
  if (role.getContainer().equals(roleContainer)) {
    LDAPQuery ldapQuery=createRoleQuery();
    LDAPQueryConditionsBuilder conditionsBuilder=new LDAPQueryConditionsBuilder();
    Condition roleNameCondition=conditionsBuilder.equal(config.getRoleNameLdapAttribute(),role.getName());
    String membershipUserAttr=LDAPUtils.getMemberValueOfChildObject(ldapUser,config.getMembershipTypeLdapAttribute());
    Condition membershipCondition=conditionsBuilder.equal(config.getMembershipLdapAttribute(),membershipUserAttr);
    ldapQuery.addWhereCondition(roleNameCondition).addWhereCondition(membershipCondition);
    LDAPObject ldapRole=ldapQuery.getFirstResult();
    if (ldapRole == null) {
      if (config.getMode() == LDAPGroupMapperMode.READ_ONLY) {
        super.deleteRoleMapping(role);
      }
    }
 else {
      if (config.getMode() == LDAPGroupMapperMode.READ_ONLY) {
        throw new ModelException("Not possible to delete LDAP role mappings as mapper mode is READ_ONLY");
      }
 else {
        cachedLDAPRoleMappings=null;
        deleteRoleMappingInLDAP(ldapUser,ldapRole);
      }
    }
  }
 else {
    super.deleteRoleMapping(role);
  }
}
