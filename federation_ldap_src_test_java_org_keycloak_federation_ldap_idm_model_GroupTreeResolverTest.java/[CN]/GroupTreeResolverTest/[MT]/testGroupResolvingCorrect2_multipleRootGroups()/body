{
  GroupTreeResolver.Group group1=new GroupTreeResolver.Group("group1","group8");
  GroupTreeResolver.Group group2=new GroupTreeResolver.Group("group2");
  GroupTreeResolver.Group group3=new GroupTreeResolver.Group("group3","group2");
  GroupTreeResolver.Group group4=new GroupTreeResolver.Group("group4","group1","group5");
  GroupTreeResolver.Group group5=new GroupTreeResolver.Group("group5","group6","group7");
  GroupTreeResolver.Group group6=new GroupTreeResolver.Group("group6");
  GroupTreeResolver.Group group7=new GroupTreeResolver.Group("group7");
  GroupTreeResolver.Group group8=new GroupTreeResolver.Group("group8","group9");
  GroupTreeResolver.Group group9=new GroupTreeResolver.Group("group9");
  List<GroupTreeResolver.Group> groups=Arrays.asList(group1,group2,group3,group4,group5,group6,group7,group8,group9);
  GroupTreeResolver resolver=new GroupTreeResolver();
  List<GroupTreeResolver.GroupTreeEntry> groupTree=resolver.resolveGroupTree(groups);
  Assert.assertEquals(2,groupTree.size());
  Assert.assertEquals("{ group3 -> [ { group2 -> [  ]} ]}",groupTree.get(0).toString());
  Assert.assertEquals("{ group4 -> [ { group1 -> [ { group8 -> [ { group9 -> [  ]} ]} ]}{ group5 -> [ { group6 -> [  ]}{ group7 -> [  ]} ]} ]}",groupTree.get(1).toString());
}
