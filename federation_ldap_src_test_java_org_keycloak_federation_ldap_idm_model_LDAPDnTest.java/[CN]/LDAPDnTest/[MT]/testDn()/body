{
  LDAPDn dn=LDAPDn.fromString("dc=keycloak, dc=org");
  dn.addFirst("ou","People");
  Assert.assertEquals("ou=People,dc=keycloak,dc=org",dn.toString());
  dn.addFirst("uid","Johny,Depp+Pepp");
  Assert.assertEquals("uid=Johny\\,Depp\\+Pepp,ou=People,dc=keycloak,dc=org",dn.toString());
  Assert.assertEquals(LDAPDn.fromString("uid=Johny\\,Depp\\+Pepp,ou=People,dc=keycloak,dc=org"),dn);
  Assert.assertEquals("ou=People,dc=keycloak,dc=org",dn.getParentDn());
  Assert.assertTrue(dn.isDescendantOf(LDAPDn.fromString("dc=keycloak, dc=org")));
  Assert.assertTrue(dn.isDescendantOf(LDAPDn.fromString("dc=org")));
  Assert.assertTrue(dn.isDescendantOf(LDAPDn.fromString("DC=keycloak, DC=org")));
  Assert.assertFalse(dn.isDescendantOf(LDAPDn.fromString("dc=keycloakk, dc=org")));
  Assert.assertFalse(dn.isDescendantOf(dn));
  Assert.assertEquals("uid",dn.getFirstRdnAttrName());
  Assert.assertEquals("Johny\\,Depp\\+Pepp",dn.getFirstRdnAttrValue());
}
