{
  Set<UserFederationMapperModel> result=new HashSet<>();
  UserFederationMapperModel mapperModel=KeycloakModelUtils.createUserFederationMapperModel("first name","fed-provider",UserAttributeLDAPFederationMapperFactory.PROVIDER_ID,UserAttributeLDAPFederationMapper.USER_MODEL_ATTRIBUTE,UserModel.FIRST_NAME,UserAttributeLDAPFederationMapper.LDAP_ATTRIBUTE,LDAPConstants.GIVENNAME,UserAttributeLDAPFederationMapper.READ_ONLY,"true",UserAttributeLDAPFederationMapper.ALWAYS_READ_VALUE_FROM_LDAP,"true",UserAttributeLDAPFederationMapper.IS_MANDATORY_IN_LDAP,"true");
  mapperModel.setId("idd1");
  result.add(mapperModel);
  mapperModel=KeycloakModelUtils.createUserFederationMapperModel("username-cn","fed-provider",UserAttributeLDAPFederationMapperFactory.PROVIDER_ID,UserAttributeLDAPFederationMapper.USER_MODEL_ATTRIBUTE,UserModel.USERNAME,UserAttributeLDAPFederationMapper.LDAP_ATTRIBUTE,LDAPConstants.CN,UserAttributeLDAPFederationMapper.READ_ONLY,"true",UserAttributeLDAPFederationMapper.ALWAYS_READ_VALUE_FROM_LDAP,"false",UserAttributeLDAPFederationMapper.IS_MANDATORY_IN_LDAP,"true");
  mapperModel.setId("idd2");
  result.add(mapperModel);
  mapperModel=KeycloakModelUtils.createUserFederationMapperModel("full name","fed-provider",FullNameLDAPFederationMapperFactory.PROVIDER_ID,FullNameLDAPFederationMapper.LDAP_FULL_NAME_ATTRIBUTE,LDAPConstants.CN,UserAttributeLDAPFederationMapper.READ_ONLY,"true");
  mapperModel.setId("idd3");
  result.add(mapperModel);
  mapperModel=KeycloakModelUtils.createUserFederationMapperModel("sAMAccountName","fed-provider",UserAttributeLDAPFederationMapperFactory.PROVIDER_ID,UserAttributeLDAPFederationMapper.USER_MODEL_ATTRIBUTE,UserModel.USERNAME,UserAttributeLDAPFederationMapper.LDAP_ATTRIBUTE,LDAPConstants.SAM_ACCOUNT_NAME,UserAttributeLDAPFederationMapper.READ_ONLY,"false",UserAttributeLDAPFederationMapper.ALWAYS_READ_VALUE_FROM_LDAP,"false",UserAttributeLDAPFederationMapper.IS_MANDATORY_IN_LDAP,"true");
  mapperModel.setId("idd4");
  result.add(mapperModel);
  return result;
}
