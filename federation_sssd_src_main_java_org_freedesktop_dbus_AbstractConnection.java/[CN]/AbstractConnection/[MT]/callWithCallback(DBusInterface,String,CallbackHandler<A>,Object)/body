{
  if (Debug.debug)   Debug.print(Debug.VERBOSE,"callWithCallback(" + object + ","+ m+ ", "+ callback);
  Class[] types=new Class[parameters.length];
  for (int i=0; i < parameters.length; i++)   types[i]=parameters[i].getClass();
  RemoteObject ro=importedObjects.get(object);
  try {
    Method me;
    if (null == ro.iface)     me=object.getClass().getMethod(m,types);
 else     me=ro.iface.getMethod(m,types);
    RemoteInvocationHandler.executeRemoteMethod(ro,me,this,RemoteInvocationHandler.CALL_TYPE_CALLBACK,callback,parameters);
  }
 catch (  DBusExecutionException DBEe) {
    if (EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,DBEe);
    throw DBEe;
  }
catch (  Exception e) {
    if (EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,e);
    throw new DBusExecutionException(e.getMessage());
  }
}
