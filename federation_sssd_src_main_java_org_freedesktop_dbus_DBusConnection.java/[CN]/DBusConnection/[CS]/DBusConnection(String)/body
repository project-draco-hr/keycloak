{
  super(address);
  busnames=new Vector<String>();
synchronized (_reflock) {
    _refcount=1;
  }
  try {
    transport=new Transport(addr,AbstractConnection.TIMEOUT);
    connected=true;
  }
 catch (  IOException IOe) {
    if (EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,IOe);
    disconnect();
    throw new DBusException(getString("connectionFailure") + IOe.getMessage());
  }
catch (  ParseException Pe) {
    if (EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,Pe);
    disconnect();
    throw new DBusException(getString("connectionFailure") + Pe.getMessage());
  }
  listen();
  DBusSigHandler h=new _sighandler();
  addSigHandlerWithoutMatch(org.freedesktop.DBus.Local.Disconnected.class,h);
  addSigHandlerWithoutMatch(org.freedesktop.DBus.NameAcquired.class,h);
  _dbus=getRemoteObject("org.freedesktop.DBus","/org/freedesktop/DBus",DBus.class);
  try {
    busnames.add(_dbus.Hello());
  }
 catch (  DBusExecutionException DBEe) {
    if (EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,DBEe);
    throw new DBusException(DBEe.getMessage());
  }
}
