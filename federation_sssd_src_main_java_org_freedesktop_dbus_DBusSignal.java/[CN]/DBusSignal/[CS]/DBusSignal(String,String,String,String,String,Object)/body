{
  super(Message.Endian.BIG,Message.MessageType.SIGNAL,(byte)0);
  if (null == path || null == member || null == iface)   throw new MessageFormatException(getString("missingPathInterfaceSignal"));
  headers.put(Message.HeaderField.PATH,path);
  headers.put(Message.HeaderField.MEMBER,member);
  headers.put(Message.HeaderField.INTERFACE,iface);
  Vector<Object> hargs=new Vector<Object>();
  hargs.add(new Object[]{Message.HeaderField.PATH,new Object[]{ArgumentType.OBJECT_PATH_STRING,path}});
  hargs.add(new Object[]{Message.HeaderField.INTERFACE,new Object[]{ArgumentType.STRING_STRING,iface}});
  hargs.add(new Object[]{Message.HeaderField.MEMBER,new Object[]{ArgumentType.STRING_STRING,member}});
  if (null != source) {
    headers.put(Message.HeaderField.SENDER,source);
    hargs.add(new Object[]{Message.HeaderField.SENDER,new Object[]{ArgumentType.STRING_STRING,source}});
  }
  if (null != sig) {
    hargs.add(new Object[]{Message.HeaderField.SIGNATURE,new Object[]{ArgumentType.SIGNATURE_STRING,sig}});
    headers.put(Message.HeaderField.SIGNATURE,sig);
    setArgs(args);
  }
  blen=new byte[4];
  appendBytes(blen);
  append("ua(yv)",++serial,hargs.toArray());
  pad((byte)8);
  long c=bytecounter;
  if (null != sig)   append(sig,args);
  marshallint(bytecounter - c,blen,0,4);
  bodydone=true;
}
