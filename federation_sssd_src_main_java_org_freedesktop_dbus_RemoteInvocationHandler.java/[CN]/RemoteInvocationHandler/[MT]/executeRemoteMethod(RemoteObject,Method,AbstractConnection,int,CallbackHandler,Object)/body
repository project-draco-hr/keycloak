{
  Type[] ts=m.getGenericParameterTypes();
  String sig=null;
  if (ts.length > 0)   try {
    sig=Marshalling.getDBusType(ts);
    args=Marshalling.convertParameters(args,ts,conn);
  }
 catch (  DBusException DBe) {
    throw new DBusExecutionException(getString("contructDBusTypeFailure") + DBe.getMessage());
  }
  MethodCall call;
  byte flags=0;
  if (!ro.autostart)   flags|=Message.Flags.NO_AUTO_START;
  if (syncmethod == CALL_TYPE_ASYNC)   flags|=Message.Flags.ASYNC;
  if (m.isAnnotationPresent(DBus.Method.NoReply.class))   flags|=Message.Flags.NO_REPLY_EXPECTED;
  try {
    String name;
    if (m.isAnnotationPresent(DBusMemberName.class))     name=m.getAnnotation(DBusMemberName.class).value();
 else     name=m.getName();
    if (null == ro.iface)     call=new MethodCall(ro.busname,ro.objectpath,null,name,flags,sig,args);
 else {
      if (null != ro.iface.getAnnotation(DBusInterfaceName.class)) {
        call=new MethodCall(ro.busname,ro.objectpath,ro.iface.getAnnotation(DBusInterfaceName.class).value(),name,flags,sig,args);
      }
 else       call=new MethodCall(ro.busname,ro.objectpath,AbstractConnection.dollar_pattern.matcher(ro.iface.getName()).replaceAll("."),name,flags,sig,args);
    }
  }
 catch (  DBusException DBe) {
    if (AbstractConnection.EXCEPTION_DEBUG && Debug.debug)     Debug.print(Debug.ERR,DBe);
    throw new DBusExecutionException(getString("constructOutgoingMethodCallFailure") + DBe.getMessage());
  }
  if (null == conn.outgoing)   throw new NotConnected(getString("notConnected"));
switch (syncmethod) {
case CALL_TYPE_ASYNC:
    conn.queueOutgoing(call);
  return new DBusAsyncReply(call,m,conn);
case CALL_TYPE_CALLBACK:
synchronized (conn.pendingCallbacks) {
  if (Debug.debug)   Debug.print(Debug.VERBOSE,"Queueing Callback " + callback + " for "+ call);
  conn.pendingCallbacks.put(call,callback);
  conn.pendingCallbackReplys.put(call,new DBusAsyncReply(call,m,conn));
}
conn.queueOutgoing(call);
return null;
case CALL_TYPE_SYNC:
conn.queueOutgoing(call);
break;
}
if (m.isAnnotationPresent(DBus.Method.NoReply.class)) return null;
Message reply=call.getReply();
if (null == reply) throw new DBus.Error.NoReply(getString("notReplyWithSpecifiedTime"));
if (reply instanceof Error) ((Error)reply).throwException();
try {
return convertRV(reply.getSig(),reply.getParameters(),m,conn);
}
 catch (DBusException e) {
if (AbstractConnection.EXCEPTION_DEBUG && Debug.debug) Debug.print(Debug.ERR,e);
throw new DBusExecutionException(e.getMessage());
}
}
