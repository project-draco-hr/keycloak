{
  String[] ss=s.split(" ");
  if (Debug.debug)   Debug.print(Debug.VERBOSE,"Creating command from: " + Arrays.toString(ss));
  if (0 == col.compare(ss[0],"OK")) {
    command=COMMAND_OK;
    data=ss[1];
  }
 else   if (0 == col.compare(ss[0],"AUTH")) {
    command=COMMAND_AUTH;
    if (ss.length > 1) {
      if (0 == col.compare(ss[1],"EXTERNAL"))       mechs=AUTH_EXTERNAL;
 else       if (0 == col.compare(ss[1],"DBUS_COOKIE_SHA1"))       mechs=AUTH_SHA;
 else       if (0 == col.compare(ss[1],"ANONYMOUS"))       mechs=AUTH_ANON;
    }
    if (ss.length > 2)     data=ss[2];
  }
 else   if (0 == col.compare(ss[0],"DATA")) {
    command=COMMAND_DATA;
    data=ss[1];
  }
 else   if (0 == col.compare(ss[0],"REJECTED")) {
    command=COMMAND_REJECTED;
    for (int i=1; i < ss.length; i++)     if (0 == col.compare(ss[i],"EXTERNAL"))     mechs|=AUTH_EXTERNAL;
 else     if (0 == col.compare(ss[i],"DBUS_COOKIE_SHA1"))     mechs|=AUTH_SHA;
 else     if (0 == col.compare(ss[i],"ANONYMOUS"))     mechs|=AUTH_ANON;
  }
 else   if (0 == col.compare(ss[0],"BEGIN")) {
    command=COMMAND_BEGIN;
  }
 else   if (0 == col.compare(ss[0],"CANCEL")) {
    command=COMMAND_CANCEL;
  }
 else   if (0 == col.compare(ss[0],"ERROR")) {
    command=COMMAND_ERROR;
    data=ss[1];
  }
 else {
    throw new IOException(getString("invalidCommand") + ss[0]);
  }
  if (Debug.debug)   Debug.print(Debug.VERBOSE,"Created command: " + this);
}
