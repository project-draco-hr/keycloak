{
  pam_conv conv=new pam_conv(new PamCallback(){
    public int callback(    int num_msg,    Pointer msg,    Pointer resp,    Pointer _){
      LOGGER.debug("pam_conv num_msg=" + num_msg);
      if (factors == null)       return PAM_CONV_ERR;
      Pointer m=libc.calloc(pam_response.SIZE,num_msg);
      resp.setPointer(0,m);
      for (int i=0; i < factors.length; i++) {
        pam_message pm=new pam_message(msg.getPointer(POINTER_SIZE * i));
        LOGGER.debug(pm.msg_style + ":" + pm.msg);
        if (pm.msg_style == PAM_PROMPT_ECHO_OFF) {
          pam_response r=new pam_response(m.share(pam_response.SIZE * i));
          r.setResp(factors[i]);
          r.write();
        }
      }
      return PAM_SUCCESS;
    }
  }
);
  PointerByReference phtr=new PointerByReference();
  check(libpam.pam_start(serviceName,null,conv,phtr),"pam_start failed");
  pht=new pam_handle_t(phtr.getValue());
}
