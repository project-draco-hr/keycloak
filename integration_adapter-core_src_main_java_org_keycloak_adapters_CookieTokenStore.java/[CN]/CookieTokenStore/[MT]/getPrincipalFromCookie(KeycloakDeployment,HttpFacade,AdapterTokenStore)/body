{
  OIDCHttpFacade.Cookie cookie=facade.getRequest().getCookie(AdapterConstants.KEYCLOAK_ADAPTER_STATE_COOKIE);
  if (cookie == null) {
    log.debug("Not found adapter state cookie in current request");
    return null;
  }
  String cookieVal=cookie.getValue();
  String[] tokens=cookieVal.split(DELIM);
  if (tokens.length != 3) {
    log.warnf("Invalid format of %s cookie. Count of tokens: %s, expected 3",AdapterConstants.KEYCLOAK_ADAPTER_STATE_COOKIE,tokens.length);
    return null;
  }
  String accessTokenString=tokens[0];
  String idTokenString=tokens[1];
  String refreshTokenString=tokens[2];
  try {
    AccessToken accessToken=RSATokenVerifier.verifyToken(accessTokenString,deployment.getRealmKey(),deployment.getRealmInfoUrl(),false,true);
    IDToken idToken;
    if (idTokenString != null && idTokenString.length() > 0) {
      try {
        JWSInput input=new JWSInput(idTokenString);
        idToken=input.readJsonContent(IDToken.class);
      }
 catch (      JWSInputException e) {
        throw new VerificationException(e);
      }
    }
 else {
      idToken=null;
    }
    log.debug("Token Verification succeeded!");
    RefreshableKeycloakSecurityContext secContext=new RefreshableKeycloakSecurityContext(deployment,tokenStore,accessTokenString,accessToken,idTokenString,idToken,refreshTokenString);
    return new KeycloakPrincipal<RefreshableKeycloakSecurityContext>(AdapterUtils.getPrincipalName(deployment,accessToken),secContext);
  }
 catch (  VerificationException ve) {
    log.warn("Failed verify token",ve);
    return null;
  }
}
