{
  this.authServerBaseUrl=authServerBaseUrl;
  if (authServerBaseUrl == null)   return;
  URI uri=URI.create(authServerBaseUrl);
  if (uri.getHost() == null) {
    relativeUrls=true;
    return;
  }
  relativeUrls=false;
  serverBuilder=KeycloakUriBuilder.fromUri(authServerBaseUrl);
  String login=serverBuilder.clone().path(ServiceUrlConstants.TOKEN_SERVICE_LOGIN_PATH).build(getRealm()).toString();
  authUrl=KeycloakUriBuilder.fromUri(login);
  refreshUrl=serverBuilder.clone().path(ServiceUrlConstants.TOKEN_SERVICE_REFRESH_PATH).build(getRealm()).toString();
  logoutUrl=KeycloakUriBuilder.fromUri(serverBuilder.clone().path(ServiceUrlConstants.TOKEN_SERVICE_LOGOUT_PATH).build(getRealm()).toString());
  accountUrl=serverBuilder.clone().path(ServiceUrlConstants.ACCOUNT_SERVICE_PATH).build(getRealm()).toString();
  realmInfoUrl=serverBuilder.clone().path(ServiceUrlConstants.REALM_INFO_PATH).build(getRealm()).toString();
  codeUrl=serverBuilder.clone().path(ServiceUrlConstants.TOKEN_SERVICE_ACCESS_CODE_PATH).build(getRealm()).toString();
}
