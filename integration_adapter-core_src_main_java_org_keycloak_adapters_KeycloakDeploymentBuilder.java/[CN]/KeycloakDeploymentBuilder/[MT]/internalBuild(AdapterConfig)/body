{
  if (adapterConfig.getRealm() == null)   throw new RuntimeException("Must set 'realm' in config");
  deployment.setRealm(adapterConfig.getRealm());
  String resource=adapterConfig.getResource();
  if (resource == null)   throw new RuntimeException("Must set 'resource' in config");
  deployment.setResourceName(resource);
  String realmKeyPem=adapterConfig.getRealmKey();
  if (realmKeyPem != null) {
    PublicKey realmKey;
    try {
      realmKey=PemUtils.decodePublicKey(realmKeyPem);
    }
 catch (    Exception e) {
      throw new RuntimeException(e);
    }
    deployment.setRealmKey(realmKey);
  }
  if (adapterConfig.getSslRequired() != null) {
    deployment.setSslRequired(SslRequired.valueOf(adapterConfig.getSslRequired().toUpperCase()));
  }
 else {
    deployment.setSslRequired(SslRequired.EXTERNAL);
  }
  deployment.setResourceCredentials(adapterConfig.getCredentials());
  deployment.setPublicClient(adapterConfig.isPublicClient());
  deployment.setUseResourceRoleMappings(adapterConfig.isUseResourceRoleMappings());
  if (adapterConfig.isCors()) {
    deployment.setCors(true);
    deployment.setCorsMaxAge(adapterConfig.getCorsMaxAge());
    deployment.setCorsAllowedHeaders(adapterConfig.getCorsAllowedHeaders());
    deployment.setCorsAllowedMethods(adapterConfig.getCorsAllowedMethods());
  }
  deployment.setBearerOnly(adapterConfig.isBearerOnly());
  deployment.setAlwaysRefreshToken(adapterConfig.isAlwaysRefreshToken());
  if (realmKeyPem == null && adapterConfig.isBearerOnly() && adapterConfig.getAuthServerUrl() == null) {
    throw new IllegalArgumentException("For bearer auth, you must set the realm-public-key or auth-server-url");
  }
  if (realmKeyPem == null || !deployment.isBearerOnly()) {
    deployment.setClient(new HttpClientBuilder().build(adapterConfig));
  }
  if (adapterConfig.getAuthServerUrl() == null && (!deployment.isBearerOnly() || realmKeyPem == null)) {
    throw new RuntimeException("You must specify auth-url");
  }
  deployment.setAuthServerBaseUrl(adapterConfig.getAuthServerUrl(),adapterConfig);
  log.debug("Use authServerUrl: " + deployment.getAuthServerBaseUrl() + ", codeUrl: "+ deployment.getCodeUrl()+ ", relativeUrls: "+ deployment.getRelativeUrls());
  return deployment;
}
