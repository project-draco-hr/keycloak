{
  final String state=getStateCode();
  final String redirect=getRedirectUri(state);
  if (redirect == null) {
    return new AuthChallenge(){
      @Override public boolean challenge(      HttpFacade exchange){
        exchange.getResponse().setStatus(403);
        return true;
      }
      @Override public boolean errorPage(){
        return true;
      }
    }
;
  }
  return new AuthChallenge(){
    @Override public boolean errorPage(){
      return false;
    }
    @Override public boolean challenge(    HttpFacade exchange){
      tokenStore.saveRequest();
      log.debug("Sending redirect to login page: " + redirect);
      exchange.getResponse().setStatus(302);
      exchange.getResponse().setCookie(deployment.getStateCookieName(),state,null,null,-1,deployment.getSslRequired().isRequired(facade.getRequest().getRemoteAddr()),false);
      exchange.getResponse().setHeader("Location",redirect);
      return true;
    }
  }
;
}
