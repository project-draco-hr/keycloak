{
  log.info("--> authenticate()");
  BearerTokenRequestAuthenticator bearer=createBearerTokenAuthenticator();
  log.info("try bearer");
  AuthOutcome outcome=bearer.authenticate(facade);
  if (outcome == AuthOutcome.FAILED) {
    challenge=bearer.getChallenge();
    log.info("Bearer FAILED");
    return AuthOutcome.FAILED;
  }
 else   if (outcome == AuthOutcome.AUTHENTICATED) {
    completeAuthentication(bearer);
    log.info("Bearer AUTHENTICATED");
    return AuthOutcome.AUTHENTICATED;
  }
 else   if (deployment.isBearerOnly()) {
    challenge=bearer.getChallenge();
    log.info("NOT_ATTEMPTED: bearer only");
    return AuthOutcome.NOT_ATTEMPTED;
  }
  log.info("try oauth");
  if (isCached()) {
    log.info("AUTHENTICATED: was cached");
    return AuthOutcome.AUTHENTICATED;
  }
  OAuthRequestAuthenticator oauth=createOAuthAuthenticator();
  outcome=oauth.authenticate();
  if (outcome == AuthOutcome.FAILED) {
    challenge=oauth.getChallenge();
    return AuthOutcome.FAILED;
  }
 else   if (outcome == AuthOutcome.NOT_ATTEMPTED) {
    challenge=oauth.getChallenge();
    return AuthOutcome.NOT_ATTEMPTED;
  }
  completeAuthentication(oauth);
  facade.getResponse().setHeader("Location",oauth.getStrippedOauthParametersRequestUri());
  facade.getResponse().setStatus(302);
  facade.getResponse().end();
  log.info("AUTHENTICATED");
  return AuthOutcome.AUTHENTICATED;
}
