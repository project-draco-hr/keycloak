{
  if (endpointUrl == null) {
    throw new IOException("You need to configure URI for register/unregister node for application " + clientId);
  }
  List<NameValuePair> formparams=new ArrayList<NameValuePair>();
  formparams.add(new BasicNameValuePair(AdapterConstants.CLIENT_CLUSTER_HOST,host));
  HttpPost post=new HttpPost(endpointUrl);
  String clientSecret=credentials.get(CredentialRepresentation.SECRET);
  if (clientSecret != null) {
    String authorization=BasicAuthHelper.createHeader(clientId,clientSecret);
    post.setHeader("Authorization",authorization);
  }
 else {
    throw new IOException("You need to configure clientSecret for register/unregister node for application " + clientId);
  }
  UrlEncodedFormEntity form=new UrlEncodedFormEntity(formparams,"UTF-8");
  post.setEntity(form);
  HttpResponse response=client.execute(post);
  int status=response.getStatusLine().getStatusCode();
  if (status != 204) {
    HttpEntity entity=response.getEntity();
    error(status,entity);
  }
}
