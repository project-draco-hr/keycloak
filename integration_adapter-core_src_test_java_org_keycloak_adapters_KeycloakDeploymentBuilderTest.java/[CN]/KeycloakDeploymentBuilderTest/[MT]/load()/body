{
  KeycloakDeployment deployment=KeycloakDeploymentBuilder.build(getClass().getResourceAsStream("/keycloak.json"));
  assertEquals("demo",deployment.getRealm());
  assertEquals("customer-portal",deployment.getResourceName());
  assertEquals(PemUtils.decodePublicKey("MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCrVrCuTtArbgaZzL1hvh0xtL5mc7o0NqPVnYXkLvgcwiC3BjLGw1tGEGoJaXDuSaRllobm53JBhjx33UNv+5z/UMG4kytBWxheNVKnL6GgqlNabMaFfPLPCF8kAgKnsi79NMo+n6KnSY8YeUmec/p2vjO2NjsSAVcWEQMVhJ31LwIDAQAB"),deployment.getRealmKey());
  assertEquals("https://localhost:8443/auth/realms/demo/protocol/openid-connect/auth",deployment.getAuthUrl().build().toString());
  assertEquals(SslRequired.EXTERNAL,deployment.getSslRequired());
  assertTrue(deployment.isUseResourceRoleMappings());
  assertTrue(deployment.isCors());
  assertEquals(1000,deployment.getCorsMaxAge());
  assertEquals("POST, PUT, DELETE, GET",deployment.getCorsAllowedMethods());
  assertEquals("X-Custom, X-Custom2",deployment.getCorsAllowedHeaders());
  assertTrue(deployment.isBearerOnly());
  assertTrue(deployment.isPublicClient());
  assertTrue(deployment.isEnableBasicAuth());
  assertTrue(deployment.isExposeToken());
  assertEquals("234234-234234-234234",deployment.getResourceCredentials().get("secret"));
  assertEquals(20,((ThreadSafeClientConnManager)deployment.getClient().getConnectionManager()).getMaxTotal());
  assertEquals("https://backend:8443/auth/realms/demo/protocol/openid-connect/token",deployment.getTokenUrl());
  assertTrue(deployment.isAlwaysRefreshToken());
  assertTrue(deployment.isRegisterNodeAtStartup());
  assertEquals(1000,deployment.getRegisterNodePeriod());
  assertEquals(TokenStore.COOKIE,deployment.getTokenStore());
  assertEquals("email",deployment.getPrincipalAttribute());
}
