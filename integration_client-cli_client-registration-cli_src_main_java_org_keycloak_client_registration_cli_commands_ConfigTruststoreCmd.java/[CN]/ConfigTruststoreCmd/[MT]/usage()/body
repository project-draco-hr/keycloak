{
  StringWriter sb=new StringWriter();
  PrintWriter out=new PrintWriter(sb);
  out.println("Usage: " + CMD + " config truststore [TRUSTSTORE | --delete] [--trustpass PASSWOD] [ARGUMENTS]");
  out.println();
  out.println("Command to configure a global truststore to use when using https to connect to Keycloak server.");
  out.println();
  out.println("Arguments:");
  out.println();
  out.println("  Global options:");
  out.println("    -x                      Print full stack trace when exiting with error");
  out.println("    --config                Path to the config file (" + DEFAULT_CONFIG_FILE_STRING + " by default)");
  out.println();
  out.println("  Command specific options:");
  out.println("    TRUSTSTORE              Path to truststore file");
  out.println("    --trustpass PASSWORD    Truststore password to unlock truststore (prompted for if set to '-')");
  out.println("    -d, --delete            Remove truststore configuration");
  out.println();
  out.println();
  out.println("Examples:");
  out.println();
  out.println("Specify a truststore - you will be prompted for truststore password every time it is used:");
  out.println("  " + PROMPT + " "+ CMD+ " config truststore "+ OS_ARCH.path("~/.keycloak/truststore.jks"));
  out.println();
  out.println("Specify a truststore, and password - truststore will automatically without prompting for password:");
  out.println("  " + PROMPT + " "+ CMD+ " config truststore --storepass "+ OS_ARCH.envVar("PASSWORD")+ " "+ OS_ARCH.path("~/.keycloak/truststore.jks"));
  out.println();
  out.println("Remove truststore configuration:");
  out.println("  " + PROMPT + " "+ CMD+ " config truststore --delete");
  out.println();
  out.println();
  out.println("Use '" + CMD + " help' for general information and a list of commands");
  return sb.toString();
}
