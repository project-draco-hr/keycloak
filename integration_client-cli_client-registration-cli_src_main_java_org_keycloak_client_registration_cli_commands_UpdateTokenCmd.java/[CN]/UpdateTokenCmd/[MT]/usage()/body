{
  StringWriter sb=new StringWriter();
  PrintWriter out=new PrintWriter(sb);
  out.println("Usage: " + CMD + " update-token CLIENT [ARGUMENTS]");
  out.println();
  out.println("Command to reissue, and set a new registration access token if an old one is lost or becomes invalid.");
  out.println("It requires an authenticated session using an account with administrator priviliges.");
  out.println();
  out.println("Arguments:");
  out.println();
  out.println("  Global options:");
  out.println("    -x                    Print full stack trace when exiting with error");
  out.println("    --config              Path to the config file (" + DEFAULT_CONFIG_FILE_STRING + " by default)");
  out.println("    --truststore PATH     Path to a truststore containing trusted certificates");
  out.println("    --trustpass PASSWORD  Truststore password (prompted for if not specified and --truststore is used)");
  out.println("    CREDENTIALS OPTIONS   Same set of options as accepted by '" + CMD + " config credentials' in order to establish");
  out.println("                          an authenticated sessions. This allows on-the-fly transient authentication that leaves");
  out.println("                          no tokens in config file.");
  out.println();
  out.println("  Command specific options:");
  out.println("    CLIENT                ClientId of the client to reissue a new Registration Access Token for");
  out.println("                          The new token is saved to a config file or printed to stdout if on-the-fly\n");
  out.println("                          authentication is used");
  out.println();
  out.println("Examples:");
  out.println();
  out.println("Request a new Registration Access Token from the server using current authenticated session:");
  out.println("  " + PROMPT + " "+ CMD+ " update-token my_client");
  out.println();
  out.println("Use '" + CMD + " help' for general information and a list of commands");
  return sb.toString();
}
