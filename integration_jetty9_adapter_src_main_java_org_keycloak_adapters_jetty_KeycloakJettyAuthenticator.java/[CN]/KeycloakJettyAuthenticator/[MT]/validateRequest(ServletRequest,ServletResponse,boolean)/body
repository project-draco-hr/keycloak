{
  if (log.isTraceEnabled()) {
    log.trace("*** authenticate");
  }
  Request request=HttpChannel.getCurrentHttpChannel().getRequest();
  JettyHttpFacade facade=new JettyHttpFacade(request,(HttpServletResponse)res);
  KeycloakDeployment deployment=deploymentContext.resolveDeployment(facade);
  if (deployment == null || !deployment.isConfigured()) {
    log.debug("*** deployment isn't configured return false");
    return Authentication.UNAUTHENTICATED;
  }
  PreAuthActionsHandler handler=new PreAuthActionsHandler(new JettyUserSessionManagement(request.getSessionManager()),deploymentContext,facade);
  if (handler.handleRequest()) {
    return Authentication.SEND_SUCCESS;
  }
  AdapterTokenStore tokenStore=getTokenStore(request,facade,deployment);
  nodesRegistrationManagement.tryRegister(deployment);
  JettyRequestAuthenticator authenticator=new JettyRequestAuthenticator(deployment,this,tokenStore,facade,request);
  AuthOutcome outcome=authenticator.authenticate();
  if (outcome == AuthOutcome.AUTHENTICATED) {
    if (facade.isEnded()) {
      return Authentication.SEND_SUCCESS;
    }
    Authentication authentication=register(request,authenticator.principal);
    AuthenticatedActionsHandler authenticatedActionsHandler=new AuthenticatedActionsHandler(deployment,facade);
    if (authenticatedActionsHandler.handledRequest()) {
      return Authentication.SEND_SUCCESS;
    }
    return authentication;
  }
  AuthChallenge challenge=authenticator.getChallenge();
  if (challenge != null) {
    challenge.challenge(facade);
  }
  return Authentication.SEND_CONTINUE;
}
