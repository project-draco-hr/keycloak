{
  final NotificationReceiver logoutReceiver=new NotificationReceiver(){
    @Override public void handleNotification(    SecurityNotification notification){
      if (notification.getEventType() != SecurityNotification.EventType.LOGGED_OUT)       return;
      HttpServerExchange exchange=notification.getExchange();
      UndertowHttpFacade facade=new OIDCUndertowHttpFacade(exchange);
      KeycloakDeployment deployment=deploymentContext.resolveDeployment(facade);
      KeycloakSecurityContext ksc=exchange.getAttachment(OIDCUndertowHttpFacade.KEYCLOAK_SECURITY_CONTEXT_KEY);
      if (ksc != null && ksc instanceof RefreshableKeycloakSecurityContext) {
        ((RefreshableKeycloakSecurityContext)ksc).logout(deployment);
      }
      AdapterTokenStore tokenStore=getTokenStore(exchange,facade,deployment,securityContext);
      tokenStore.logout();
    }
  }
;
  securityContext.registerNotificationReceiver(logoutReceiver);
}
