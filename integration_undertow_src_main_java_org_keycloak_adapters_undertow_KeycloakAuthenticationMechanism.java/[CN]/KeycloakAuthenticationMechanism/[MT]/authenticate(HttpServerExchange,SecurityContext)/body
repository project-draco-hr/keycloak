{
  log.info("--> authenticate()");
  BearerTokenAuthenticator bearer=createBearerTokenAuthenticator();
  AuthenticationMechanismOutcome outcome=bearer.authenticate(exchange);
  if (outcome == AuthenticationMechanismOutcome.NOT_AUTHENTICATED) {
    exchange.putAttachment(KEYCLOAK_CHALLENGE_ATTACHMENT_KEY,bearer.getChallenge());
    return AuthenticationMechanismOutcome.NOT_AUTHENTICATED;
  }
 else   if (outcome == AuthenticationMechanismOutcome.AUTHENTICATED) {
    completeAuthentication(exchange,securityContext,bearer);
    return AuthenticationMechanismOutcome.AUTHENTICATED;
  }
 else   if (deployment.isBearerOnly()) {
    exchange.putAttachment(KEYCLOAK_CHALLENGE_ATTACHMENT_KEY,bearer.getChallenge());
    return AuthenticationMechanismOutcome.NOT_ATTEMPTED;
  }
  KeycloakUndertowAccount account=checkCachedAccount(exchange);
  if (account != null) {
    log.info("Cached account found");
    securityContext.authenticationComplete(account,"KEYCLOAK",false);
    propagateKeycloakContext(exchange,account);
    return AuthenticationMechanismOutcome.AUTHENTICATED;
  }
  OAuthAuthenticator oauth=createOAuthAuthenticator(exchange);
  outcome=oauth.authenticate();
  if (outcome == AuthenticationMechanismOutcome.NOT_AUTHENTICATED) {
    exchange.putAttachment(KEYCLOAK_CHALLENGE_ATTACHMENT_KEY,oauth.getChallenge());
    return AuthenticationMechanismOutcome.NOT_AUTHENTICATED;
  }
 else   if (outcome == AuthenticationMechanismOutcome.NOT_ATTEMPTED) {
    exchange.putAttachment(KEYCLOAK_CHALLENGE_ATTACHMENT_KEY,oauth.getChallenge());
    return AuthenticationMechanismOutcome.NOT_ATTEMPTED;
  }
  completeAuthentication(exchange,securityContext,oauth);
  exchange.getResponseHeaders().put(Headers.LOCATION,oauth.getStrippedOauthParametersRequestUri());
  exchange.setResponseCode(302);
  exchange.endExchange();
  log.info("AUTHENTICATED");
  return AuthenticationMechanismOutcome.AUTHENTICATED;
}
