{
  if (!isAuthenticationMechanismPresent(deploymentInfo,"KEYCLOAK")) {
    log.info("auth-method is not keycloak!");
    return;
  }
  log.info("KeycloakServletException initialization");
  InputStream is=getJSONFromServletContext(servletContext);
  if (is == null) {
    is=servletContext.getResourceAsStream("/WEB-INF/keycloak.json");
  }
  if (is == null)   throw new RuntimeException("Unable to find realm config in /WEB-INF/keycloak.json or in keycloak subsystem.");
  RealmConfigurationLoader loader=new RealmConfigurationLoader(is);
  loader.init(true);
  AdapterConfig keycloakConfig=loader.getAdapterConfig();
  RealmConfiguration realmConfiguration=loader.getRealmConfiguration();
  PreflightCorsHandler.Wrapper preflight=new PreflightCorsHandler.Wrapper(keycloakConfig);
  UserSessionManagement userSessionManagement=new UserSessionManagement(realmConfiguration);
  ServletKeycloakAuthenticationMechanism auth=null;
  auth=new ServletKeycloakAuthenticationMechanism(userSessionManagement,keycloakConfig,realmConfiguration,deploymentInfo.getConfidentialPortManager());
  AuthenticatedActionsHandler.Wrapper actions=new AuthenticatedActionsHandler.Wrapper(keycloakConfig);
  deploymentInfo.addInitialHandlerChainWrapper(preflight);
  deploymentInfo.addOuterHandlerChainWrapper(new ServletAdminActionsHandler.Wrapper(realmConfiguration,loader.getResourceMetadata(),userSessionManagement));
  final ServletKeycloakAuthenticationMechanism theAuth=auth;
  deploymentInfo.addAuthenticationMechanism("KEYCLOAK",new AuthenticationMechanismFactory(){
    @Override public AuthenticationMechanism create(    String s,    FormParserFactory formParserFactory,    Map<String,String> stringStringMap){
      return theAuth;
    }
  }
);
  deploymentInfo.addInnerHandlerChainWrapper(ServletPropagateSessionHandler.WRAPPER);
  deploymentInfo.addInnerHandlerChainWrapper(actions);
  deploymentInfo.setIdentityManager(new KeycloakIdentityManager(keycloakConfig,realmConfiguration));
  log.info("Setting jsession cookie path to: " + deploymentInfo.getContextPath());
  ServletSessionConfig cookieConfig=new ServletSessionConfig();
  cookieConfig.setPath(deploymentInfo.getContextPath());
  deploymentInfo.setServletSessionConfig(cookieConfig);
}
