{
  List<UserFederationProviderModel> federationProviders=realm.getUserFederationProviders();
  for (  UserFederationProviderModel fedProvider : federationProviders) {
    if (fedProvider.getProviderName().equals(LDAPConstants.LDAP_PROVIDER)) {
      Map<String,String> config=fedProvider.getConfig();
      config.put(LDAPConstants.SEARCH_SCOPE,String.valueOf(SearchControls.SUBTREE_SCOPE));
      String usersDn=config.remove("userDnSuffix");
      config.put(LDAPConstants.USERS_DN,usersDn);
      String rdnLdapAttribute=config.get(LDAPConstants.USERNAME_LDAP_ATTRIBUTE);
      if (rdnLdapAttribute != null) {
        if (rdnLdapAttribute.equalsIgnoreCase(LDAPConstants.SAM_ACCOUNT_NAME)) {
          config.put(LDAPConstants.RDN_LDAP_ATTRIBUTE,LDAPConstants.CN);
        }
 else {
          config.put(LDAPConstants.RDN_LDAP_ATTRIBUTE,rdnLdapAttribute);
        }
      }
      String uuidAttrName=LDAPConstants.getUuidAttributeName(config.get(LDAPConstants.VENDOR));
      config.put(LDAPConstants.UUID_LDAP_ATTRIBUTE,uuidAttrName);
      realm.updateUserFederationProvider(fedProvider);
      UserFederationProviderFactory ldapFactory=(UserFederationProviderFactory)session.getKeycloakSessionFactory().getProviderFactory(UserFederationProvider.class,LDAPConstants.LDAP_PROVIDER);
      if (ldapFactory != null) {
        ((UserFederationEventAwareProviderFactory)ldapFactory).onProviderModelCreated(realm,fedProvider);
      }
    }
  }
}
