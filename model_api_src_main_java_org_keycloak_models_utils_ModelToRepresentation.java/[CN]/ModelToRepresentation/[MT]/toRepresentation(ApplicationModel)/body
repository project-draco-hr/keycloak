{
  ApplicationRepresentation rep=new ApplicationRepresentation();
  rep.setId(applicationModel.getId());
  rep.setName(applicationModel.getName());
  rep.setEnabled(applicationModel.isEnabled());
  rep.setAdminUrl(applicationModel.getManagementUrl());
  rep.setPublicClient(applicationModel.isPublicClient());
  rep.setFrontchannelLogout(applicationModel.isFrontchannelLogout());
  rep.setProtocol(applicationModel.getProtocol());
  rep.setAttributes(applicationModel.getAttributes());
  rep.setFullScopeAllowed(applicationModel.isFullScopeAllowed());
  rep.setBearerOnly(applicationModel.isBearerOnly());
  rep.setSurrogateAuthRequired(applicationModel.isSurrogateAuthRequired());
  rep.setBaseUrl(applicationModel.getBaseUrl());
  rep.setNotBefore(applicationModel.getNotBefore());
  rep.setNodeReRegistrationTimeout(applicationModel.getNodeReRegistrationTimeout());
  Set<String> redirectUris=applicationModel.getRedirectUris();
  if (redirectUris != null) {
    rep.setRedirectUris(new LinkedList<String>(redirectUris));
  }
  Set<String> webOrigins=applicationModel.getWebOrigins();
  if (webOrigins != null) {
    rep.setWebOrigins(new LinkedList<String>(webOrigins));
  }
  if (!applicationModel.getDefaultRoles().isEmpty()) {
    rep.setDefaultRoles(applicationModel.getDefaultRoles().toArray(new String[0]));
  }
  if (!applicationModel.getRegisteredNodes().isEmpty()) {
    rep.setRegisteredNodes(new HashMap<String,Integer>(applicationModel.getRegisteredNodes()));
  }
  if (!applicationModel.getAllowedIdentityProviders().isEmpty()) {
    rep.setAllowedIdentityProviders(applicationModel.getAllowedIdentityProviders());
  }
  if (!applicationModel.getProtocolMappers().isEmpty()) {
    Set<String> mappings=new HashSet<String>();
    for (    ProtocolMapperModel model : applicationModel.getProtocolMappers())     mappings.add(model.getId());
    rep.setProtocolClaimMappings(mappings);
  }
  return rep;
}
