{
  RealmRepresentation rep=new RealmRepresentation();
  rep.setId(realm.getId());
  rep.setRealm(realm.getName());
  rep.setEnabled(realm.isEnabled());
  rep.setSocial(realm.isSocial());
  rep.setNotBefore(realm.getNotBefore());
  rep.setUpdateProfileOnInitialSocialLogin(realm.isUpdateProfileOnInitialSocialLogin());
  rep.setSslRequired(realm.getSslRequired().name().toLowerCase());
  rep.setPublicKey(realm.getPublicKeyPem());
  rep.setPrivateKey(realm.getPrivateKeyPem());
  rep.setPasswordCredentialGrantAllowed(realm.isPasswordCredentialGrantAllowed());
  rep.setRegistrationAllowed(realm.isRegistrationAllowed());
  rep.setRememberMe(realm.isRememberMe());
  rep.setBruteForceProtected(realm.isBruteForceProtected());
  rep.setMaxFailureWaitSeconds(realm.getMaxFailureWaitSeconds());
  rep.setMinimumQuickLoginWaitSeconds(realm.getMinimumQuickLoginWaitSeconds());
  rep.setWaitIncrementSeconds(realm.getWaitIncrementSeconds());
  rep.setQuickLoginCheckMilliSeconds(realm.getQuickLoginCheckMilliSeconds());
  rep.setMaxDeltaTimeSeconds(realm.getMaxDeltaTimeSeconds());
  rep.setFailureFactor(realm.getFailureFactor());
  rep.setVerifyEmail(realm.isVerifyEmail());
  rep.setResetPasswordAllowed(realm.isResetPasswordAllowed());
  rep.setAccessTokenLifespan(realm.getAccessTokenLifespan());
  rep.setSsoSessionIdleTimeout(realm.getSsoSessionIdleTimeout());
  rep.setSsoSessionMaxLifespan(realm.getSsoSessionMaxLifespan());
  rep.setAccessCodeLifespan(realm.getAccessCodeLifespan());
  rep.setAccessCodeLifespanUserAction(realm.getAccessCodeLifespanUserAction());
  rep.setSmtpServer(realm.getSmtpConfig());
  rep.setSocialProviders(realm.getSocialConfig());
  rep.setAccountTheme(realm.getAccountTheme());
  rep.setLoginTheme(realm.getLoginTheme());
  rep.setAdminTheme(realm.getAdminTheme());
  rep.setEmailTheme(realm.getEmailTheme());
  if (realm.getPasswordPolicy() != null) {
    rep.setPasswordPolicy(realm.getPasswordPolicy().toString());
  }
  ApplicationModel accountManagementApplication=realm.getApplicationNameMap().get(Constants.ACCOUNT_MANAGEMENT_APP);
  List<String> defaultRoles=realm.getDefaultRoles();
  if (!defaultRoles.isEmpty()) {
    List<String> roleStrings=new ArrayList<String>();
    roleStrings.addAll(defaultRoles);
    rep.setDefaultRoles(roleStrings);
  }
  List<RequiredCredentialModel> requiredCredentialModels=realm.getRequiredCredentials();
  if (requiredCredentialModels.size() > 0) {
    rep.setRequiredCredentials(new HashSet<String>());
    for (    RequiredCredentialModel cred : requiredCredentialModels) {
      rep.getRequiredCredentials().add(cred.getType());
    }
  }
  List<UserFederationProviderModel> fedProviderModels=realm.getUserFederationProviders();
  if (fedProviderModels.size() > 0) {
    List<UserFederationProviderRepresentation> fedProviderReps=new ArrayList<UserFederationProviderRepresentation>();
    for (    UserFederationProviderModel model : fedProviderModels) {
      UserFederationProviderRepresentation fedProvRep=toRepresentation(model);
      fedProviderReps.add(fedProvRep);
    }
    rep.setUserFederationProviders(fedProviderReps);
  }
  return rep;
}
