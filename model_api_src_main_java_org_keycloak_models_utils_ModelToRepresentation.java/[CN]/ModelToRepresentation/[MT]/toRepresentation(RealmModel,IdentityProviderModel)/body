{
  IdentityProviderRepresentation providerRep=new IdentityProviderRepresentation();
  providerRep.setInternalId(identityProviderModel.getInternalId());
  providerRep.setProviderId(identityProviderModel.getProviderId());
  providerRep.setAlias(identityProviderModel.getAlias());
  providerRep.setEnabled(identityProviderModel.isEnabled());
  providerRep.setStoreToken(identityProviderModel.isStoreToken());
  providerRep.setUpdateProfileFirstLoginMode(identityProviderModel.getUpdateProfileFirstLoginMode());
  providerRep.setTrustEmail(identityProviderModel.isTrustEmail());
  providerRep.setAuthenticateByDefault(identityProviderModel.isAuthenticateByDefault());
  providerRep.setConfig(identityProviderModel.getConfig());
  providerRep.setAddReadTokenRoleOnCreate(identityProviderModel.isAddReadTokenRoleOnCreate());
  String firstBrokerLoginFlowId=identityProviderModel.getFirstBrokerLoginFlowId();
  if (firstBrokerLoginFlowId != null) {
    AuthenticationFlowModel flow=realm.getAuthenticationFlowById(firstBrokerLoginFlowId);
    if (flow == null) {
      throw new ModelException("Couldn't find authentication flow with id " + firstBrokerLoginFlowId);
    }
    providerRep.setFirstBrokerLoginFlowAlias(flow.getAlias());
  }
  return providerRep;
}
