{
  if (cred.getValue() != null) {
    UserCredentialModel plainTextCred=convertCredential(cred);
    user.updateCredential(plainTextCred);
  }
 else {
    UserCredentialValueModel hashedCred=new UserCredentialValueModel();
    hashedCred.setType(cred.getType());
    hashedCred.setDevice(cred.getDevice());
    if (cred.getHashIterations() != null)     hashedCred.setHashIterations(cred.getHashIterations());
    try {
      if (cred.getSalt() != null)       hashedCred.setSalt(Base64.decode(cred.getSalt()));
    }
 catch (    IOException ioe) {
      throw new RuntimeException(ioe);
    }
    hashedCred.setValue(cred.getHashedSaltedValue());
    if (cred.getCounter() != null)     hashedCred.setCounter(cred.getCounter());
    if (cred.getDigits() != null)     hashedCred.setDigits(cred.getDigits());
    if (cred.getAlgorithm() != null)     hashedCred.setAlgorithm(cred.getAlgorithm());
    if (cred.getPeriod() != null)     hashedCred.setPeriod(cred.getPeriod());
    if (cred.getDigits() == null && UserCredentialModel.isOtp(cred.getType())) {
      hashedCred.setDigits(6);
    }
    if (cred.getAlgorithm() == null && UserCredentialModel.isOtp(cred.getType())) {
      hashedCred.setAlgorithm(HmacOTP.HMAC_SHA1);
    }
    if (cred.getPeriod() == null && UserCredentialModel.TOTP.equals(cred.getType())) {
      hashedCred.setPeriod(30);
    }
    user.updateCredentialDirectly(hashedCred);
  }
}
