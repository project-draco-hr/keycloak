{
  PasswordPolicy policy=null;
  try {
    policy=new PasswordPolicy("regexPatterns");
    fail("Expected NullPointerEXception: Regex Pattern cannot be null.");
  }
 catch (  NullPointerException e) {
  }
  try {
    policy=new PasswordPolicy("regexPatterns(*)");
    fail("Expected PatternSyntaxException: Regex Pattern cannot be null.");
  }
 catch (  PatternSyntaxException e) {
  }
  try {
    policy=new PasswordPolicy("regexPatterns(*,**)");
    fail("Expected PatternSyntaxException: Regex Pattern cannot be null.");
  }
 catch (  PatternSyntaxException e) {
  }
  policy=new PasswordPolicy("regexPatterns(jdoe,j*d)");
  Assert.assertEquals("invalidPasswordRegexPatternMessage",policy.validate("jdoe","jdoe").getMessage());
  policy=new PasswordPolicy("regexPatterns(j*p,j*d,adoe)");
  Assert.assertEquals("invalidPasswordRegexPatternMessage",policy.validate("jdoe","jdoe").getMessage());
  policy=new PasswordPolicy("regexPatterns([a-z][a-z][a-z][a-z][0-9])");
  Assert.assertEquals("invalidPasswordRegexPatternMessage",policy.validate("jdoe","jdoe").getMessage());
  policy=new PasswordPolicy("regexPatterns(jdoe)");
  Assert.assertNull(policy.validate("jdoe","jdoe"));
  policy=new PasswordPolicy("regexPatterns([a-z][a-z][a-z][a-z][0-9])");
  Assert.assertNull(policy.validate("jdoe","jdoe0"));
}
