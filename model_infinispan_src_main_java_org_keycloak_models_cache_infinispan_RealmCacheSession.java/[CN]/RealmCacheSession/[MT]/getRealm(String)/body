{
  CachedRealm cached=cache.get(id,CachedRealm.class);
  if (cached != null) {
    logger.tracev("by id cache hit: {0}",cached.getName());
  }
  boolean wasCached=false;
  if (cached == null) {
    Long loaded=cache.getCurrentRevision(id);
    RealmModel model=getDelegate().getRealm(id);
    if (model == null)     return null;
    if (invalidations.contains(id))     return model;
    cached=new CachedRealm(loaded,model);
    cache.addRevisioned(cached,startupRevision);
    wasCached=true;
  }
 else   if (invalidations.contains(id)) {
    return getDelegate().getRealm(id);
  }
 else   if (managedRealms.containsKey(id)) {
    return managedRealms.get(id);
  }
  RealmAdapter adapter=new RealmAdapter(cached,this);
  if (wasCached) {
    CachedRealmModel.RealmCachedEvent event=new CachedRealmModel.RealmCachedEvent(){
      @Override public CachedRealmModel getRealm(){
        return adapter;
      }
      @Override public KeycloakSession getKeycloakSession(){
        return session;
      }
    }
;
    session.getKeycloakSessionFactory().publish(event);
  }
  managedRealms.put(id,adapter);
  return adapter;
}
