{
  String cacheKey=getGroupsQueryCacheKey(realm.getId());
  boolean queryDB=invalidations.contains(cacheKey) || listInvalidations.contains(realm.getId());
  if (queryDB) {
    return getDelegate().getGroups(realm);
  }
  GroupListQuery query=cache.get(cacheKey,GroupListQuery.class);
  if (query != null) {
    logger.tracev("getGroups cache hit: {0}",realm.getName());
  }
  if (query == null) {
    Long loaded=cache.getCurrentRevision(cacheKey);
    List<GroupModel> model=getDelegate().getGroups(realm);
    if (model == null)     return null;
    Set<String> ids=new HashSet<>();
    for (    GroupModel client : model)     ids.add(client.getId());
    query=new GroupListQuery(loaded,cacheKey,realm,ids);
    logger.tracev("adding realm getGroups cache miss: realm {0} key {1}",realm.getName(),cacheKey);
    cache.addRevisioned(query,session);
    return model;
  }
  List<GroupModel> list=new LinkedList<>();
  for (  String id : query.getGroups()) {
    GroupModel group=session.realms().getGroupById(id,realm);
    if (group == null) {
      invalidations.add(cacheKey);
      return getDelegate().getGroups(realm);
    }
    list.add(group);
  }
  return list;
}
