{
  String cacheKey=getRolesCacheKey(realm.getId());
  boolean queryDB=invalidations.contains(cacheKey) || listInvalidations.contains(realm.getId());
  if (queryDB) {
    return getDelegate().getRealmRoles(realm);
  }
  RoleListQuery query=cache.get(cacheKey,RoleListQuery.class);
  if (query != null) {
    logger.tracev("getRealmRoles cache hit: {0}",realm.getName());
  }
  if (query == null) {
    Long loaded=cache.getCurrentRevision(cacheKey);
    Set<RoleModel> model=getDelegate().getRealmRoles(realm);
    if (model == null)     return null;
    Set<String> ids=new HashSet<>();
    for (    RoleModel role : model)     ids.add(role.getId());
    query=new RoleListQuery(loaded,cacheKey,realm,ids);
    logger.tracev("adding realm roles cache miss: realm {0} key {1}",realm.getName(),cacheKey);
    cache.addRevisioned(query,session);
    return model;
  }
  Set<RoleModel> list=new HashSet<>();
  for (  String id : query.getRoles()) {
    RoleModel role=session.realms().getRoleById(id,realm);
    if (role == null) {
      invalidations.add(cacheKey);
      return getDelegate().getRealmRoles(realm);
    }
    list.add(role);
  }
  return list;
}
