{
  if (email == null)   return null;
  email=email.toLowerCase();
  if (realmInvalidations.contains(realm.getId())) {
    return getDelegate().getUserByEmail(email,realm);
  }
  String cacheKey=getUserByEmailCacheKey(realm.getId(),email);
  if (invalidations.contains(cacheKey)) {
    return getDelegate().getUserByEmail(email,realm);
  }
  UserListQuery query=cache.get(cacheKey,UserListQuery.class);
  String userId=null;
  if (query == null) {
    Long loaded=cache.getCurrentRevision(cacheKey);
    UserModel model=getDelegate().getUserByEmail(email,realm);
    if (model == null)     return null;
    userId=model.getId();
    if (invalidations.contains(userId))     return model;
    if (managedUsers.containsKey(userId))     return managedUsers.get(userId);
    UserModel adapter=getUserAdapter(realm,userId,loaded,model);
    if (adapter instanceof UserAdapter) {
      query=new UserListQuery(loaded,cacheKey,realm,model.getId());
      cache.addRevisioned(query,startupRevision);
    }
    managedUsers.put(userId,adapter);
    return adapter;
  }
 else {
    userId=query.getUsers().iterator().next();
    if (invalidations.contains(userId)) {
      return getDelegate().getUserByEmail(email,realm);
    }
    return getUserById(userId,realm);
  }
}
