{
  logger.tracev("getuserById {0}",id);
  if (isRegisteredForInvalidation(realm,id)) {
    logger.trace("registered for invalidation return delegate");
    return getDelegate().getUserById(id,realm);
  }
  CachedUser cached=cache.get(id,CachedUser.class);
  if (cached == null) {
    logger.trace("not cached");
    Long loaded=cache.getCurrentRevision(id);
    UserModel model=getDelegate().getUserById(id,realm);
    if (model == null) {
      logger.trace("delegate returning null");
      return null;
    }
    if (managedUsers.containsKey(id)) {
      logger.trace("return managedusers");
      return managedUsers.get(id);
    }
    if (invalidations.contains(id))     return model;
    cached=new CachedUser(loaded,realm,model);
    cache.addRevisioned(cached,startupRevision);
  }
 else   if (managedUsers.containsKey(id)) {
    logger.trace("return managedusers");
    return managedUsers.get(id);
  }
  logger.trace("returning new cache adapter");
  UserAdapter adapter=new UserAdapter(cached,this,session,realm);
  managedUsers.put(id,adapter);
  return adapter;
}
