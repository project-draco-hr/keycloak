{
  return new KeycloakTransaction(){
    @Override public void begin(){
      transactionActive=true;
    }
    @Override public void commit(){
      if (delegate == null)       return;
      List<String> invalidates=new LinkedList<>();
      for (      String id : realmInvalidations) {
        invalidates.add(id);
      }
      for (      String id : roleInvalidations) {
        invalidates.add(id);
      }
      for (      String id : groupInvalidations) {
        invalidates.add(id);
      }
      for (      String id : appInvalidations) {
        invalidates.add(id);
      }
      for (      String id : clientTemplateInvalidations) {
        invalidates.add(id);
      }
      Collections.sort(invalidates);
      cache.getRevisions().startBatch();
      for (      String id : invalidates) {
        cache.getRevisions().getAdvancedCache().lock(id);
      }
    }
    @Override public void rollback(){
      setRollbackOnly=true;
      transactionActive=false;
    }
    @Override public void setRollbackOnly(){
      setRollbackOnly=true;
    }
    @Override public boolean getRollbackOnly(){
      return setRollbackOnly;
    }
    @Override public boolean isActive(){
      return transactionActive;
    }
  }
;
}
