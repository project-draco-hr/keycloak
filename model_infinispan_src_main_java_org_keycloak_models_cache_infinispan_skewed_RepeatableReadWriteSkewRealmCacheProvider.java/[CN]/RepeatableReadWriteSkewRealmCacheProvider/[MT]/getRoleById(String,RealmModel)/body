{
  cache.startBatch();
  boolean batchEnded=false;
  try {
    CachedRole cached=cache.getRole(id);
    if (cached != null && !cached.getRealm().equals(realm.getId())) {
      cached=null;
    }
    if (cached == null) {
      RoleModel model=getDelegate().getRoleById(id,realm);
      if (model == null)       return null;
      if (roleInvalidations.contains(id))       return model;
      if (model.getContainer() instanceof ClientModel) {
        cached=new CachedClientRole(((ClientModel)model.getContainer()).getId(),model,realm);
      }
 else {
        cached=new CachedRealmRole(model,realm);
      }
      cache.addCachedRole(cached);
      try {
        batchEnded=true;
        cache.endBatch(true);
      }
 catch (      Exception exception) {
        logger.trace("failed to add to cache",exception);
        return model;
      }
    }
 else     if (roleInvalidations.contains(id)) {
      return getDelegate().getRoleById(id,realm);
    }
 else     if (managedRoles.containsKey(id)) {
      return managedRoles.get(id);
    }
    RoleAdapter adapter=new RoleAdapter(cached,cache,this,realm);
    managedRoles.put(id,adapter);
    return adapter;
  }
  finally {
    if (!batchEnded)     cache.endBatch(true);
  }
}
