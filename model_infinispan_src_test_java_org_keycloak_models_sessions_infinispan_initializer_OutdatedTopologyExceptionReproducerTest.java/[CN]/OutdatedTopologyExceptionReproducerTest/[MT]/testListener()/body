{
  EmbeddedCacheManager node1=null;
  EmbeddedCacheManager node2=null;
  try {
    node1=createManager();
    Cache<String,Object> node1Cache=node1.getCache(InfinispanConnectionProvider.REALM_CACHE_NAME);
    logger.info("Node1Cache started");
    List<CacheOperations> cacheOpsList=new ArrayList<>();
    AtomicReference<Exception> exceptionHolder=new AtomicReference<>();
    for (int i=0; i < THREADS_COUNT; i++) {
      String key="key-" + i;
      CacheOperations cacheOps=new CacheOperations(node1Cache,key,exceptionHolder);
      cacheOps.start();
      cacheOpsList.add(cacheOps);
    }
    logger.infof("All CacheOperations threads started");
    node2=createManager();
    Cache<String,Object> node2Cache=node2.getCache(InfinispanConnectionProvider.REALM_CACHE_NAME);
    logger.info("Node2Cache started");
    for (    CacheOperations cacheOps : cacheOpsList) {
      cacheOps.stopMe();
    }
    for (    CacheOperations cacheOps : cacheOpsList) {
      cacheOps.join();
    }
    logger.info("All CacheOperations threads stopped");
    Exception ex=exceptionHolder.get();
    if (ex != null) {
      Assert.fail("Some exception was thrown. It was: " + ex.getClass().getName() + ": "+ ex.getMessage());
    }
    logger.info("Test finished successfuly");
  }
  finally {
    node2.stop();
    node1.stop();
  }
}
