{
  if (email == null)   return null;
  email=email.toLowerCase();
  if (!cache.isEnabled())   return getDelegate().getUserByEmail(email,realm);
  if (realmInvalidations.contains(realm.getId())) {
    return getDelegate().getUserByEmail(email,realm);
  }
  CachedUser cached=cache.getCachedUserByEmail(realm.getId(),email);
  if (cached == null) {
    UserModel model=getDelegate().getUserByEmail(email,realm);
    if (model == null)     return null;
    if (userInvalidations.containsKey(model.getId()))     return model;
    cached=new CachedUser(realm,model);
    cache.addCachedUser(realm.getId(),cached);
  }
 else   if (userInvalidations.containsKey(cached.getId())) {
    return getDelegate().getUserByEmail(email,realm);
  }
 else   if (managedUsers.containsKey(cached.getId())) {
    return managedUsers.get(cached.getId());
  }
  UserAdapter adapter=new UserAdapter(cached,this,session,realm);
  managedUsers.put(cached.getId(),adapter);
  return adapter;
}
