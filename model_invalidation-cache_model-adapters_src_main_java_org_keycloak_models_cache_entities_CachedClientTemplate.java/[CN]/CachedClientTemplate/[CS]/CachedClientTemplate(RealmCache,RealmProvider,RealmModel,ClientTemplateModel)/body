{
  id=model.getId();
  name=model.getName();
  description=model.getDescription();
  this.realm=realm.getId();
  protocol=model.getProtocol();
  fullScopeAllowed=model.isFullScopeAllowed();
  for (  ProtocolMapperModel mapper : model.getProtocolMappers()) {
    this.protocolMappers.add(mapper);
  }
  for (  RoleModel role : model.getScopeMappings()) {
    scope.add(role.getId());
  }
  attributes.putAll(model.getAttributes());
  frontchannelLogout=model.isFrontchannelLogout();
  publicClient=model.isPublicClient();
  bearerOnly=model.isBearerOnly();
  consentRequired=model.isConsentRequired();
  standardFlowEnabled=model.isStandardFlowEnabled();
  implicitFlowEnabled=model.isImplicitFlowEnabled();
  directAccessGrantsEnabled=model.isDirectAccessGrantsEnabled();
  serviceAccountsEnabled=model.isServiceAccountsEnabled();
}
