{
  logger.debug("Starting database update");
  ThreadLocalSessionContext.setCurrentSession(session);
  Writer exportWriter=null;
  try {
    Liquibase liquibase=getLiquibaseForKeycloakUpdate(connection,defaultSchema);
    if (file != null) {
      exportWriter=new FileWriter(file);
    }
    updateChangeSet(liquibase,liquibase.getChangeLogFile(),exportWriter);
    Set<JpaEntityProvider> jpaProviders=session.getAllProviders(JpaEntityProvider.class);
    for (    JpaEntityProvider jpaProvider : jpaProviders) {
      String customChangelog=jpaProvider.getChangelogLocation();
      if (customChangelog != null) {
        String factoryId=jpaProvider.getFactoryId();
        String changelogTableName=JpaUtils.getCustomChangelogTableName(factoryId);
        liquibase=getLiquibaseForCustomProviderUpdate(connection,defaultSchema,customChangelog,jpaProvider.getClass().getClassLoader(),changelogTableName);
        updateChangeSet(liquibase,liquibase.getChangeLogFile(),exportWriter);
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to update database",e);
  }
 finally {
    ThreadLocalSessionContext.removeCurrentSession();
    if (exportWriter != null) {
      try {
        exportWriter.close();
      }
 catch (      IOException ioe) {
      }
    }
  }
}
