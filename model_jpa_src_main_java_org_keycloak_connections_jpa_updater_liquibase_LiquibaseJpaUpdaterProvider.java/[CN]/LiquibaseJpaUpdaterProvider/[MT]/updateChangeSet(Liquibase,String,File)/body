{
  List<ChangeSet> changeSets=liquibase.listUnrunChangeSets((Contexts)null,new LabelExpression());
  if (!changeSets.isEmpty()) {
    List<RanChangeSet> ranChangeSets=liquibase.getDatabase().getRanChangeSetList();
    if (ranChangeSets.isEmpty()) {
      logger.infov("Initializing database schema. Using changelog {0}",changelog);
    }
 else {
      if (logger.isDebugEnabled()) {
        logger.debugv("Updating database from {0} to {1}. Using changelog {2}",ranChangeSets.get(ranChangeSets.size() - 1).getId(),changeSets.get(changeSets.size() - 1).getId(),changelog);
      }
 else {
        logger.infov("Updating database. Using changelog {0}",changelog);
      }
    }
    if (exportFile != null) {
      liquibase.update((Contexts)null,new FileWriter(exportFile));
    }
 else {
      liquibase.update((Contexts)null);
    }
    logger.debugv("Completed database update for changelog {0}",changelog);
  }
 else {
    logger.debugv("Database is up to date for changelog {0}",changelog);
    Method resetServices=Reflections.findDeclaredMethod(Liquibase.class,"resetServices");
    Reflections.invokeMethod(true,resetServices,liquibase);
  }
}
