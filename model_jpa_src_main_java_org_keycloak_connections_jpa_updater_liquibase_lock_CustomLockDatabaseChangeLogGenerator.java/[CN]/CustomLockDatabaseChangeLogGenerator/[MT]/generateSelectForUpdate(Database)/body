{
  String catalog=database.getLiquibaseCatalogName();
  String schema=database.getLiquibaseSchemaName();
  String rawLockTableName=database.getDatabaseChangeLogLockTableName();
  String lockTableName=database.escapeTableName(catalog,schema,rawLockTableName);
  String idColumnName=database.escapeColumnName(catalog,schema,rawLockTableName,"ID");
  String sqlBase="SELECT " + idColumnName + " FROM "+ lockTableName;
  String sqlWhere=" WHERE " + idColumnName + "=1";
  String sql;
  if (database instanceof MySQLDatabase || database instanceof PostgresDatabase || database instanceof H2Database|| database instanceof OracleDatabase) {
    sql=sqlBase + sqlWhere + " FOR UPDATE";
  }
 else   if (database instanceof MSSQLDatabase) {
    sql=sqlBase + " WITH (UPDLOCK, ROWLOCK)" + sqlWhere;
  }
 else   if (database instanceof DB2Database) {
    sql=sqlBase + sqlWhere + " FOR READ ONLY WITH RS USE AND KEEP UPDATE LOCKS";
  }
 else {
    sql=sqlBase + sqlWhere;
    logger.warnf("No direct support for database %s . Database lock may not work correctly",database.getClass().getName());
  }
  logger.debugf("SQL command for pessimistic lock: %s",sql);
  return new UnparsedSql(sql);
}
