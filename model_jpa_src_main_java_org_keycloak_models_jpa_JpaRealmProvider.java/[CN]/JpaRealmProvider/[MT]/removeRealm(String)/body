{
  RealmEntity realm=em.find(RealmEntity.class,id);
  if (realm == null) {
    return false;
  }
  RealmAdapter adapter=new RealmAdapter(session,em,realm);
  session.users().preRemove(adapter);
  int num=em.createNamedQuery("deleteGroupRoleMappingsByRealm").setParameter("realm",realm).executeUpdate();
  num=em.createNamedQuery("deleteGroupAttributesByRealm").setParameter("realm",realm).executeUpdate();
  num=em.createNamedQuery("deleteGroupsByRealm").setParameter("realm",realm).executeUpdate();
  TypedQuery<String> query=em.createNamedQuery("getClientIdsByRealm",String.class);
  query.setParameter("realm",realm.getId());
  List<String> clients=query.getResultList();
  for (  String client : clients) {
    session.realms().removeClient(client,adapter);
  }
  for (  ClientTemplateEntity a : new LinkedList<>(realm.getClientTemplates())) {
    adapter.removeClientTemplate(a.getId());
  }
  em.remove(realm);
  em.flush();
  em.clear();
  return true;
}
