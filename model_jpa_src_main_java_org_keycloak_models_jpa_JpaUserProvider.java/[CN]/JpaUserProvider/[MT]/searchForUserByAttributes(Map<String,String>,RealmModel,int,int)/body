{
  StringBuilder builder=new StringBuilder("select u from UserEntity u where u.realmId = :realmId");
  for (  Map.Entry<String,String> entry : attributes.entrySet()) {
    String attribute=null;
    String parameterName=null;
    if (entry.getKey().equals(UserModel.USERNAME)) {
      attribute="lower(u.username)";
      parameterName=JpaUserProvider.USERNAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.FIRST_NAME)) {
      attribute="lower(u.firstName)";
      parameterName=JpaUserProvider.FIRST_NAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.LAST_NAME)) {
      attribute="lower(u.lastName)";
      parameterName=JpaUserProvider.LAST_NAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.EMAIL)) {
      attribute="lower(u.email)";
      parameterName=JpaUserProvider.EMAIL;
    }
    if (attribute == null)     continue;
    builder.append(" and ");
    builder.append(attribute).append(" like :").append(parameterName);
  }
  builder.append(" order by u.username");
  String q=builder.toString();
  TypedQuery<UserEntity> query=em.createQuery(q,UserEntity.class);
  query.setParameter("realmId",realm.getId());
  for (  Map.Entry<String,String> entry : attributes.entrySet()) {
    String parameterName=null;
    if (entry.getKey().equals(UserModel.USERNAME)) {
      parameterName=JpaUserProvider.USERNAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.FIRST_NAME)) {
      parameterName=JpaUserProvider.FIRST_NAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.LAST_NAME)) {
      parameterName=JpaUserProvider.LAST_NAME;
    }
 else     if (entry.getKey().equalsIgnoreCase(UserModel.EMAIL)) {
      parameterName=JpaUserProvider.EMAIL;
    }
    if (parameterName == null)     continue;
    query.setParameter(parameterName,"%" + entry.getValue().toLowerCase() + "%");
  }
  if (firstResult != -1) {
    query.setFirstResult(firstResult);
  }
  if (maxResults != -1) {
    query.setMaxResults(maxResults);
  }
  List<UserEntity> results=query.getResultList();
  List<UserModel> users=new ArrayList<UserModel>();
  for (  UserEntity entity : results)   users.add(new UserAdapter(realm,em,entity));
  return users;
}
