{
  List<AuthenticationProviderEntity> newEntities=new ArrayList<AuthenticationProviderEntity>();
  int counter=1;
  for (  AuthenticationProviderModel model : authenticationProviders) {
    AuthenticationProviderEntity entity=new AuthenticationProviderEntity();
    entity.setRealm(realm);
    entity.setProviderName(model.getProviderName());
    entity.setPasswordUpdateSupported(model.isPasswordUpdateSupported());
    entity.setConfig(model.getConfig());
    entity.setPriority(counter++);
    newEntities.add(entity);
  }
  Collection<AuthenticationProviderEntity> existing=realm.getAuthenticationProviders();
  Collection<AuthenticationProviderEntity> copy=new ArrayList<AuthenticationProviderEntity>(existing);
  for (  AuthenticationProviderEntity apToRemove : copy) {
    existing.remove(apToRemove);
    em.remove(apToRemove);
  }
  em.flush();
  for (  AuthenticationProviderEntity apToAdd : newEntities) {
    existing.add(apToAdd);
    em.persist(apToAdd);
  }
  em.flush();
}
