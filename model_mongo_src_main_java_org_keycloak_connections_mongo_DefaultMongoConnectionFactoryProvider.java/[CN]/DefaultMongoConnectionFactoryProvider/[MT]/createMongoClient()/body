{
  operationalInfo=new LinkedHashMap<>();
  String dbName=config.get("db","keycloak");
  String uriString=config.get("uri");
  if (uriString != null) {
    MongoClientURI uri=new MongoClientURI(uriString);
    MongoClient client=new MongoClient(uri);
    StringBuilder hostsBuilder=new StringBuilder();
    for (int i=0; i < uri.getHosts().size(); i++) {
      if (i != 0) {
        hostsBuilder.append(", ");
      }
      hostsBuilder.append(uri.getHosts().get(i));
    }
    String hosts=hostsBuilder.toString();
    operationalInfo.put("mongoHosts",hosts);
    operationalInfo.put("mongoDatabaseName",dbName);
    operationalInfo.put("mongoUser",uri.getUsername());
    logger.debugv("Initialized mongo model. host(s): %s, db: %s",uri.getHosts(),dbName);
    return client;
  }
 else {
    String host=config.get("host",ServerAddress.defaultHost());
    int port=config.getInt("port",ServerAddress.defaultPort());
    String user=config.get("user");
    String password=config.get("password");
    MongoClientOptions clientOptions=getClientOptions();
    MongoClient client;
    if (user != null && password != null) {
      MongoCredential credential=MongoCredential.createCredential(user,dbName,password.toCharArray());
      client=new MongoClient(new ServerAddress(host,port),Collections.singletonList(credential),clientOptions);
    }
 else {
      client=new MongoClient(new ServerAddress(host,port),clientOptions);
    }
    operationalInfo.put("mongoServerAddress",client.getAddress().toString());
    operationalInfo.put("mongoDatabaseName",dbName);
    operationalInfo.put("mongoUser",user);
    logger.debugv("Initialized mongo model. host: %s, port: %d, db: %s",host,port,dbName);
    return client;
  }
}
