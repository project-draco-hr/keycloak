{
  log.debug("Starting database update");
  try {
    boolean changeLogExists=db.collectionExists(CHANGE_LOG_COLLECTION);
    DBCollection changeLog=db.getCollection(CHANGE_LOG_COLLECTION);
    List<String> executed=getExecuted(db,changeLogExists,changeLog);
    List<Update> updatesToRun=getUpdatesToRun(executed);
    if (!updatesToRun.isEmpty()) {
      if (executed.isEmpty()) {
        log.info("Initializing database schema");
      }
 else {
        if (log.isDebugEnabled()) {
          log.debugv("Updating database from {0} to {1}",executed.get(executed.size() - 1),updatesToRun.get(updatesToRun.size() - 1).getId());
        }
 else {
          log.info("Updating database");
        }
      }
      int order=executed.size();
      for (      Update u : updatesToRun) {
        log.debugv("Executing updates for {0}",u.getId());
        u.setLog(log);
        u.setDb(db);
        u.update(session);
        createLog(changeLog,u,++order);
        log.debugv("Completed updates for {0}",u.getId());
      }
      log.debug("Completed database update");
    }
 else {
      log.debug("Skip database update. Database is already up to date");
    }
  }
 catch (  Exception e) {
    throw new RuntimeException("Failed to update database",e);
  }
}
