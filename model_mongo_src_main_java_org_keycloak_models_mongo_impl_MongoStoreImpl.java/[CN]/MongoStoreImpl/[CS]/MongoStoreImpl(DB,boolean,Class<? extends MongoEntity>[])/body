{
  this.database=database;
  mapperRegistry=new MapperRegistry();
  for (  Class<?> simpleConverterClass : SIMPLE_TYPES) {
    SimpleMapper converter=new SimpleMapper(simpleConverterClass);
    mapperRegistry.addAppObjectMapper(converter);
    mapperRegistry.addDBObjectMapper(converter);
  }
  mapperRegistry.addAppObjectMapper(new ListMapper(mapperRegistry,ArrayList.class));
  mapperRegistry.addAppObjectMapper(new ListMapper(mapperRegistry,List.class));
  mapperRegistry.addDBObjectMapper(new BasicDBListMapper(mapperRegistry));
  mapperRegistry.addAppObjectMapper(new MapMapper(HashMap.class));
  mapperRegistry.addAppObjectMapper(new MapMapper(Map.class));
  mapperRegistry.addDBObjectMapper(new BasicDBObjectToMapMapper());
  mapperRegistry.addAppObjectMapper(new EnumToStringMapper());
  mapperRegistry.addDBObjectMapper(new StringToEnumMapper());
  for (  Class<? extends MongoEntity> type : managedEntityTypes) {
    getEntityInfo(type);
    mapperRegistry.addAppObjectMapper(new MongoEntityMapper(this,mapperRegistry,type));
    mapperRegistry.addDBObjectMapper(new BasicDBObjectMapper(this,mapperRegistry,type));
  }
  if (clearCollectionsOnStartup) {
    clearManagedCollections(managedEntityTypes);
  }
  initManagedCollections(managedEntityTypes);
}
