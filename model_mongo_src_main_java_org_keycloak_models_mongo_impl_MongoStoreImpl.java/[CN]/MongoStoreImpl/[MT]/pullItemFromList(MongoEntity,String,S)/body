{
  Class<? extends MongoEntity> type=object.getClass();
  ObjectInfo objectInfo=getObjectInfo(type);
  Property<String> oidProperty=getObjectInfo(type).getOidProperty();
  if (oidProperty == null) {
    throw new IllegalArgumentException("List pulls not supported for properties without oid");
  }
  Property<Object> listProperty=objectInfo.getPropertyByName(listPropertyName);
  if (listProperty == null) {
    throw new IllegalArgumentException("Property " + listPropertyName + " doesn't exist on object "+ object);
  }
  List<S> list=(List<S>)listProperty.getValue(object);
  if (list != null) {
    list.remove(itemToPull);
    Object dbItemToPull=typeConverter.convertApplicationObjectToDBObject(itemToPull,Object.class);
    BasicDBObject query=new BasicDBObject("_id",getObjectId(oidProperty.getValue(object)));
    BasicDBObject pullObject=new BasicDBObject(listPropertyName,dbItemToPull);
    BasicDBObject pullCommand=new BasicDBObject("$pull",pullObject);
    getDBCollectionForType(type).update(query,pullCommand);
  }
}
