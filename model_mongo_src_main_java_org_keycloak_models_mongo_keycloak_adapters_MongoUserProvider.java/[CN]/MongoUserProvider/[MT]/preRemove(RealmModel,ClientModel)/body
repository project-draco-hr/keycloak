{
  for (  RoleModel role : client.getRoles()) {
    preRemove(realm,role);
  }
  DBObject query=new QueryBuilder().and("clientId").is(client.getId()).get();
  getMongoStore().removeEntities(MongoUserConsentEntity.class,query,false,invocationContext);
  query=new QueryBuilder().and("offlineUserSessions.offlineClientSessions.clientId").is(client.getId()).get();
  List<MongoUserEntity> users=getMongoStore().loadEntities(MongoUserEntity.class,query,invocationContext);
  for (  MongoUserEntity user : users) {
    boolean anyRemoved=false;
    for (    OfflineUserSessionEntity userSession : user.getOfflineUserSessions()) {
      for (      OfflineClientSessionEntity clientSession : userSession.getOfflineClientSessions()) {
        if (clientSession.getClientId().equals(client.getId())) {
          userSession.getOfflineClientSessions().remove(clientSession);
          anyRemoved=true;
          break;
        }
      }
      if (userSession.getOfflineClientSessions().size() == 0) {
        user.getOfflineUserSessions().remove(userSession);
        anyRemoved=true;
        break;
      }
    }
    if (anyRemoved) {
      getMongoStore().updateEntity(user,invocationContext);
    }
  }
}
