{
  DBObject query=new QueryBuilder().get();
  DBObject sort=new BasicDBObject("id",1);
  Class<? extends MongoUserSessionEntity> clazz=offline ? MongoOfflineUserSessionEntity.class : MongoOnlineUserSessionEntity.class;
  List<? extends MongoUserSessionEntity> entities=getMongoStore().loadEntities(clazz,query,sort,firstResult,maxResults,invocationContext);
  List<UserSessionModel> results=new LinkedList<>();
  for (  MongoUserSessionEntity entity : entities) {
    RealmModel realm=session.realms().getRealm(entity.getRealmId());
    UserModel user=session.users().getUserById(entity.getUserId(),realm);
    if (user == null) {
      onUserRemoved(realm,entity.getUserId());
      return loadUserSessions(firstResult,maxResults,offline);
    }
    PersistentUserSessionAdapter userSession=toAdapter(realm,user,entity);
    results.add(userSession);
  }
  return results;
}
