{
  log.debug("Start pre-loading userSessions and clientSessions from persistent storage");
  if (compatMode) {
    SimpleUserSessionInitializer initializer=new SimpleUserSessionInitializer(sessionFactory,new OfflineUserSessionLoader(),sessionsPerSegment);
    initializer.loadPersistentSessions();
  }
 else {
    KeycloakModelUtils.runJobInTransaction(sessionFactory,new KeycloakSessionTask(){
      @Override public void run(      KeycloakSession session){
        InfinispanConnectionProvider connections=session.getProvider(InfinispanConnectionProvider.class);
        Cache<String,SessionEntity> cache=connections.getCache(InfinispanConnectionProvider.OFFLINE_SESSION_CACHE_NAME);
        InfinispanUserSessionInitializer initializer=new InfinispanUserSessionInitializer(sessionFactory,cache,new OfflineUserSessionLoader(),maxErrors,sessionsPerSegment,"offlineUserSessions");
        initializer.initCache();
        initializer.loadPersistentSessions();
      }
    }
);
  }
  log.debug("Pre-loading userSessions and clientSessions from persistent storage finished");
}
