{
  UserSessionPersisterProvider persister=session.getProvider(UserSessionPersisterProvider.class);
  Iterator<UserSessionEntity> itr=userSessions.values().iterator();
  while (itr.hasNext()) {
    UserSessionEntity s=itr.next();
    if (s.getRealm().equals(realm.getId()) && (s.getLastSessionRefresh() < Time.currentTime() - realm.getSsoSessionIdleTimeout() || s.getStarted() < Time.currentTime() - realm.getSsoSessionMaxLifespan())) {
      itr.remove();
      remove(s,false);
    }
  }
  int expired=Time.currentTime() - RealmInfoUtil.getDettachedClientSessionLifespan(realm);
  Iterator<ClientSessionEntity> citr=clientSessions.values().iterator();
  while (citr.hasNext()) {
    ClientSessionEntity c=citr.next();
    if (c.getSession() == null && c.getRealmId().equals(realm.getId()) && c.getTimestamp() < expired) {
      citr.remove();
    }
  }
  itr=offlineUserSessions.values().iterator();
  while (itr.hasNext()) {
    UserSessionEntity s=itr.next();
    if (s.getRealm().equals(realm.getId()) && (s.getLastSessionRefresh() < Time.currentTime() - realm.getOfflineSessionIdleTimeout())) {
      itr.remove();
      remove(s,true);
      persister.removeUserSession(s.getId(),true);
    }
  }
  citr=offlineClientSessions.values().iterator();
  while (citr.hasNext()) {
    ClientSessionEntity s=citr.next();
    if (s.getRealmId().equals(realm.getId()) && (s.getTimestamp() < Time.currentTime() - realm.getOfflineSessionIdleTimeout())) {
      citr.remove();
      persister.removeClientSession(s.getId(),true);
    }
  }
  Iterator<ClientInitialAccessEntity> iaitr=clientInitialAccess.values().iterator();
  while (iaitr.hasNext()) {
    ClientInitialAccessEntity e=iaitr.next();
    if (e.getRealmId().equals(realm.getId()) && (e.getExpires() < Time.currentTime())) {
      iaitr.remove();
    }
  }
}
