{
  provider.getTransaction().begin();
  Set<String> roles=new HashSet<String>();
  roles.add("a");
  roles.add("a1");
  User user=provider.addUser(userId,"user",roles,"test-realm");
  user.setFirstName("first-name");
  user.setLastName("last-name");
  user.setEmail("email");
  user.setAttribute("a","a1");
  user.setAttribute("b","b1");
  Set<String> roles2=new HashSet<String>();
  roles2.add("a");
  roles2.add("a2");
  User user2=provider.addUser(userId2,"user2",roles2,"test-realm");
  user2.setFirstName("first-name2");
  user2.setLastName("last-name2");
  user2.setEmail("email2");
  user2.setAttribute("a","a2");
  user2.setAttribute("b","b2");
  User user3=provider.addUser(userId3,"user",roles2,"test-realm2");
  user3.setFirstName("first-name");
  user3.setLastName("last-name");
  user3.setEmail("email");
  user3.setAttribute("a","a1");
  user3.setAttribute("b","b1");
  provider.getTransaction().commit();
  User persisted=provider.getUserById(userId,"test-realm");
  User persisted2=provider.getUserById(userId2,"test-realm");
  User persisted3=provider.getUserById(userId3,"test-realm2");
  assertUser(user,persisted);
  assertUser(user2,persisted2);
  assertUser(user3,persisted3);
}
