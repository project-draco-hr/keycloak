{
  test1CreateRealm();
{
    UserModel user=realmModel.addUser("bburke");
    user.setLastName("Burke");
    user.setFirstName("Bill");
    user.setEmail("bburke@redhat.com");
    UserModel user2=realmModel.addUser("doublefirst");
    user2.setFirstName("Knut Ole");
    user2.setLastName("Alver");
    user2.setEmail("knut@redhat.com");
    UserModel user3=realmModel.addUser("doublelast");
    user3.setFirstName("Ole");
    user3.setLastName("Alver Veland");
    user3.setEmail("knut2@redhat.com");
  }
  RealmManager adapter=realmManager;
{
    List<UserModel> userModels=adapter.searchUsers("total junk query",realmModel);
    Assert.assertEquals(userModels.size(),0);
  }
{
    List<UserModel> userModels=adapter.searchUsers("Bill Burke",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("bill burk",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    ArrayList<String> users=new ArrayList<String>();
    for (    UserModel u : adapter.searchUsers("ole alver",realmModel)) {
      users.add(u.getLoginName());
    }
    String[] usernames=users.toArray(new String[users.size()]);
    Arrays.sort(usernames);
    Assert.assertArrayEquals(new String[]{"doublefirst","doublelast"},usernames);
  }
{
    List<UserModel> userModels=adapter.searchUsers("bburke@redhat.com",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("rke@redhat.com",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("bburke",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("BurK",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("Burke",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Bill");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"bburke@redhat.com");
  }
{
    UserModel user=realmModel.addUser("mburke");
    user.setLastName("Burke");
    user.setFirstName("Monica");
    user.setEmail("mburke@redhat.com");
  }
{
    UserModel user=realmModel.addUser("thor");
    user.setLastName("Thorgersen");
    user.setFirstName("Stian");
    user.setEmail("thor@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("Monica Burke",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Monica");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"mburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("mburke@redhat.com",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Monica");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"mburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("mburke",realmModel);
    Assert.assertEquals(userModels.size(),1);
    UserModel bburke=userModels.get(0);
    Assert.assertEquals(bburke.getFirstName(),"Monica");
    Assert.assertEquals(bburke.getLastName(),"Burke");
    Assert.assertEquals(bburke.getEmail(),"mburke@redhat.com");
  }
{
    List<UserModel> userModels=adapter.searchUsers("Burke",realmModel);
    Assert.assertEquals(userModels.size(),2);
    UserModel first=userModels.get(0);
    UserModel second=userModels.get(1);
    if (!first.getEmail().equals("bburke@redhat.com") && !second.getEmail().equals("bburke@redhat.com")) {
      Assert.fail();
    }
    if (!first.getEmail().equals("mburke@redhat.com") && !second.getEmail().equals("mburke@redhat.com")) {
      Assert.fail();
    }
  }
  RealmModel otherRealm=adapter.createRealm("other");
  otherRealm.addUser("bburke");
  Assert.assertEquals(1,otherRealm.getUsers().size());
  Assert.assertEquals(1,otherRealm.searchForUser("bu").size());
}
