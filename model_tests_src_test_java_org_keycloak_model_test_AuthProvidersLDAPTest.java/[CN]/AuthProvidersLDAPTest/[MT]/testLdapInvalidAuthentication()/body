{
  setupAuthenticationProviders();
  UserModel realmUser=realm.addUser("realmUser");
  realmUser.setEnabled(true);
  UserCredentialModel credential=new UserCredentialModel();
  credential.setType(CredentialRepresentation.PASSWORD);
  credential.setValue("pass");
  realm.updateCredential(realmUser,credential);
  MultivaluedMap<String,String> formData=AuthProvidersExternalModelTest.createFormData("invalid","invalid");
  Assert.assertEquals(AuthenticationManager.AuthenticationStatus.INVALID_USER,am.authenticateForm(null,realm,formData));
  formData=AuthProvidersExternalModelTest.createFormData("john","invalid");
  Assert.assertEquals(AuthenticationManager.AuthenticationStatus.INVALID_CREDENTIALS,am.authenticateForm(null,realm,formData));
  formData=AuthProvidersExternalModelTest.createFormData("realmUser","invalid");
  Assert.assertEquals(AuthenticationManager.AuthenticationStatus.INVALID_CREDENTIALS,am.authenticateForm(null,realm,formData));
  realmUser.setEnabled(false);
  formData=AuthProvidersExternalModelTest.createFormData("realmUser","pass");
  Assert.assertEquals(AuthenticationManager.AuthenticationStatus.ACCOUNT_DISABLED,am.authenticateForm(null,realm,formData));
  realmUser.setEnabled(true);
  formData=AuthProvidersExternalModelTest.createFormData("realmUser","pass");
  Assert.assertEquals(AuthenticationManager.AuthenticationStatus.SUCCESS,am.authenticateForm(null,realm,formData));
}
