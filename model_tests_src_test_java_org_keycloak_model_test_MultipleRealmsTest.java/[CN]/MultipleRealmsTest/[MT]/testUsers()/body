{
  UserProvider userProvider=realmManager.getSession().users();
  UserModel r1user1=userProvider.getUserByUsername("user1",realm1);
  UserModel r2user1=userProvider.getUserByUsername("user1",realm2);
  Assert.assertEquals(r1user1.getUsername(),r2user1.getUsername());
  Assert.assertNotEquals(r1user1.getId(),r2user1.getId());
  r1user1.updateCredential(UserCredentialModel.password("pass1"));
  r2user1.updateCredential(UserCredentialModel.password("pass2"));
  Assert.assertTrue(userProvider.validCredentials(realm1,r1user1,UserCredentialModel.password("pass1")));
  Assert.assertFalse(userProvider.validCredentials(realm1,r1user1,UserCredentialModel.password("pass2")));
  Assert.assertFalse(userProvider.validCredentials(realm2,r2user1,UserCredentialModel.password("pass1")));
  Assert.assertTrue(userProvider.validCredentials(realm2,r2user1,UserCredentialModel.password("pass2")));
  Assert.assertEquals(2,userProvider.searchForUser("user",realm1).size());
  commit();
  realm1=model.getRealm("id1");
  realm2=model.getRealm("id2");
  userProvider.removeUser(realm1,"user1");
  userProvider.removeUser(realm1,"user2");
  Assert.assertEquals(0,userProvider.searchForUser("user",realm1).size());
  Assert.assertEquals(2,userProvider.searchForUser("user",realm2).size());
}
