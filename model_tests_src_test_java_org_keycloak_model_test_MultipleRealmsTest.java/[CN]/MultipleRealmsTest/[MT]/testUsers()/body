{
  UserModel r1user1=realmManager.getSession().users().getUserByUsername("user1",realm1);
  UserModel r2user1=realmManager.getSession().users().getUserByUsername("user1",realm2);
  Assert.assertEquals(r1user1.getUsername(),r2user1.getUsername());
  Assert.assertNotEquals(r1user1.getId(),r2user1.getId());
  r1user1.updateCredential(UserCredentialModel.password("pass1"));
  r2user1.updateCredential(UserCredentialModel.password("pass2"));
  Assert.assertTrue(realm1.validatePassword(r1user1,"pass1"));
  Assert.assertFalse(realm1.validatePassword(r1user1,"pass2"));
  Assert.assertFalse(realm2.validatePassword(r2user1,"pass1"));
  Assert.assertTrue(realm2.validatePassword(r2user1,"pass2"));
  Assert.assertEquals(2,realmManager.getSession().users().searchForUser("user",realm1).size());
  commit();
  realm1=model.getRealm("id1");
  realm2=model.getRealm("id2");
  realmManager.getSession().users().removeUser(realm1,"user1");
  realmManager.getSession().users().removeUser(realm1,"user2");
  Assert.assertEquals(0,realmManager.getSession().users().searchForUser("user",realm1).size());
  Assert.assertEquals(2,realmManager.getSession().users().searchForUser("user",realm2).size());
}
