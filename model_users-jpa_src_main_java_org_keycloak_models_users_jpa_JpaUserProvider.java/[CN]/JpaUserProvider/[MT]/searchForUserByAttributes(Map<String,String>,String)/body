{
  StringBuilder builder=new StringBuilder("select u from UserEntity u");
  boolean first=true;
  for (  Map.Entry<String,String> entry : attributes.entrySet()) {
    String attribute=null;
    if (entry.getKey().equals(User.USERNAME)) {
      attribute="lower(username)";
    }
 else     if (entry.getKey().equalsIgnoreCase(User.FIRST_NAME)) {
      attribute="lower(firstName)";
    }
 else     if (entry.getKey().equalsIgnoreCase(User.LAST_NAME)) {
      attribute="lower(lastName)";
    }
 else     if (entry.getKey().equalsIgnoreCase(User.EMAIL)) {
      attribute="lower(email)";
    }
    if (attribute == null)     continue;
    if (first) {
      first=false;
      builder.append(" where realm = :realm");
    }
 else {
      builder.append(" and ");
    }
    builder.append(attribute).append(" like '%").append(entry.getValue().toLowerCase()).append("%'");
  }
  String q=builder.toString();
  TypedQuery<UserEntity> query=em.createQuery(q,UserEntity.class);
  query.setParameter("realm",realm);
  List<UserEntity> results=query.getResultList();
  List<User> users=new ArrayList<User>();
  for (  UserEntity entity : results)   users.add(new UserAdapter(realm,em,entity));
  return users;
}
