{
  XMLInputFactory xmlInputFactory=getXMLInputFactory();
  xmlEventReader=xmlInputFactory.createFilteredReader(xmlEventReader,new EventFilter(){
    public boolean accept(    XMLEvent xmlEvent){
      if (xmlEvent.isCharacters()) {
        Characters chars=xmlEvent.asCharacters();
        String data=chars.getData();
        data=valid(data) ? data.trim() : null;
        return valid(data);
      }
 else {
        return xmlEvent.isStartElement() || xmlEvent.isEndElement();
      }
    }
    private boolean valid(    String str){
      return str != null && str.length() > 0;
    }
  }
);
  if (Environment.IS_IBM_JAVA) {
    final XMLEventReader origReader=xmlEventReader;
    xmlEventReader=new EventReaderDelegate(origReader){
      @Override public boolean hasNext(){
        boolean hasNext=super.hasNext();
        try {
          return hasNext && (origReader.peek() != null);
        }
 catch (        XMLStreamException xse) {
          throw new IllegalStateException(xse);
        }
      }
    }
;
  }
  return xmlEventReader;
}
