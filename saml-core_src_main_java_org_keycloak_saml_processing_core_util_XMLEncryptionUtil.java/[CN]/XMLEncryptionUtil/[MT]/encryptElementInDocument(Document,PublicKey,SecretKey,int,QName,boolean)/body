{
  String wrappingElementPrefix=wrappingElementQName.getPrefix();
  if (wrappingElementPrefix == null || wrappingElementPrefix == "")   throw logger.wrongTypeError("Wrapping element prefix invalid");
  XMLCipher cipher=null;
  EncryptedKey encryptedKey=encryptKey(document,secretKey,publicKey,keySize);
  String encryptionAlgorithm=getXMLEncryptionURL(secretKey.getAlgorithm(),keySize);
  try {
    cipher=XMLCipher.getInstance(encryptionAlgorithm);
    cipher.init(XMLCipher.ENCRYPT_MODE,secretKey);
  }
 catch (  XMLEncryptionException e1) {
    throw logger.configurationError(e1);
  }
  Document encryptedDoc;
  try {
    encryptedDoc=cipher.doFinal(document,document.getDocumentElement());
  }
 catch (  Exception e) {
    throw logger.processingError(e);
  }
  Element encryptedKeyElement=cipher.martial(document,encryptedKey);
  String wrappingElementName=wrappingElementPrefix + ":" + wrappingElementQName.getLocalPart();
  Element wrappingElement=encryptedDoc.createElementNS(wrappingElementQName.getNamespaceURI(),wrappingElementName);
  if (StringUtil.isNullOrEmpty(wrappingElementPrefix)) {
    wrappingElementName=wrappingElementQName.getLocalPart();
  }
  wrappingElement.setAttributeNS(XMLNS,"xmlns:" + wrappingElementPrefix,wrappingElementQName.getNamespaceURI());
  Element encryptedDocRootElement=encryptedDoc.getDocumentElement();
  encryptedDoc.replaceChild(wrappingElement,encryptedDocRootElement);
  wrappingElement.appendChild(encryptedDocRootElement);
  if (addEncryptedKeyInKeyInfo) {
    Element sigElement=encryptedDoc.createElementNS(XMLSIG_NS,DS_KEY_INFO);
    sigElement.setAttributeNS(XMLNS,"xmlns:ds",XMLSIG_NS);
    sigElement.appendChild(encryptedKeyElement);
    NodeList nodeList=encryptedDocRootElement.getElementsByTagNameNS(XMLENC_NS,CIPHER_DATA_LOCALNAME);
    if (nodeList == null || nodeList.getLength() == 0)     throw logger.domMissingElementError("xenc:CipherData");
    Element cipherDataElement=(Element)nodeList.item(0);
    encryptedDocRootElement.insertBefore(sigElement,cipherDataElement);
  }
 else {
    wrappingElement.appendChild(encryptedKeyElement);
  }
  return encryptedDoc.getDocumentElement();
}
