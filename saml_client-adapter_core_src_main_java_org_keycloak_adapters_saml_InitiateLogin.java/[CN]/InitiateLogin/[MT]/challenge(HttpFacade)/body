{
  try {
    String issuerURL=deployment.getIssuer();
    String actionUrl=deployment.getSingleSignOnServiceUrl();
    String destinationUrl=actionUrl;
    String nameIDPolicyFormat=deployment.getNameIDPolicyFormat();
    if (nameIDPolicyFormat == null) {
      nameIDPolicyFormat=JBossSAMLURIConstants.NAMEID_FORMAT_PERSISTENT.get();
    }
    String protocolBinding=JBossSAMLURIConstants.SAML_HTTP_REDIRECT_BINDING.get();
    if (deployment.getResponseBinding() == SamlDeployment.Binding.POST) {
      protocolBinding=JBossSAMLURIConstants.SAML_HTTP_POST_BINDING.get();
    }
    SAML2AuthnRequestBuilder authnRequestBuilder=new SAML2AuthnRequestBuilder().assertionConsumerUrl(deployment.getAssertionConsumerServiceUrl()).destination(destinationUrl).issuer(issuerURL).forceAuthn(deployment.isForceAuthentication()).protocolBinding(protocolBinding).nameIdPolicy(SAML2NameIDPolicyBuilder.format(nameIDPolicyFormat));
    BaseSAML2BindingBuilder binding=new BaseSAML2BindingBuilder();
    if (deployment.isRequestsSigned()) {
      KeyPair keypair=deployment.getSigningKeyPair();
      if (keypair == null) {
        throw new RuntimeException("Signing keys not configured");
      }
      if (deployment.getSignatureCanonicalizationMethod() != null) {
        binding.canonicalizationMethod(deployment.getSignatureCanonicalizationMethod());
      }
      binding.signWith(keypair);
      binding.signDocument();
    }
    sessionStore.saveRequest();
    Document document=authnRequestBuilder.toDocument();
    SamlDeployment.Binding samlBinding=deployment.getRequestBinding();
    SamlUtil.sendSaml(httpFacade,actionUrl,binding,document,samlBinding);
  }
 catch (  Exception e) {
    throw new RuntimeException("Could not create authentication request.",e);
  }
  return true;
}
