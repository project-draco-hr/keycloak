{
  if (nodeToBeSigned == null)   throw logger.nullArgumentError("Node to be signed");
  if (logger.isTraceEnabled()) {
    logger.trace("Document to be signed=" + DocumentUtil.asString(doc));
  }
  Node parentNode=nodeToBeSigned.getParentNode();
  Document newDoc=DocumentUtil.createDocument();
  Node signingNode=newDoc.importNode(nodeToBeSigned,true);
  newDoc.appendChild(signingNode);
  if (!referenceURI.isEmpty()) {
    propagateIDAttributeSetup(nodeToBeSigned,newDoc.getDocumentElement());
  }
  newDoc=sign(newDoc,keyPair,digestMethod,signatureMethod,referenceURI,x509Certificate,canonicalizationMethodType);
  if (nodeToBeSigned.getLocalName().equals("Assertion") && WSTrustConstants.SAML2_ASSERTION_NS.equals(nodeToBeSigned.getNamespaceURI())) {
    Node signatureNode=DocumentUtil.getElement(newDoc,new QName(WSTrustConstants.DSIG_NS,"Signature"));
    Node subjectNode=DocumentUtil.getElement(newDoc,new QName(WSTrustConstants.SAML2_ASSERTION_NS,"Subject"));
    if (signatureNode != null && subjectNode != null) {
      newDoc.getDocumentElement().removeChild(signatureNode);
      newDoc.getDocumentElement().insertBefore(signatureNode,subjectNode);
    }
  }
  Node signedNode=doc.importNode(newDoc.getFirstChild(),true);
  if (!referenceURI.isEmpty()) {
    propagateIDAttributeSetup(newDoc.getDocumentElement(),(Element)signedNode);
  }
  parentNode.replaceChild(signedNode,nodeToBeSigned);
  return doc;
}
