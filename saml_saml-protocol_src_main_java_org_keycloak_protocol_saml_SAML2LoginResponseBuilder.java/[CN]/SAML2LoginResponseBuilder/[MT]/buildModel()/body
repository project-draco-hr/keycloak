{
  ResponseType responseType=null;
  SAML2Response saml2Response=new SAML2Response();
  String id=IDGenerator.create("ID_");
  IssuerInfoHolder issuerHolder=new IssuerInfoHolder(issuer);
  issuerHolder.setStatusCode(JBossSAMLURIConstants.STATUS_SUCCESS.get());
  IDPInfoHolder idp=new IDPInfoHolder();
  idp.setNameIDFormatValue(nameId);
  idp.setNameIDFormat(nameIdFormat);
  SPInfoHolder sp=new SPInfoHolder();
  sp.setResponseDestinationURI(destination);
  sp.setRequestID(requestID);
  sp.setIssuer(requestIssuer);
  responseType=saml2Response.createResponseType(id,sp,idp,issuerHolder);
  AssertionType assertion=responseType.getAssertions().get(0).getAssertion();
  AudienceRestrictionType audience=new AudienceRestrictionType();
  audience.addAudience(URI.create(requestIssuer));
  assertion.getConditions().addCondition(audience);
  if (assertionExpiration > 0) {
    ConditionsType conditions=assertion.getConditions();
    conditions.setNotOnOrAfter(XMLTimeUtil.add(conditions.getNotBefore(),assertionExpiration * 1000));
  }
  if (subjectExpiration > 0) {
    SubjectConfirmationDataType subjectConfirmationData=assertion.getSubject().getConfirmation().get(0).getSubjectConfirmationData();
    subjectConfirmationData.setNotOnOrAfter(XMLTimeUtil.add(assertion.getConditions().getNotBefore(),subjectExpiration * 1000));
  }
  if (!disableAuthnStatement) {
    String authContextRef=JBossSAMLURIConstants.AC_UNSPECIFIED.get();
    if (isNotNull(authMethod))     authContextRef=authMethod;
    AuthnStatementType authnStatement=StatementUtil.createAuthnStatement(XMLTimeUtil.getIssueInstant(),authContextRef);
    if (sessionIndex != null)     authnStatement.setSessionIndex(sessionIndex);
 else     authnStatement.setSessionIndex(assertion.getID());
    assertion.addStatement(authnStatement);
  }
  return responseType;
}
