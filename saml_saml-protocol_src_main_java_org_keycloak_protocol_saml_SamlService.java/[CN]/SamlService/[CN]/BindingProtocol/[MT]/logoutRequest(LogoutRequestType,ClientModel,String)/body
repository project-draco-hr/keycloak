{
  if (!uriInfo.getAbsolutePath().equals(logoutRequest.getDestination())) {
    event.error(Errors.INVALID_SAML_LOGOUT_REQUEST);
    event.detail(Details.REASON,"invalid_destination");
    return Flows.forwardToSecurityFailurePage(session,realm,uriInfo,"Invalid request.");
  }
  AuthenticationManager.AuthResult authResult=authManager.authenticateIdentityCookie(session,realm,uriInfo,clientConnection,headers,false);
  if (authResult != null) {
    String logoutBinding=getBindingType();
    if ("true".equals(client.getAttribute(SamlProtocol.SAML_FORCE_POST_BINDING)))     logoutBinding=SamlProtocol.SAML_POST_BINDING;
    String bindingUri=SamlProtocol.getLogoutServiceUrl(uriInfo,client,logoutBinding);
    UserSessionModel userSession=authResult.getSession();
    userSession.setNote(SamlProtocol.SAML_LOGOUT_BINDING_URI,bindingUri);
    if (SamlProtocol.requiresRealmSignature(client)) {
      userSession.setNote(SamlProtocol.SAML_LOGOUT_SIGNATURE_ALGORITHM,SamlProtocol.getSignatureAlgorithm(client).toString());
    }
    if (relayState != null)     userSession.setNote(SamlProtocol.SAML_LOGOUT_RELAY_STATE,relayState);
    userSession.setNote(SamlProtocol.SAML_LOGOUT_REQUEST_ID,logoutRequest.getID());
    userSession.setNote(SamlProtocol.SAML_LOGOUT_BINDING,logoutBinding);
    userSession.setNote(SamlProtocol.SAML_LOGOUT_ISSUER,logoutRequest.getIssuer().getValue());
    userSession.setNote(AuthenticationManager.KEYCLOAK_LOGOUT_PROTOCOL,SamlProtocol.LOGIN_PROTOCOL);
    for (    ClientSessionModel clientSession : userSession.getClientSessions()) {
      if (clientSession.getClient().getId().equals(client.getId())) {
        clientSession.setAction(ClientSessionModel.Action.LOGGED_OUT);
      }
    }
    logger.debug("browser Logout");
    return authManager.browserLogout(session,realm,userSession,uriInfo,clientConnection);
  }
  String redirectUri=null;
  if (client instanceof ApplicationModel) {
    redirectUri=((ApplicationModel)client).getBaseUrl();
  }
  if (redirectUri != null) {
    redirectUri=OIDCLoginProtocolService.verifyRedirectUri(uriInfo,redirectUri,realm,client);
    if (redirectUri == null) {
      return Flows.forwardToSecurityFailurePage(session,realm,uriInfo,"Invalid redirect uri.");
    }
  }
  if (redirectUri != null) {
    return Response.status(302).location(UriBuilder.fromUri(redirectUri).build()).build();
  }
 else {
    return Response.ok().build();
  }
}
