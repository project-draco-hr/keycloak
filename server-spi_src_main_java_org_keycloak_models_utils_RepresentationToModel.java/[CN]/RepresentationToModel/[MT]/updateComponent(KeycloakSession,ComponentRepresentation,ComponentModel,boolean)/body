{
  if (rep.getParentId() != null) {
    component.setParentId(rep.getParentId());
  }
  if (rep.getProviderType() != null) {
    component.setProviderType(rep.getProviderType());
  }
  if (rep.getProviderId() != null) {
    component.setProviderId(rep.getProviderId());
  }
  Map<String,ProviderConfigProperty> providerConfiguration=null;
  if (!internal) {
    providerConfiguration=ComponentUtil.getComponentConfigProperties(session,component);
  }
  if (rep.getConfig() != null) {
    Set<String> keys=new HashSet<>(rep.getConfig().keySet());
    for (    String k : keys) {
      if (!internal && !providerConfiguration.containsKey(k)) {
        break;
      }
      List<String> values=rep.getConfig().get(k);
      if (values == null || values.isEmpty() || values.get(0) == null || values.get(0).trim().isEmpty()) {
        component.getConfig().remove(k);
      }
 else {
        ListIterator<String> itr=values.listIterator();
        while (itr.hasNext()) {
          String v=itr.next();
          if (v == null || v.trim().isEmpty() || v.equals(ComponentRepresentation.SECRET_VALUE)) {
            itr.remove();
          }
        }
        if (!values.isEmpty()) {
          component.getConfig().put(k,values);
        }
      }
    }
  }
}
