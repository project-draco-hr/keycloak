{
  if (!StorageId.isLocalStorage(user)) {
    String providerId=StorageId.resolveProviderId(user);
    UserStorageProvider provider=getStorageProvider(realm,providerId);
    if (provider instanceof CredentialInputValidator) {
      CredentialInputValidator validator=(CredentialInputValidator)provider;
      if (validator.supportsCredentialType(type) && validator.isConfiguredFor(realm,user,type)) {
        return true;
      }
    }
  }
  List<ComponentModel> components=getCredentialProviderComponents(realm);
  for (  ComponentModel component : components) {
    CredentialProviderFactory factory=(CredentialProviderFactory)session.getKeycloakSessionFactory().getProviderFactory(CredentialProvider.class,component.getProviderId());
    if (!Types.supports(CredentialInputUpdater.class,factory,CredentialProviderFactory.class))     continue;
    CredentialInputValidator validator=(CredentialInputValidator)session.getAttribute(component.getId());
    if (validator == null) {
      validator=(CredentialInputValidator)factory.create(session,component);
      session.setAttribute(component.getId(),validator);
    }
    if (validator.supportsCredentialType(type) && validator.isConfiguredFor(realm,user,type)) {
      return true;
    }
  }
  return false;
}
