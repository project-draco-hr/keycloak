{
  checkClientSession();
  event.event(EventType.LOGIN);
  event.client(clientSession.getClient().getClientId()).detail(Details.REDIRECT_URI,clientSession.getRedirectUri()).detail(Details.AUTH_METHOD,clientSession.getAuthMethod());
  String authType=clientSession.getNote(Details.AUTH_TYPE);
  if (authType != null) {
    event.detail(Details.AUTH_TYPE,authType);
  }
  UserModel authUser=clientSession.getAuthenticatedUser();
  validateUser(authUser);
  FlowExecution flowExecution=createFlowExecution(this.flowId);
  Response challenge=flowExecution.processFlow();
  if (challenge != null)   return challenge;
  String username=clientSession.getAuthenticatedUser().getUsername();
  if (userSession == null) {
    userSession=session.sessions().createUserSession(realm,clientSession.getAuthenticatedUser(),username,connection.getRemoteAddr(),"form",false,null,null);
    userSession.setState(UserSessionModel.State.LOGGING_IN);
    userSessionCreated=true;
  }
  TokenManager.attachClientSession(userSession,clientSession);
  event.user(userSession.getUser()).detail(Details.USERNAME,username).session(userSession);
  return AuthenticationManager.actionRequired(session,userSession,clientSession,connection,request,uriInfo,event);
}
