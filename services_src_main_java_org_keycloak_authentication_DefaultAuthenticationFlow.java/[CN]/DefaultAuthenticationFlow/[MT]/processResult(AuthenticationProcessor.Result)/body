{
  AuthenticationExecutionModel execution=result.getExecution();
  FlowStatus status=result.getStatus();
  if (status == FlowStatus.SUCCESS) {
    AuthenticationProcessor.logger.debugv("authenticator SUCCESS: {0}",execution.getAuthenticator());
    processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.SUCCESS);
    if (execution.isAlternative())     alternativeSuccessful=true;
    return null;
  }
 else   if (status == FlowStatus.FAILED) {
    AuthenticationProcessor.logger.debugv("authenticator FAILED: {0}",execution.getAuthenticator());
    processor.logFailure();
    processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.FAILED);
    if (result.getChallenge() != null) {
      return sendChallenge(result,execution);
    }
    throw new AuthenticationFlowException(result.getError());
  }
 else   if (status == FlowStatus.FORK) {
    AuthenticationProcessor.logger.debugv("reset browser login from authenticator: {0}",execution.getAuthenticator());
    processor.getClientSession().setNote(AuthenticationProcessor.CURRENT_AUTHENTICATION_EXECUTION,execution.getId());
    throw new ForkFlowException(result.getSuccessMessage(),result.getErrorMessage());
  }
 else   if (status == FlowStatus.FORCE_CHALLENGE) {
    processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.CHALLENGED);
    return sendChallenge(result,execution);
  }
 else   if (status == FlowStatus.CHALLENGE) {
    AuthenticationProcessor.logger.debugv("authenticator CHALLENGE: {0}",execution.getAuthenticator());
    if (execution.isRequired()) {
      processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.CHALLENGED);
      return sendChallenge(result,execution);
    }
    UserModel authenticatedUser=processor.getClientSession().getAuthenticatedUser();
    if (execution.isOptional() && authenticatedUser != null && result.getAuthenticator().configuredFor(processor.getSession(),processor.getRealm(),authenticatedUser)) {
      processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.CHALLENGED);
      return sendChallenge(result,execution);
    }
    if (execution.isAlternative()) {
      alternativeChallenge=result.getChallenge();
      challengedAlternativeExecution=execution;
    }
 else {
      processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.SKIPPED);
    }
    return null;
  }
 else   if (status == FlowStatus.FAILURE_CHALLENGE) {
    AuthenticationProcessor.logger.debugv("authenticator FAILURE_CHALLENGE: {0}",execution.getAuthenticator());
    processor.logFailure();
    processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.CHALLENGED);
    return sendChallenge(result,execution);
  }
 else   if (status == FlowStatus.ATTEMPTED) {
    AuthenticationProcessor.logger.debugv("authenticator ATTEMPTED: {0}",execution.getAuthenticator());
    if (execution.getRequirement() == AuthenticationExecutionModel.Requirement.REQUIRED) {
      throw new AuthenticationFlowException(AuthenticationFlowError.INVALID_CREDENTIALS);
    }
    processor.getClientSession().setExecutionStatus(execution.getId(),ClientSessionModel.ExecutionStatus.ATTEMPTED);
    return null;
  }
 else {
    AuthenticationProcessor.logger.debugv("authenticator INTERNAL_ERROR: {0}",execution.getAuthenticator());
    AuthenticationProcessor.logger.error("Unknown result status");
    throw new AuthenticationFlowException(AuthenticationFlowError.INTERNAL_ERROR);
  }
}
