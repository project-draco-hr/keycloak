{
  String username=inputData.getFirst(AuthenticationManager.FORM_USERNAME);
  if (username == null) {
    context.getEvent().error(Errors.USER_NOT_FOUND);
    Response challengeResponse=invalidUser(context);
    context.failureChallenge(AuthenticationFlowError.INVALID_USER,challengeResponse);
    return false;
  }
  context.getEvent().detail(Details.USERNAME,username);
  context.getClientSession().setNote(AbstractUsernameFormAuthenticator.ATTEMPTED_USERNAME,username);
  UserModel user=null;
  try {
    user=KeycloakModelUtils.findUserByNameOrEmail(context.getSession(),context.getRealm(),username);
  }
 catch (  ModelDuplicateException mde) {
    logger.error(mde.getMessage(),mde);
    if (mde.getDuplicateFieldName() != null && mde.getDuplicateFieldName().equals(UserModel.EMAIL)) {
      setDuplicateUserChallenge(context,Errors.EMAIL_IN_USE,Messages.EMAIL_EXISTS,AuthenticationFlowError.INVALID_USER);
    }
 else {
      setDuplicateUserChallenge(context,Errors.USERNAME_IN_USE,Messages.USERNAME_EXISTS,AuthenticationFlowError.INVALID_USER);
    }
    return false;
  }
  if (invalidUser(context,user)) {
    return false;
  }
  if (!validatePassword(context,user,inputData)) {
    return false;
  }
  if (!enabledUser(context,user)) {
    return false;
  }
  String rememberMe=inputData.getFirst("rememberMe");
  boolean remember=rememberMe != null && rememberMe.equalsIgnoreCase("on");
  if (remember) {
    context.getClientSession().setNote(Details.REMEMBER_ME,"true");
    context.getEvent().detail(Details.REMEMBER_ME,"true");
  }
 else {
    context.getClientSession().removeNote(Details.REMEMBER_ME);
  }
  context.setUser(user);
  return true;
}
