{
  MultivaluedMap<String,String> inputData=context.getHttpRequest().getDecodedFormParameters();
  if (inputData.containsKey("cancel")) {
    context.resetFlow();
    return;
  }
  List<UserCredentialModel> credentials=new LinkedList<>();
  String password=inputData.getFirst(CredentialRepresentation.TOTP);
  if (password == null) {
    Response challengeResponse=challenge(context,null);
    context.challenge(challengeResponse);
    return;
  }
  credentials.add(UserCredentialModel.otp(context.getRealm().getOTPPolicy().getType(),password));
  boolean valid=context.getSession().users().validCredentials(context.getSession(),context.getRealm(),context.getUser(),credentials);
  if (!valid) {
    context.getEvent().user(context.getUser()).error(Errors.INVALID_USER_CREDENTIALS);
    Response challengeResponse=challenge(context,Messages.INVALID_TOTP);
    context.failureChallenge(AuthenticationFlowError.INVALID_CREDENTIALS,challengeResponse);
    return;
  }
  context.success();
}
