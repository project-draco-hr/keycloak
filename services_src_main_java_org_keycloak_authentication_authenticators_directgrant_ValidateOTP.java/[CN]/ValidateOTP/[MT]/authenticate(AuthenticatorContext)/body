{
  if (!isConfigured(context.getSession(),context.getRealm(),context.getUser())) {
    if (context.getExecution().isOptional()) {
      context.attempted();
    }
 else     if (context.getExecution().isRequired()) {
      context.getEvent().error(Errors.INVALID_USER_CREDENTIALS);
      Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_grant","Invalid user credentials");
      context.failure(AuthenticationProcessor.Error.INVALID_USER,challengeResponse);
    }
    return;
  }
  MultivaluedMap<String,String> inputData=context.getHttpRequest().getDecodedFormParameters();
  List<UserCredentialModel> credentials=new LinkedList<>();
  String otp=inputData.getFirst(CredentialRepresentation.TOTP);
  if (otp == null) {
    if (context.getUser() != null) {
      context.getEvent().user(context.getUser());
    }
    context.getEvent().error(Errors.INVALID_USER_CREDENTIALS);
    Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_grant","Invalid user credentials");
    context.failure(AuthenticationProcessor.Error.INVALID_USER,challengeResponse);
    return;
  }
  credentials.add(UserCredentialModel.otp(context.getRealm().getOTPPolicy().getType(),otp));
  boolean valid=context.getSession().users().validCredentials(context.getRealm(),context.getUser(),credentials);
  if (!valid) {
    context.getEvent().user(context.getUser());
    context.getEvent().error(Errors.INVALID_USER_CREDENTIALS);
    Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_grant","Invalid user credentials");
    context.failure(AuthenticationProcessor.Error.INVALID_USER,challengeResponse);
    return;
  }
  context.success();
}
