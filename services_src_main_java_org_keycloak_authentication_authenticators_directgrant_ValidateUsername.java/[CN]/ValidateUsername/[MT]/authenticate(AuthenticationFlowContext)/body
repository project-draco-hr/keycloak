{
  MultivaluedMap<String,String> inputData=context.getHttpRequest().getDecodedFormParameters();
  String username=inputData.getFirst(AuthenticationManager.FORM_USERNAME);
  if (username == null) {
    context.getEvent().error(Errors.USER_NOT_FOUND);
    Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_request","Missing parameter: username");
    context.failure(AuthenticationFlowError.INVALID_USER,challengeResponse);
    return;
  }
  context.getEvent().detail(Details.USERNAME,username);
  context.getClientSession().setNote(AbstractUsernameFormAuthenticator.ATTEMPTED_USERNAME,username);
  UserModel user=null;
  try {
    user=KeycloakModelUtils.findUserByNameOrEmail(context.getSession(),context.getRealm(),username);
  }
 catch (  ModelDuplicateException mde) {
    logger.modelDuplicateException(mde);
    Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_request","Invalid user credentials");
    context.failure(AuthenticationFlowError.INVALID_USER,challengeResponse);
    return;
  }
  if (user == null) {
    context.getEvent().error(Errors.INVALID_USER_CREDENTIALS);
    Response challengeResponse=errorResponse(Response.Status.UNAUTHORIZED.getStatusCode(),"invalid_grant","Invalid user credentials");
    context.failure(AuthenticationFlowError.INVALID_USER,challengeResponse);
    return;
  }
  if (!user.isEnabled()) {
    context.getEvent().user(user);
    context.getEvent().error(Errors.USER_DISABLED);
    Response challengeResponse=errorResponse(Response.Status.BAD_REQUEST.getStatusCode(),"invalid_grant","Account disabled");
    context.failure(AuthenticationFlowError.INVALID_USER,challengeResponse);
    return;
  }
  if (context.getRealm().isBruteForceProtected()) {
    if (context.getProtector().isTemporarilyDisabled(context.getSession(),context.getRealm(),user)) {
      context.getEvent().user(user);
      context.getEvent().error(Errors.USER_TEMPORARILY_DISABLED);
      Response challengeResponse=errorResponse(Response.Status.BAD_REQUEST.getStatusCode(),"invalid_grant","Account temporarily disabled");
      context.failure(AuthenticationFlowError.INVALID_USER,challengeResponse);
      return;
    }
  }
  context.setUser(user);
  context.success();
}
