{
  UserModel user=context.getUser();
  String username=context.getClientSession().getNote(AbstractUsernameFormAuthenticator.ATTEMPTED_USERNAME);
  if (user == null) {
    context.forkWithSuccessMessage(new FormMessage(Messages.EMAIL_SENT));
    return;
  }
  EventBuilder event=context.getEvent();
  if (user.getEmail() == null || user.getEmail().trim().length() == 0) {
    event.user(user).detail(Details.USERNAME,username).error(Errors.INVALID_EMAIL);
    context.forkWithSuccessMessage(new FormMessage(Messages.EMAIL_SENT));
    return;
  }
  String secret=HmacOTP.generateSecret(10);
  context.getClientSession().setNote(RESET_CREDENTIAL_SECRET,secret);
  String link=UriBuilder.fromUri(context.getActionUrl()).queryParam(Constants.KEY,secret).build().toString();
  long expiration=TimeUnit.SECONDS.toMinutes(context.getRealm().getAccessCodeLifespanUserAction());
  try {
    context.getSession().getProvider(EmailProvider.class).setRealm(context.getRealm()).setUser(user).sendPasswordReset(link,expiration);
    event.clone().event(EventType.SEND_RESET_PASSWORD).user(user).detail(Details.USERNAME,username).detail(Details.EMAIL,user.getEmail()).detail(Details.CODE_ID,context.getClientSession().getId()).success();
    context.forkWithSuccessMessage(new FormMessage(Messages.EMAIL_SENT));
  }
 catch (  EmailException e) {
    event.clone().event(EventType.SEND_RESET_PASSWORD).detail(Details.USERNAME,username).user(user).error(Errors.EMAIL_SEND_FAILED);
    logger.error("Failed to send password reset email",e);
    Response challenge=context.form().setError(Messages.EMAIL_SENT_ERROR).createErrorPage();
    context.failure(AuthenticationFlowError.INTERNAL_ERROR,challenge);
  }
}
