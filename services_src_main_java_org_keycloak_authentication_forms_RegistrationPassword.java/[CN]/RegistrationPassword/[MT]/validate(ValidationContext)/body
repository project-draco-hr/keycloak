{
  MultivaluedMap<String,String> formData=context.getHttpRequest().getDecodedFormParameters();
  List<FormMessage> errors=new ArrayList<>();
  context.getEvent().detail(Details.REGISTER_METHOD,"form");
  if (Validation.isBlank(formData.getFirst(RegistrationPage.FIELD_PASSWORD))) {
    errors.add(new FormMessage(RegistrationPage.FIELD_PASSWORD,Messages.MISSING_PASSWORD));
  }
 else   if (!formData.getFirst(RegistrationPage.FIELD_PASSWORD).equals(formData.getFirst(RegistrationPage.FIELD_PASSWORD_CONFIRM))) {
    errors.add(new FormMessage(RegistrationPage.FIELD_PASSWORD_CONFIRM,Messages.INVALID_PASSWORD_CONFIRM));
  }
  if (formData.getFirst(RegistrationPage.FIELD_PASSWORD) != null) {
    PasswordPolicy.Error err=context.getRealm().getPasswordPolicy().validate(context.getRealm().isRegistrationEmailAsUsername() ? formData.getFirst(RegistrationPage.FIELD_EMAIL) : formData.getFirst(RegistrationPage.FIELD_USERNAME),formData.getFirst(RegistrationPage.FIELD_PASSWORD));
    if (err != null)     errors.add(new FormMessage(RegistrationPage.FIELD_PASSWORD,err.getMessage(),err.getParameters()));
  }
  if (errors.size() > 0) {
    context.error(Errors.INVALID_REGISTRATION);
    formData.remove(RegistrationPage.FIELD_PASSWORD);
    formData.remove(RegistrationPage.FIELD_PASSWORD_CONFIRM);
    context.validationError(formData,errors);
    return;
  }
 else {
    context.success();
  }
}
