{
  EventBuilder event=context.getEvent();
  event.event(EventType.UPDATE_PROFILE);
  MultivaluedMap<String,String> formData=context.getHttpRequest().getDecodedFormParameters();
  UserModel user=context.getUser();
  KeycloakSession session=context.getSession();
  RealmModel realm=context.getRealm();
  List<FormMessage> errors=Validation.validateUpdateProfileForm(realm,formData);
  if (errors != null && !errors.isEmpty()) {
    Response challenge=context.form().setErrors(errors).setFormData(formData).createResponse(UserModel.RequiredAction.UPDATE_PROFILE);
    context.challenge(challenge);
    return;
  }
  if (realm.isEditUsernameAllowed()) {
    String username=formData.getFirst("username");
    String oldUsername=user.getUsername();
    boolean usernameChanged=oldUsername != null ? !oldUsername.equals(username) : username != null;
    if (usernameChanged) {
      if (session.users().getUserByUsername(username,realm) != null) {
        Response challenge=context.form().setError(Messages.USERNAME_EXISTS).setFormData(formData).createResponse(UserModel.RequiredAction.UPDATE_PROFILE);
        context.challenge(challenge);
        return;
      }
      user.setUsername(username);
    }
  }
  user.setFirstName(formData.getFirst("firstName"));
  user.setLastName(formData.getFirst("lastName"));
  String email=formData.getFirst("email");
  String oldEmail=user.getEmail();
  boolean emailChanged=oldEmail != null ? !oldEmail.equals(email) : email != null;
  if (emailChanged) {
    UserModel userByEmail=session.users().getUserByEmail(email,realm);
    if (userByEmail != null && !userByEmail.getId().equals(user.getId())) {
      Response challenge=context.form().setError(Messages.EMAIL_EXISTS).setFormData(formData).createResponse(UserModel.RequiredAction.UPDATE_PROFILE);
      context.challenge(challenge);
      return;
    }
    user.setEmail(email);
    user.setEmailVerified(false);
  }
  AttributeFormDataProcessor.process(formData,realm,user);
  if (emailChanged) {
    event.clone().event(EventType.UPDATE_EMAIL).detail(Details.PREVIOUS_EMAIL,oldEmail).detail(Details.UPDATED_EMAIL,email).success();
  }
  context.success();
}
