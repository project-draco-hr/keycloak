{
  requireManage();
  StoreFactory storeFactory=this.authorization.getStoreFactory();
  Resource existingResource=storeFactory.getResourceStore().findByName(resource.getName(),this.resourceServer.getId());
  if (existingResource != null && existingResource.getResourceServer().getId().equals(this.resourceServer.getId()) && existingResource.getOwner().equals(resource.getOwner())) {
    return ErrorResponse.exists("Resource with name [" + resource.getName() + "] already exists.");
  }
  Resource model=Models.toModel(resource,this.resourceServer,authorization);
  ResourceRepresentation representation=new ResourceRepresentation();
  representation.setId(model.getId());
  return Response.status(Status.CREATED).entity(representation).build();
}
