{
  JWSInput token=null;
  try {
    token=new JWSInput(input);
  }
 catch (  JWSInputException e) {
    logger.warn("Failed to verify logout request");
    return Response.status(400).build();
  }
  PublicKey key=getExternalIdpKey();
  if (key != null) {
    if (!verify(token,key)) {
      logger.warn("Failed to verify logout request");
      return Response.status(400).build();
    }
  }
  LogoutAction action=null;
  try {
    action=JsonSerialization.readValue(token.getContent(),LogoutAction.class);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  if (!validateAction(action))   return Response.status(400).build();
  if (action.getKeycloakSessionIds() != null) {
    for (    String sessionId : action.getKeycloakSessionIds()) {
      String brokerSessionId=getConfig().getAlias() + "." + sessionId;
      UserSessionModel userSession=session.sessions().getUserSessionByBrokerSessionId(realm,brokerSessionId);
      if (userSession != null && userSession.getState() != UserSessionModel.State.LOGGING_OUT && userSession.getState() != UserSessionModel.State.LOGGED_OUT) {
        AuthenticationManager.backchannelLogout(session,realm,userSession,uriInfo,clientConnection,headers,false);
      }
    }
  }
  return Response.ok().build();
}
