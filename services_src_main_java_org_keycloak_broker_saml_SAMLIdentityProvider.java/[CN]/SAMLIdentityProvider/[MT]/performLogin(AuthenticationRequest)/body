{
  try {
    UriInfo uriInfo=request.getUriInfo();
    RealmModel realm=request.getRealm();
    String issuerURL=getEntityId(uriInfo,realm);
    String destinationUrl=getConfig().getSingleSignOnServiceUrl();
    String nameIDPolicyFormat=getConfig().getNameIDPolicyFormat();
    if (nameIDPolicyFormat == null) {
      nameIDPolicyFormat=JBossSAMLURIConstants.NAMEID_FORMAT_PERSISTENT.get();
    }
    String protocolBinding=JBossSAMLURIConstants.SAML_HTTP_REDIRECT_BINDING.get();
    String assertionConsumerServiceUrl=request.getRedirectUri();
    if (getConfig().isPostBindingResponse()) {
      protocolBinding=JBossSAMLURIConstants.SAML_HTTP_POST_BINDING.get();
    }
    SAML2AuthnRequestBuilder authnRequestBuilder=new SAML2AuthnRequestBuilder().assertionConsumerUrl(assertionConsumerServiceUrl).destination(destinationUrl).issuer(issuerURL).forceAuthn(getConfig().isForceAuthn()).protocolBinding(protocolBinding).nameIdPolicy(SAML2NameIDPolicyBuilder.format(nameIDPolicyFormat));
    JaxrsSAML2BindingBuilder binding=new JaxrsSAML2BindingBuilder().relayState(request.getState());
    if (getConfig().isWantAuthnRequestsSigned()) {
      KeyManager.ActiveKey keys=session.keys().getActiveKey(realm);
      KeyPair keypair=new KeyPair(keys.getPublicKey(),keys.getPrivateKey());
      binding.signWith(keypair);
      binding.signatureAlgorithm(getSignatureAlgorithm());
      binding.signDocument();
    }
    if (getConfig().isPostBindingAuthnRequest()) {
      return binding.postBinding(authnRequestBuilder.toDocument()).request(destinationUrl);
    }
 else {
      return binding.redirectBinding(authnRequestBuilder.toDocument()).request(destinationUrl);
    }
  }
 catch (  Exception e) {
    throw new IdentityBrokerException("Could not create authentication request.",e);
  }
}
