{
  if (httpClient == null) {
synchronized (this) {
      if (httpClient == null) {
        long socketTimeout=config.getLong("socket-timeout-millis",-1L);
        long establishConnectionTimeout=config.getLong("establish-connection-timeout-millis",-1L);
        int maxPooledPerRoute=config.getInt("max-pooled-per-route",64);
        int connectionPoolSize=config.getInt("connection-pool-size",128);
        long connectionTTL=config.getLong("connection-ttl-millis",-1L);
        long maxConnectionIdleTime=config.getLong("max-connection-idle-time-millis",900000L);
        boolean disableCookies=config.getBoolean("disable-cookies",true);
        String clientKeystore=config.get("client-keystore");
        String clientKeystorePassword=config.get("client-keystore-password");
        String clientPrivateKeyPassword=config.get("client-key-password");
        TruststoreProvider truststoreProvider=session.getProvider(TruststoreProvider.class);
        boolean disableTrustManager=truststoreProvider == null || truststoreProvider.getTruststore() == null;
        if (disableTrustManager) {
          logger.warn("Truststore is disabled");
        }
        HttpClientBuilder.HostnameVerificationPolicy hostnamePolicy=disableTrustManager ? null : HttpClientBuilder.HostnameVerificationPolicy.valueOf(truststoreProvider.getPolicy().name());
        HttpClientBuilder builder=new HttpClientBuilder();
        builder.socketTimeout(socketTimeout,TimeUnit.MILLISECONDS).establishConnectionTimeout(establishConnectionTimeout,TimeUnit.MILLISECONDS).maxPooledPerRoute(maxPooledPerRoute).connectionPoolSize(connectionPoolSize).connectionTTL(connectionTTL,TimeUnit.MILLISECONDS).maxConnectionIdleTime(maxConnectionIdleTime,TimeUnit.MILLISECONDS).disableCookies(disableCookies);
        if (disableTrustManager) {
        }
 else {
          builder.hostnameVerification(hostnamePolicy);
          try {
            builder.trustStore(truststoreProvider.getTruststore());
          }
 catch (          Exception e) {
            throw new RuntimeException("Failed to load truststore",e);
          }
        }
        if (clientKeystore != null) {
          clientKeystore=EnvUtil.replace(clientKeystore);
          try {
            KeyStore clientCertKeystore=KeystoreUtil.loadKeyStore(clientKeystore,clientKeystorePassword);
            builder.keyStore(clientCertKeystore,clientPrivateKeyPassword);
          }
 catch (          Exception e) {
            throw new RuntimeException("Failed to load keystore",e);
          }
        }
        httpClient=builder.build();
      }
    }
  }
}
