{
  if (!StorageId.isLocalStorage(user)) {
    String providerId=StorageId.resolveProviderId(user);
    UserStorageProvider provider=UserStorageManager.getStorageProvider(session,realm,providerId);
    if (provider instanceof CredentialInputUpdater) {
      CredentialInputUpdater updater=(CredentialInputUpdater)provider;
      if (updater.supportsCredentialType(input.getType())) {
        if (updater.updateCredential(realm,user,input))         return;
      }
    }
  }
 else {
    UserFederationProvider link=session.users().getFederationLink(realm,user);
    if (link != null) {
      if (link.updateCredential(realm,user,input))       return;
    }
 else     if (user.getFederationLink() != null) {
      UserStorageProvider provider=UserStorageManager.getStorageProvider(session,realm,user.getFederationLink());
      if (provider != null && provider instanceof CredentialInputUpdater) {
        if (((CredentialInputUpdater)provider).updateCredential(realm,user,input))         return;
      }
    }
  }
  List<CredentialInputUpdater> credentialProviders=getCredentialProviders(realm,CredentialInputUpdater.class);
  for (  CredentialInputUpdater updater : credentialProviders) {
    if (!updater.supportsCredentialType(input.getType()))     continue;
    if (updater.updateCredential(realm,user,input))     return;
  }
}
