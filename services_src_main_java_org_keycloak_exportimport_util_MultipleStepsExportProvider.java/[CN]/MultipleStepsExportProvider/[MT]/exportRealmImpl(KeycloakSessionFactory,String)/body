{
  final UsersExportStrategy usersExportStrategy=ExportImportConfig.getUsersExportStrategy();
  final int usersPerFile=ExportImportConfig.getUsersPerFile();
  final UsersHolder usersHolder=new UsersHolder();
  final boolean exportUsersIntoRealmFile=usersExportStrategy == UsersExportStrategy.REALM_FILE;
  FederatedUsersHolder federatedUsersHolder=new FederatedUsersHolder();
  KeycloakModelUtils.runJobInTransaction(factory,new ExportImportSessionTask(){
    @Override protected void runExportImportTask(    KeycloakSession session) throws IOException {
      RealmModel realm=session.realms().getRealmByName(realmName);
      RealmRepresentation rep=ExportUtils.exportRealm(session,realm,exportUsersIntoRealmFile);
      writeRealm(realmName + "-realm.json",rep);
      logger.info("Realm '" + realmName + "' - data exported");
      if (!exportUsersIntoRealmFile) {
        usersHolder.totalCount=session.users().getUsersCount(realm);
        federatedUsersHolder.totalCount=session.userFederatedStorage().getStoredUsersCount(realm);
      }
    }
  }
);
  if (usersExportStrategy != UsersExportStrategy.SKIP && !exportUsersIntoRealmFile) {
    usersHolder.currentPageStart=0;
    final int countPerPage=(usersExportStrategy == UsersExportStrategy.SAME_FILE) ? usersHolder.totalCount : usersPerFile;
    while (usersHolder.currentPageStart < usersHolder.totalCount) {
      if (usersHolder.currentPageStart + countPerPage < usersHolder.totalCount) {
        usersHolder.currentPageEnd=usersHolder.currentPageStart + countPerPage;
      }
 else {
        usersHolder.currentPageEnd=usersHolder.totalCount;
      }
      KeycloakModelUtils.runJobInTransaction(factory,new ExportImportSessionTask(){
        @Override protected void runExportImportTask(        KeycloakSession session) throws IOException {
          RealmModel realm=session.realms().getRealmByName(realmName);
          usersHolder.users=session.users().getUsers(realm,usersHolder.currentPageStart,usersHolder.currentPageEnd - usersHolder.currentPageStart,true);
          writeUsers(realmName + "-users-" + (usersHolder.currentPageStart / countPerPage)+ ".json",session,realm,usersHolder.users);
          logger.info("Users " + usersHolder.currentPageStart + "-"+ (usersHolder.currentPageEnd - 1)+ " exported");
        }
      }
);
      usersHolder.currentPageStart=usersHolder.currentPageEnd;
    }
  }
  if (usersExportStrategy != UsersExportStrategy.SKIP && !exportUsersIntoRealmFile) {
    federatedUsersHolder.currentPageStart=0;
    final int countPerPage=(usersExportStrategy == UsersExportStrategy.SAME_FILE) ? federatedUsersHolder.totalCount : usersPerFile;
    while (federatedUsersHolder.currentPageStart < federatedUsersHolder.totalCount) {
      if (federatedUsersHolder.currentPageStart + countPerPage < federatedUsersHolder.totalCount) {
        federatedUsersHolder.currentPageEnd=federatedUsersHolder.currentPageStart + countPerPage;
      }
 else {
        federatedUsersHolder.currentPageEnd=federatedUsersHolder.totalCount;
      }
      KeycloakModelUtils.runJobInTransaction(factory,new ExportImportSessionTask(){
        @Override protected void runExportImportTask(        KeycloakSession session) throws IOException {
          RealmModel realm=session.realms().getRealmByName(realmName);
          federatedUsersHolder.users=session.userFederatedStorage().getStoredUsers(realm,federatedUsersHolder.currentPageStart,federatedUsersHolder.currentPageEnd - federatedUsersHolder.currentPageStart);
          writeFederatedUsers(realmName + "-federated-users-" + (federatedUsersHolder.currentPageStart / countPerPage)+ ".json",session,realm,federatedUsersHolder.users);
          logger.info("Users " + federatedUsersHolder.currentPageStart + "-"+ (federatedUsersHolder.currentPageEnd - 1)+ " exported");
        }
      }
);
      federatedUsersHolder.currentPageStart=federatedUsersHolder.currentPageEnd;
    }
  }
}
