{
  boolean active=false;
  List<KeyProvider> providers=providersMap.get(realm.getId());
  if (providers == null) {
    providers=new LinkedList<>();
    List<ComponentModel> components=new LinkedList<>(realm.getComponents(realm.getId(),KeyProvider.class.getName()));
    components.sort(new ProviderComparator());
    for (    ComponentModel c : components) {
      try {
        ProviderFactory<KeyProvider> f=session.getKeycloakSessionFactory().getProviderFactory(KeyProvider.class,c.getProviderId());
        KeyProviderFactory factory=(KeyProviderFactory)f;
        KeyProvider provider=factory.create(session,c);
        session.enlistForClose(provider);
        providers.add(provider);
        if (!active && provider.getKid() != null && provider.getPrivateKey() != null) {
          active=true;
        }
      }
 catch (      Throwable t) {
        logger.errorv(t,"Failed to load provider {0}",c.getId());
      }
    }
    if (!active) {
      providers.add(new FailsafeRsaKeyProvider());
    }
    providersMap.put(realm.getId(),providers);
  }
  return providers;
}
