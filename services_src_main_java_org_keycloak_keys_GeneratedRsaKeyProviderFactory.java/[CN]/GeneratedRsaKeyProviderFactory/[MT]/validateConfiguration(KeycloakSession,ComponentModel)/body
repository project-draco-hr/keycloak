{
  super.validateConfiguration(session,model);
  ConfigurationValidationHelper.check(model).checkInt(Attributes.KEY_SIZE_PROPERTY,false);
  int size;
  if (!model.contains(Attributes.KEY_SIZE_KEY)) {
    size=2048;
    model.put(Attributes.KEY_SIZE_KEY,size);
  }
 else {
    size=model.get(Attributes.KEY_SIZE_KEY,2048);
    if (size != 1024 && size != 2048 && size != 4096) {
      throw new ComponentValidationException("Keysize should be 1024, 2048 or 4096");
    }
  }
  if (!(model.contains(Attributes.PRIVATE_KEY_KEY) && model.contains(Attributes.CERTIFICATE_KEY))) {
    RealmModel realm=session.realms().getRealm(model.getParentId());
    generateKeys(realm,model,size);
    logger.debugv("Generated keys for {0}",realm.getName());
  }
 else {
    PrivateKey privateKey=PemUtils.decodePrivateKey(model.get(Attributes.PRIVATE_KEY_KEY));
    int currentSize=((RSAPrivateKey)privateKey).getModulus().bitLength();
    if (currentSize != size) {
      RealmModel realm=session.realms().getRealm(model.getParentId());
      generateKeys(realm,model,size);
      logger.debugv("Key size changed, generating new keys for {0}",realm.getName());
    }
  }
}
