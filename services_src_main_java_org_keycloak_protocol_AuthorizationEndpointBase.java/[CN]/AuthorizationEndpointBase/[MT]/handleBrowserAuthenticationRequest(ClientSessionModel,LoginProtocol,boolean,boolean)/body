{
  AuthenticationFlowModel flow=getAuthenticationFlow();
  String flowId=flow.getId();
  AuthenticationProcessor processor=createProcessor(clientSession,flowId,LoginActionsService.AUTHENTICATE_PATH);
  event.detail(Details.CODE_ID,clientSession.getId());
  if (isPassive) {
    try {
      if (processor.authenticateOnly() == null) {
        processor.attachSession();
      }
 else {
        Response response=protocol.sendError(clientSession,Error.PASSIVE_LOGIN_REQUIRED);
        session.sessions().removeClientSession(realm,clientSession);
        return response;
      }
      if (processor.isActionRequired()) {
        Response response=protocol.sendError(clientSession,Error.PASSIVE_INTERACTION_REQUIRED);
        session.sessions().removeClientSession(realm,clientSession);
        return response;
      }
    }
 catch (    Exception e) {
      return processor.handleBrowserException(e);
    }
    return processor.finishAuthentication(protocol);
  }
 else {
    try {
      RestartLoginCookie.setRestartCookie(session,realm,clientConnection,uriInfo,clientSession);
      if (redirectToAuthentication) {
        return processor.redirectToFlow();
      }
      return processor.authenticate();
    }
 catch (    Exception e) {
      return processor.handleBrowserException(e);
    }
  }
}
