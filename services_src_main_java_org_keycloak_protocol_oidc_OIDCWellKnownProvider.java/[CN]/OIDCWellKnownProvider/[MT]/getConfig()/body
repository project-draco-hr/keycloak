{
  UriInfo uriInfo=session.getContext().getUri();
  RealmModel realm=session.getContext().getRealm();
  UriBuilder uriBuilder=RealmsResource.protocolUrl(uriInfo);
  OIDCConfigurationRepresentation config=new OIDCConfigurationRepresentation();
  config.setIssuer(Urls.realmIssuer(uriInfo.getBaseUri(),realm.getName()));
  config.setAuthorizationEndpoint(uriBuilder.clone().path(OIDCLoginProtocolService.class,"auth").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setTokenEndpoint(uriBuilder.clone().path(OIDCLoginProtocolService.class,"token").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setTokenIntrospectionEndpoint(uriBuilder.clone().path(OIDCLoginProtocolService.class,"token").path(TokenEndpoint.class,"introspect").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setUserinfoEndpoint(uriBuilder.clone().path(OIDCLoginProtocolService.class,"issueUserInfo").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setLogoutEndpoint(uriBuilder.clone().path(OIDCLoginProtocolService.class,"logout").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setJwksUri(uriBuilder.clone().path(OIDCLoginProtocolService.class,"certs").build(realm.getName(),OIDCLoginProtocol.LOGIN_PROTOCOL).toString());
  config.setRegistrationEndpoint(RealmsResource.clientRegistrationUrl(uriInfo).path(ClientRegistrationService.class,"provider").build(realm.getName(),OIDCClientRegistrationProviderFactory.ID).toString());
  config.setIdTokenSigningAlgValuesSupported(DEFAULT_ID_TOKEN_SIGNING_ALG_VALUES_SUPPORTED);
  config.setResponseTypesSupported(DEFAULT_RESPONSE_TYPES_SUPPORTED);
  config.setSubjectTypesSupported(DEFAULT_SUBJECT_TYPES_SUPPORTED);
  config.setResponseModesSupported(DEFAULT_RESPONSE_MODES_SUPPORTED);
  config.setGrantTypesSupported(DEFAULT_GRANT_TYPES_SUPPORTED);
  config.setTokenEndpointAuthMethodsSupported(DEFAULT_CLIENT_AUTH_METHODS_SUPPORTED);
  config.setTokenEndpointAuthSigningAlgValuesSupported(DEFAULT_CLIENT_AUTH_SIGNING_ALG_VALUES_SUPPORTED);
  config.setClaimsSupported(DEFAULT_CLAIMS_SUPPORTED);
  config.setClaimTypesSupported(DEFAULT_CLAIM_TYPES_SUPPORTED);
  config.setClaimsParameterSupported(false);
  return config;
}
