{
  if (accessToken != null) {
    event.detail(Details.TOKEN_ID,accessToken.getId());
  }
  if (refreshToken != null) {
    if (event.getEvent().getDetails().containsKey(Details.REFRESH_TOKEN_ID)) {
      event.detail(Details.UPDATED_REFRESH_TOKEN_ID,refreshToken.getId());
    }
 else {
      event.detail(Details.REFRESH_TOKEN_ID,refreshToken.getId());
    }
    event.detail(Details.REFRESH_TOKEN_TYPE,refreshToken.getType());
  }
  AccessTokenResponse res=new AccessTokenResponse();
  if (idToken != null) {
    String encodedToken=new JWSBuilder().type(JWT).kid(realm.getKeyId()).jsonContent(idToken).rsa256(realm.getPrivateKey());
    res.setIdToken(encodedToken);
  }
  if (accessToken != null) {
    String encodedToken=new JWSBuilder().type(JWT).kid(realm.getKeyId()).jsonContent(accessToken).rsa256(realm.getPrivateKey());
    res.setToken(encodedToken);
    res.setTokenType("bearer");
    res.setSessionState(accessToken.getSessionState());
    if (accessToken.getExpiration() != 0) {
      res.setExpiresIn(accessToken.getExpiration() - Time.currentTime());
    }
  }
  if (refreshToken != null) {
    String encodedToken=new JWSBuilder().type(JWT).kid(realm.getKeyId()).jsonContent(refreshToken).rsa256(realm.getPrivateKey());
    res.setRefreshToken(encodedToken);
    if (refreshToken.getExpiration() != 0) {
      res.setRefreshExpiresIn(refreshToken.getExpiration() - Time.currentTime());
    }
  }
  int notBefore=realm.getNotBefore();
  if (client.getNotBefore() > notBefore)   notBefore=client.getNotBefore();
  res.setNotBeforePolicy(notBefore);
  return res;
}
