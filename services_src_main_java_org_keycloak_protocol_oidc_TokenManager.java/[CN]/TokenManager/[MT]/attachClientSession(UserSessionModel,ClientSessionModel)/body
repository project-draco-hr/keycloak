{
  if (clientSession.getUserSession() != null) {
    return;
  }
  UserModel user=session.getUser();
  clientSession.setUserSession(session);
  Set<String> requestedRoles=new HashSet<String>();
  String scopeParam=clientSession.getNote(OAuth2Constants.SCOPE);
  for (  RoleModel r : TokenManager.getAccess(scopeParam,true,clientSession.getClient(),user)) {
    requestedRoles.add(r.getId());
  }
  clientSession.setRoles(requestedRoles);
  Set<String> requestedProtocolMappers=new HashSet<String>();
  for (  ProtocolMapperModel protocolMapper : clientSession.getClient().getProtocolMappers()) {
    if (protocolMapper.getProtocol().equals(clientSession.getAuthMethod())) {
      requestedProtocolMappers.add(protocolMapper.getId());
    }
  }
  clientSession.setProtocolMappers(requestedProtocolMappers);
  Map<String,String> transferredNotes=clientSession.getUserSessionNotes();
  for (  Map.Entry<String,String> entry : transferredNotes.entrySet()) {
    session.setNote(entry.getKey(),entry.getValue());
  }
}
