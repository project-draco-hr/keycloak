{
  Set<RoleModel> requestedRoles=new HashSet<RoleModel>();
  Set<RoleModel> mappings=user.getRoleMappings();
  Set<RoleModel> roleMappings=new HashSet<>();
  roleMappings.addAll(mappings);
  for (  GroupModel group : user.getGroups()) {
    addGroupRoles(group,roleMappings);
  }
  ClientTemplateModel template=client.getClientTemplate();
  boolean useTemplateScope=template != null && client.useTemplateScope();
  if ((useTemplateScope && template.isFullScopeAllowed()) || (client.isFullScopeAllowed())) {
    logger.debug("Using full scope for client");
    requestedRoles=roleMappings;
  }
 else {
    Set<RoleModel> scopeMappings=new HashSet<>();
    if (useTemplateScope) {
      logger.debug("Adding template scope mappings");
      scopeMappings.addAll(template.getScopeMappings());
    }
    scopeMappings.addAll(client.getRoles());
    Set<RoleModel> clientScopeMappings=client.getScopeMappings();
    scopeMappings.addAll(clientScopeMappings);
    for (    RoleModel role : roleMappings) {
      for (      RoleModel desiredRole : scopeMappings) {
        Set<RoleModel> visited=new HashSet<RoleModel>();
        applyScope(role,desiredRole,visited,requestedRoles);
      }
    }
  }
  if (applyScopeParam) {
    Collection<String> scopeParamRoles;
    if (scopeParam != null) {
      String[] scopes=scopeParam.split(" ");
      scopeParamRoles=Arrays.asList(scopes);
    }
 else {
      scopeParamRoles=Collections.emptyList();
    }
    Set<RoleModel> roles=new HashSet<>();
    for (    RoleModel role : requestedRoles) {
      String roleName=getRoleNameForScopeParam(role);
      if (!role.isScopeParamRequired() || scopeParamRoles.contains(roleName)) {
        roles.add(role);
      }
 else {
        if (logger.isTraceEnabled()) {
          logger.tracef("Role '%s' excluded by scope param. Client is '%s', User is '%s', Scope param is '%s' ",role.getName(),client.getClientId(),user.getUsername(),scopeParam);
        }
      }
    }
    List<RoleModel> scopeRoles=new LinkedList<>();
    for (    String scopeParamPart : scopeParamRoles) {
      RoleModel scopeParamRole=getRoleFromScopeParam(client.getRealm(),scopeParamPart);
      if (scopeParamRole != null) {
        for (        RoleModel role : roles) {
          if (role.hasRole(scopeParamRole)) {
            scopeRoles.add(scopeParamRole);
          }
        }
      }
    }
    roles.addAll(scopeRoles);
    requestedRoles=roles;
  }
  return requestedRoles;
}
