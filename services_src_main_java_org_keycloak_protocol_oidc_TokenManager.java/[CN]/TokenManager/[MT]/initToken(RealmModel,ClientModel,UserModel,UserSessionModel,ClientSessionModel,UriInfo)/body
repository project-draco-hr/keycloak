{
  AccessToken token=new AccessToken();
  if (clientSession != null)   token.clientSession(clientSession.getId());
  token.id(KeycloakModelUtils.generateId());
  token.type(TokenUtil.TOKEN_TYPE_BEARER);
  token.subject(user.getId());
  token.audience(client.getClientId());
  token.issuedNow();
  token.issuedFor(client.getClientId());
  token.issuer(clientSession.getNote(OIDCLoginProtocol.ISSUER));
  token.setNonce(clientSession.getNote(OIDCLoginProtocol.NONCE_PARAM));
  String authTime=session.getNote(AuthenticationManager.AUTH_TIME);
  if (authTime != null) {
    token.setAuthTime(Integer.parseInt(authTime));
  }
  if (session != null) {
    token.setSessionState(session.getId());
  }
  int tokenLifespan=getTokenLifespan(realm,clientSession);
  if (tokenLifespan > 0) {
    token.expiration(Time.currentTime() + tokenLifespan);
  }
  Set<String> allowedOrigins=client.getWebOrigins();
  if (allowedOrigins != null) {
    token.setAllowedOrigins(WebOriginsUtils.resolveValidWebOrigins(uriInfo,client));
  }
  return token;
}
