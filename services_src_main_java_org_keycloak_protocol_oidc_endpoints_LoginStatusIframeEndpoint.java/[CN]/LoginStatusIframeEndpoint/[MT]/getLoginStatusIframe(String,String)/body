{
  if (client_id == null || origin == null) {
    throw new WebApplicationException(Response.Status.BAD_REQUEST);
  }
  if (!UriUtils.isOrigin(origin)) {
    throw new WebApplicationException(Response.Status.BAD_REQUEST);
  }
  ClientModel client=realm.getClientByClientId(client_id);
  if (client == null) {
    throw new WebApplicationException(Response.Status.BAD_REQUEST);
  }
  InputStream is=getClass().getClassLoader().getResourceAsStream("login-status-iframe.html");
  if (is == null)   throw new NotFoundException("Could not find login-status-iframe.html ");
  boolean valid=false;
  for (  String o : client.getWebOrigins()) {
    if (o.equals("*") || o.equals(origin)) {
      valid=true;
      break;
    }
  }
  for (  String r : RedirectUtils.resolveValidRedirects(uriInfo,client.getRootUrl(),client.getRedirectUris())) {
    int i=r.indexOf('/',8);
    if (i != -1) {
      r=r.substring(0,i);
    }
    if (r.equals(origin)) {
      valid=true;
      break;
    }
  }
  if (!valid) {
    throw new WebApplicationException(Response.Status.BAD_REQUEST);
  }
  ThemeProvider themeProvider=session.getProvider(ThemeProvider.class,"extending");
  Theme theme;
  try {
    theme=themeProvider.getTheme(realm.getLoginTheme(),Theme.Type.LOGIN);
  }
 catch (  IOException e) {
    logger.error("Failed to create theme",e);
    return Response.serverError().build();
  }
  try {
    String file=StreamUtil.readString(is);
    file=file.replace("ORIGIN",origin);
    Response.ResponseBuilder response=Response.ok(file);
    String p3pValue=theme.getProperties().getProperty("sessionIframeP3P");
    if (!Validation.isBlank(p3pValue)) {
      response.header("P3P",p3pValue);
    }
    CacheControl cacheControl=new CacheControl();
    cacheControl.setNoTransform(false);
    cacheControl.setMaxAge(Config.scope("theme").getInt("staticMaxAge",-1));
    return response.cacheControl(cacheControl).build();
  }
 catch (  IOException e) {
    throw new WebApplicationException(e,Response.Status.BAD_REQUEST);
  }
}
