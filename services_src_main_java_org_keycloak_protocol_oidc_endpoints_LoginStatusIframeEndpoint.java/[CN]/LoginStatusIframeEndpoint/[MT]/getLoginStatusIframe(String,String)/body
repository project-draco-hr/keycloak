{
  if (!UriUtils.isOrigin(origin)) {
    throw new BadRequestException("Invalid origin");
  }
  ClientModel client=realm.findClient(client_id);
  if (client == null) {
    throw new NotFoundException("could not find client");
  }
  InputStream is=getClass().getClassLoader().getResourceAsStream("login-status-iframe.html");
  if (is == null)   throw new NotFoundException("Could not find login-status-iframe.html ");
  boolean valid=false;
  for (  String o : client.getWebOrigins()) {
    if (o.equals("*") || o.equals(origin)) {
      valid=true;
      break;
    }
  }
  for (  String r : RedirectUtils.resolveValidRedirects(uriInfo,client.getRedirectUris())) {
    int i=r.indexOf('/',8);
    if (i != -1) {
      r=r.substring(0,i);
    }
    if (r.equals(origin)) {
      valid=true;
      break;
    }
  }
  if (!valid) {
    throw new BadRequestException("Invalid origin");
  }
  try {
    String file=StreamUtil.readString(is);
    file=file.replace("ORIGIN",origin);
    CacheControl cacheControl=new CacheControl();
    cacheControl.setNoTransform(false);
    cacheControl.setMaxAge(Config.scope("theme").getInt("staticMaxAge",-1));
    return Response.ok(file).cacheControl(cacheControl).build();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
