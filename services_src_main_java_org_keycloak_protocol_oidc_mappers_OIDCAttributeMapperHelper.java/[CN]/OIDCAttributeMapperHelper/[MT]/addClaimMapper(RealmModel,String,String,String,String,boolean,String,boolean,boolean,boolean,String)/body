{
  ProtocolMapperModel mapper=realm.getProtocolMapperByName(OIDCLoginProtocol.LOGIN_PROTOCOL,name);
  if (mapper != null)   return;
  mapper=new ProtocolMapperModel();
  mapper.setName(name);
  mapper.setProtocolMapper(mapperId);
  mapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);
  mapper.setConsentRequired(consentRequired);
  mapper.setConsentText(consentText);
  mapper.setAppliedByDefault(appliedByDefault);
  Map<String,String> config=new HashMap<String,String>();
  config.put(ProtocolMapperUtils.USER_ATTRIBUTE,userAttribute);
  config.put(TOKEN_CLAIM_NAME,tokenClaimName);
  config.put(JSON_TYPE,claimType);
  if (accessToken)   config.put(INCLUDE_IN_ACCESS_TOKEN,"true");
  if (idToken)   config.put(INCLUDE_IN_ID_TOKEN,"true");
  mapper.setConfig(config);
  realm.addProtocolMapper(mapper);
}
