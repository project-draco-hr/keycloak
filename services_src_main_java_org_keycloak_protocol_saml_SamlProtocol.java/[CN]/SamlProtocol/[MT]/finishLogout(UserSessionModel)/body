{
  logger.debug("finishLogout");
  String logoutBindingUri=userSession.getNote(SAML_LOGOUT_BINDING_URI);
  if (logoutBindingUri == null) {
    logger.error("Can't finish SAML logout as there is no logout binding set.  Please configure the logout service url in the admin console for your client applications.");
    return ErrorPage.error(session,Messages.FAILED_LOGOUT);
  }
  String logoutRelayState=userSession.getNote(SAML_LOGOUT_RELAY_STATE);
  SAML2LogoutResponseBuilder builder=new SAML2LogoutResponseBuilder();
  builder.logoutRequestID(userSession.getNote(SAML_LOGOUT_REQUEST_ID));
  builder.destination(logoutBindingUri);
  builder.issuer(getResponseIssuer(realm));
  JaxrsSAML2BindingBuilder binding=new JaxrsSAML2BindingBuilder();
  binding.relayState(logoutRelayState);
  String signingAlgorithm=userSession.getNote(SAML_LOGOUT_SIGNATURE_ALGORITHM);
  if (signingAlgorithm != null) {
    SignatureAlgorithm algorithm=SignatureAlgorithm.valueOf(signingAlgorithm);
    String canonicalization=userSession.getNote(SAML_LOGOUT_CANONICALIZATION);
    if (canonicalization != null) {
      binding.canonicalizationMethod(canonicalization);
    }
    KeyManager.ActiveKey keys=session.keys().getActiveKey(realm);
    binding.signatureAlgorithm(algorithm).signWith(keys.getPrivateKey(),keys.getPublicKey(),keys.getCertificate()).signDocument();
  }
  try {
    return buildLogoutResponse(userSession,logoutBindingUri,builder,binding);
  }
 catch (  ConfigurationException e) {
    throw new RuntimeException(e);
  }
catch (  ProcessingException e) {
    throw new RuntimeException(e);
  }
catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
