{
  MultivaluedMap<String,String> encodedParams=uriInformation.getQueryParameters(false);
  String request=encodedParams.getFirst(paramKey);
  String algorithm=encodedParams.getFirst(GeneralConstants.SAML_SIG_ALG_REQUEST_KEY);
  String signature=encodedParams.getFirst(GeneralConstants.SAML_SIGNATURE_REQUEST_KEY);
  String decodedAlgorithm=uriInformation.getQueryParameters(true).getFirst(GeneralConstants.SAML_SIG_ALG_REQUEST_KEY);
  if (request == null)   throw new VerificationException("SAM was null");
  if (algorithm == null)   throw new VerificationException("SigAlg was null");
  if (signature == null)   throw new VerificationException("Signature was null");
  UriBuilder builder=UriBuilder.fromPath("/").queryParam(paramKey,request);
  if (encodedParams.containsKey(GeneralConstants.RELAY_STATE)) {
    builder.queryParam(GeneralConstants.RELAY_STATE,encodedParams.getFirst(GeneralConstants.RELAY_STATE));
  }
  builder.queryParam(GeneralConstants.SAML_SIG_ALG_REQUEST_KEY,algorithm);
  String rawQuery=builder.build().getRawQuery();
  try {
    byte[] decodedSignature=RedirectBindingUtil.urlBase64Decode(signature);
    SignatureAlgorithm signatureAlgorithm=SignatureAlgorithm.getFromXmlMethod(decodedAlgorithm);
    Signature validator=signatureAlgorithm.createSignature();
    validator.initVerify(publicKey);
    validator.update(rawQuery.getBytes("UTF-8"));
    if (!validator.verify(decodedSignature)) {
      throw new VerificationException("Invalid query param signature");
    }
  }
 catch (  Exception e) {
    throw new VerificationException(e);
  }
}
