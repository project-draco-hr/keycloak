{
  event.event(EventType.CLIENT_REGISTER);
  auth.requireCreate();
  try {
    ClientModel clientModel=RepresentationToModel.createClient(session,session.getContext().getRealm(),client,true);
    clientModel.setRegistrationSecret(TokenGenerator.createRegistrationAccessToken());
    client=ModelToRepresentation.toRepresentation(clientModel);
    URI uri=session.getContext().getUri().getAbsolutePathBuilder().path(clientModel.getId()).build();
    event.client(client.getClientId()).success();
    return Response.created(uri).entity(client).build();
  }
 catch (  ModelDuplicateException e) {
    return ErrorResponse.exists("Client " + client.getClientId() + " already exists");
  }
}
