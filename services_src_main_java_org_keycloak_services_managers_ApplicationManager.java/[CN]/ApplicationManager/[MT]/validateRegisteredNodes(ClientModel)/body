{
  Map<String,Integer> registeredNodes=application.getRegisteredNodes();
  if (registeredNodes == null || registeredNodes.isEmpty()) {
    return Collections.emptySet();
  }
  int currentTime=Time.currentTime();
  Set<String> validatedNodes=new TreeSet<String>();
  if (application.getNodeReRegistrationTimeout() > 0) {
    List<String> toRemove=new LinkedList<String>();
    for (    Map.Entry<String,Integer> entry : registeredNodes.entrySet()) {
      Integer lastReRegistration=entry.getValue();
      if (lastReRegistration + application.getNodeReRegistrationTimeout() < currentTime) {
        toRemove.add(entry.getKey());
      }
 else {
        validatedNodes.add(entry.getKey());
      }
    }
    for (    String node : toRemove) {
      application.unregisterNode(node);
    }
  }
 else {
    validatedNodes.addAll(registeredNodes.keySet());
  }
  return validatedNodes;
}
