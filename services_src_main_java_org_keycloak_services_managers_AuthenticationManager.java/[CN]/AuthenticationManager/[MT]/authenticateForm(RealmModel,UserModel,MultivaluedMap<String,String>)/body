{
  Set<String> types=new HashSet<String>();
  List<RequiredCredentialModel> requiredCredentials=null;
  if (realm.hasRole(user,RealmManager.RESOURCE_ROLE)) {
    requiredCredentials=realm.getResourceRequiredCredentials();
  }
 else   if (realm.hasRole(user,RealmManager.IDENTITY_REQUESTER_ROLE)) {
    requiredCredentials=realm.getOAuthClientRequiredCredentials();
  }
 else {
    requiredCredentials=realm.getRequiredCredentials();
  }
  for (  RequiredCredentialModel credential : requiredCredentials) {
    types.add(credential.getType());
  }
  if (types.contains(RequiredCredentialRepresentation.PASSWORD)) {
    String password=formData.getFirst(RequiredCredentialRepresentation.PASSWORD);
    if (password == null) {
      logger.warn("Password not provided");
      return false;
    }
    if (types.contains(RequiredCredentialRepresentation.TOTP)) {
      String token=formData.getFirst(RequiredCredentialRepresentation.TOTP);
      if (token == null) {
        logger.warn("TOTP token not provided");
        return false;
      }
      return realm.validateTOTP(user,password,token);
    }
 else {
      return realm.validatePassword(user,password);
    }
  }
 else {
    logger.warn("Do not know how to authenticate user");
    return false;
  }
}
