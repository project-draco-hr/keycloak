{
  for (  String action : requiredActions) {
    RequiredActionProviderModel model=realm.getRequiredActionProviderByAlias(action);
    RequiredActionFactory factory=(RequiredActionFactory)session.getKeycloakSessionFactory().getProviderFactory(RequiredActionProvider.class,model.getProviderId());
    if (factory == null) {
      throw new RuntimeException("Unable to find factory for Required Action: " + model.getProviderId() + " did you forget to declare it in a META-INF/services file?");
    }
    RequiredActionProvider actionProvider=factory.create(session);
    RequiredActionContextResult context=new RequiredActionContextResult(userSession,clientSession,realm,event,session,request,user,factory);
    actionProvider.requiredActionChallenge(context);
    if (context.getStatus() == RequiredActionContext.Status.FAILURE) {
      LoginProtocol protocol=context.getSession().getProvider(LoginProtocol.class,context.getClientSession().getAuthMethod());
      protocol.setRealm(context.getRealm()).setHttpHeaders(context.getHttpRequest().getHttpHeaders()).setUriInfo(context.getUriInfo());
      event.error(Errors.REJECTED_BY_USER);
      return protocol.sendError(context.getClientSession(),Error.CONSENT_DENIED);
    }
 else     if (context.getStatus() == RequiredActionContext.Status.CHALLENGE) {
      clientSession.setNote(CURRENT_REQUIRED_ACTION,model.getProviderId());
      return context.getChallenge();
    }
 else     if (context.getStatus() == RequiredActionContext.Status.SUCCESS) {
      event.clone().event(EventType.CUSTOM_REQUIRED_ACTION).detail(Details.CUSTOM_REQUIRED_ACTION,factory.getId()).success();
      clientSession.getUserSession().getUser().removeRequiredAction(factory.getId());
      clientSession.removeRequiredAction(factory.getId());
    }
  }
  return null;
}
