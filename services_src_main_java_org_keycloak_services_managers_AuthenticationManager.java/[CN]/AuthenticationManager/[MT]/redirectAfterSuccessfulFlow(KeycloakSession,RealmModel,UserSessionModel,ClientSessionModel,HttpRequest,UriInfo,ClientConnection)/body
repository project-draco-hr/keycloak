{
  Cookie sessionCookie=request.getHttpHeaders().getCookies().get(AuthenticationManager.KEYCLOAK_SESSION_COOKIE);
  if (sessionCookie != null) {
    String[] split=sessionCookie.getValue().split("/");
    if (split.length >= 3) {
      String oldSessionId=split[2];
      if (!oldSessionId.equals(userSession.getId())) {
        UserSessionModel oldSession=session.sessions().getUserSession(realm,oldSessionId);
        if (oldSession != null) {
          logger.debugv("Removing old user session: session: {0}",oldSessionId);
          session.sessions().removeUserSession(realm,oldSession);
        }
      }
    }
  }
  createLoginCookie(realm,userSession.getUser(),userSession,uriInfo,clientConnection);
  if (userSession.getState() != UserSessionModel.State.LOGGED_IN)   userSession.setState(UserSessionModel.State.LOGGED_IN);
  if (userSession.isRememberMe())   createRememberMeCookie(realm,userSession.getUser().getUsername(),uriInfo,clientConnection);
  LoginProtocol protocol=session.getProvider(LoginProtocol.class,clientSession.getAuthMethod());
  protocol.setRealm(realm).setHttpHeaders(request.getHttpHeaders()).setUriInfo(uriInfo);
  return protocol.authenticated(userSession,new ClientSessionCode(realm,clientSession));
}
