{
  try {
    AccessToken token=RSATokenVerifier.verifyToken(tokenString,realm.getPublicKey(),realm.getName(),checkActive);
    logger.info("identity token verified");
    if (checkActive) {
      logger.info("Checking if identity token is active");
      if (!token.isActive() || token.getIssuedAt() < realm.getNotBefore()) {
        logger.info("identity cookie expired");
        return null;
      }
 else {
        logger.info("token.isActive() : " + token.isActive());
        logger.info("token.issuedAt: " + token.getIssuedAt());
        logger.info("real.notbefore: " + realm.getNotBefore());
      }
    }
    UserModel user=session.users().getUserById(token.getSubject(),realm);
    if (user == null || !user.isEnabled()) {
      logger.info("Unknown user in identity token");
      return null;
    }
    UserSessionModel userSession=session.sessions().getUserSession(realm,token.getSessionState());
    if (!isSessionValid(realm,userSession)) {
      if (userSession != null)       logout(session,realm,userSession,uriInfo,connection);
      logger.info("User session not active");
      return null;
    }
    return new AuthResult(user,userSession,token);
  }
 catch (  VerificationException e) {
    logger.info("Failed to verify identity token",e);
  }
  return null;
}
