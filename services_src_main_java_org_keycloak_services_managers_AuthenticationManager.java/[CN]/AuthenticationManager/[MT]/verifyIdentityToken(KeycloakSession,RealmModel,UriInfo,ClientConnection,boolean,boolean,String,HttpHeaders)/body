{
  try {
    RSATokenVerifier verifier=RSATokenVerifier.create(tokenString).realmUrl(Urls.realmIssuer(uriInfo.getBaseUri(),realm.getName())).checkActive(checkActive).checkTokenType(checkTokenType);
    String kid=verifier.getHeader().getKeyId();
    PublicKey publicKey=session.keys().getPublicKey(realm,kid);
    if (publicKey == null) {
      logger.debugf("Identity cookie signed with unknown kid '%s'",kid);
      return null;
    }
    verifier.publicKey(publicKey);
    AccessToken token=verifier.verify().getToken();
    if (checkActive) {
      if (!token.isActive() || token.getIssuedAt() < realm.getNotBefore()) {
        logger.debug("Identity cookie expired");
        return null;
      }
    }
    UserModel user=session.users().getUserById(token.getSubject(),realm);
    if (user == null || !user.isEnabled()) {
      logger.debug("Unknown user in identity token");
      return null;
    }
    UserSessionModel userSession=session.sessions().getUserSession(realm,token.getSessionState());
    if (!isSessionValid(realm,userSession)) {
      if (userSession != null)       backchannelLogout(session,realm,userSession,uriInfo,connection,headers,true);
      logger.debug("User session not active");
      return null;
    }
    return new AuthResult(user,userSession,token);
  }
 catch (  VerificationException e) {
    logger.debugf("Failed to verify identity token: %s",e.getMessage());
  }
  return null;
}
