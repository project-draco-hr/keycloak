{
  logger.debug("failure");
  RealmModel realm=getRealmModel(session,event);
  logFailure(event);
  UsernameLoginFailureModel user=getUserModel(session,event);
  if (user == null) {
    user=realm.addUserLoginFailure(event.username);
  }
  user.setLastIPFailure(event.ip);
  long currentTime=System.currentTimeMillis();
  long last=user.getLastFailure();
  long deltaTime=0;
  if (last > 0) {
    deltaTime=currentTime - last;
  }
  user.setLastFailure(currentTime);
  if (deltaTime > 0) {
    if (deltaTime > (long)realm.getMaxDeltaTimeSeconds() * 1000L) {
      user.clearFailures();
    }
  }
  user.incrementFailures();
  logger.debugv("new num failures: {0}",user.getNumFailures());
  int waitSeconds=realm.getWaitIncrementSeconds() * (user.getNumFailures() / realm.getFailureFactor());
  logger.debugv("waitSeconds: {0}",waitSeconds);
  logger.debugv("deltaTime: {0}",deltaTime);
  if (waitSeconds == 0) {
    if (last > 0 && deltaTime < realm.getQuickLoginCheckMilliSeconds()) {
      logger.debugv("quick login, set min wait seconds");
      waitSeconds=realm.getMinimumQuickLoginWaitSeconds();
    }
  }
  if (waitSeconds > 0) {
    waitSeconds=Math.min(realm.getMaxFailureWaitSeconds(),waitSeconds);
    int notBefore=(int)(currentTime / 1000) + waitSeconds;
    logger.debugv("set notBefore: {0}",notBefore);
    user.setFailedLoginNotBefore(notBefore);
  }
}
