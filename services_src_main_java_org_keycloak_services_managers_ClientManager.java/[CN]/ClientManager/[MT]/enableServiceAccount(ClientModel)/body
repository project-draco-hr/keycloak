{
  client.setServiceAccountsEnabled(true);
  if (realmManager.getSession().users().getServiceAccount(client) == null) {
    String username=ServiceAccountConstants.SERVICE_ACCOUNT_USER_PREFIX + client.getClientId();
    logger.debugf("Creating service account user '%s'",username);
    UserModel user=realmManager.getSession().userStorage().addUser(client.getRealm(),username);
    user.setEnabled(true);
    user.setEmail(username + "@placeholder.org");
    user.setServiceAccountClientLink(client.getId());
  }
  if (client.getProtocolMapperByName(OIDCLoginProtocol.LOGIN_PROTOCOL,ServiceAccountConstants.CLIENT_ID_PROTOCOL_MAPPER) == null) {
    logger.debugf("Creating service account protocol mapper '%s' for client '%s'",ServiceAccountConstants.CLIENT_ID_PROTOCOL_MAPPER,client.getClientId());
    ProtocolMapperModel protocolMapper=UserSessionNoteMapper.createClaimMapper(ServiceAccountConstants.CLIENT_ID_PROTOCOL_MAPPER,ServiceAccountConstants.CLIENT_ID,ServiceAccountConstants.CLIENT_ID,"String",false,"",true,true);
    client.addProtocolMapper(protocolMapper);
  }
  if (client.getProtocolMapperByName(OIDCLoginProtocol.LOGIN_PROTOCOL,ServiceAccountConstants.CLIENT_HOST_PROTOCOL_MAPPER) == null) {
    logger.debugf("Creating service account protocol mapper '%s' for client '%s'",ServiceAccountConstants.CLIENT_HOST_PROTOCOL_MAPPER,client.getClientId());
    ProtocolMapperModel protocolMapper=UserSessionNoteMapper.createClaimMapper(ServiceAccountConstants.CLIENT_HOST_PROTOCOL_MAPPER,ServiceAccountConstants.CLIENT_HOST,ServiceAccountConstants.CLIENT_HOST,"String",false,"",true,true);
    client.addProtocolMapper(protocolMapper);
  }
  if (client.getProtocolMapperByName(OIDCLoginProtocol.LOGIN_PROTOCOL,ServiceAccountConstants.CLIENT_ADDRESS_PROTOCOL_MAPPER) == null) {
    logger.debugf("Creating service account protocol mapper '%s' for client '%s'",ServiceAccountConstants.CLIENT_ADDRESS_PROTOCOL_MAPPER,client.getClientId());
    ProtocolMapperModel protocolMapper=UserSessionNoteMapper.createClaimMapper(ServiceAccountConstants.CLIENT_ADDRESS_PROTOCOL_MAPPER,ServiceAccountConstants.CLIENT_ADDRESS,ServiceAccountConstants.CLIENT_ADDRESS,"String",false,"",true,true);
    client.addProtocolMapper(protocolMapper);
  }
}
