{
  StringBuffer buffer=new StringBuffer();
  buffer.append("<secure-deployment name=\"WAR MODULE NAME.war\">\n");
  buffer.append("    <realm>").append(realmModel.getName()).append("</realm>\n");
  buffer.append("    <realm-public-key>").append(realmModel.getPublicKeyPem()).append("</realm-public-key>\n");
  buffer.append("    <auth-server-url>").append(baseUri.toString()).append("</auth-server-url>\n");
  if (clientModel.isBearerOnly()) {
    buffer.append("    <bearer-only>true</bearer-only>\n");
  }
 else   if (clientModel.isPublicClient()) {
    buffer.append("    <public-client>true</public-client>\n");
  }
  buffer.append("    <ssl-required>").append(realmModel.getSslRequired().name()).append("</ssl-required>\n");
  buffer.append("    <resource>").append(clientModel.getClientId()).append("</resource>\n");
  String cred=clientModel.getSecret();
  if (showClientCredentialsAdapterConfig(clientModel)) {
    Map<String,Object> adapterConfig=getClientCredentialsAdapterConfig(clientModel);
    for (    Map.Entry<String,Object> entry : adapterConfig.entrySet()) {
      buffer.append("    <credential name=\"" + entry.getKey() + "\">");
      Object value=entry.getValue();
      if (value instanceof Map) {
        buffer.append("\n");
        Map<String,Object> asMap=(Map<String,Object>)value;
        for (        Map.Entry<String,Object> credEntry : asMap.entrySet()) {
          buffer.append("        <" + credEntry.getKey() + ">"+ credEntry.getValue().toString()+ "</"+ credEntry.getKey()+ ">\n");
        }
        buffer.append("    </credential>\n");
      }
 else {
        buffer.append(value.toString()).append("</credential>\n");
      }
    }
  }
  if (clientModel.getRoles().size() > 0) {
    buffer.append("    <use-resource-role-mappings>true</use-resource-role-mappings>\n");
  }
  buffer.append("</secure-deployment>\n");
  return buffer.toString();
}
