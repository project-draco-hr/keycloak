{
  RealmRepresentation rep=new RealmRepresentation();
  rep.setId(realm.getId());
  rep.setRealm(realm.getName());
  rep.setEnabled(realm.isEnabled());
  rep.setSocial(realm.isSocial());
  rep.setUpdateProfileOnInitialSocialLogin(realm.isUpdateProfileOnInitialSocialLogin());
  rep.setSslNotRequired(realm.isSslNotRequired());
  rep.setPublicKey(realm.getPublicKeyPem());
  rep.setPrivateKey(realm.getPrivateKeyPem());
  rep.setRegistrationAllowed(realm.isRegistrationAllowed());
  rep.setVerifyEmail(realm.isVerifyEmail());
  rep.setResetPasswordAllowed(realm.isResetPasswordAllowed());
  rep.setAccessTokenLifespan(realm.getAccessTokenLifespan());
  rep.setRefreshTokenLifespan(realm.getRefreshTokenLifespan());
  rep.setAccessCodeLifespan(realm.getAccessCodeLifespan());
  rep.setAccessCodeLifespanUserAction(realm.getAccessCodeLifespanUserAction());
  rep.setSmtpServer(realm.getSmtpConfig());
  rep.setSocialProviders(realm.getSocialConfig());
  rep.setAccountTheme(realm.getAccountTheme());
  rep.setLoginTheme(realm.getLoginTheme());
  if (realm.getPasswordPolicy() != null) {
    rep.setPasswordPolicy(realm.getPasswordPolicy().toString());
  }
  ApplicationModel accountManagementApplication=realm.getApplicationNameMap().get(Constants.ACCOUNT_APPLICATION);
  List<String> defaultRoles=realm.getDefaultRoles();
  if (!defaultRoles.isEmpty()) {
    List<String> roleStrings=new ArrayList<String>();
    roleStrings.addAll(defaultRoles);
    rep.setDefaultRoles(roleStrings);
  }
  List<RequiredCredentialModel> requiredCredentialModels=realm.getRequiredCredentials();
  if (requiredCredentialModels.size() > 0) {
    rep.setRequiredCredentials(new HashSet<String>());
    for (    RequiredCredentialModel cred : requiredCredentialModels) {
      rep.getRequiredCredentials().add(cred.getType());
    }
  }
  return rep;
}
