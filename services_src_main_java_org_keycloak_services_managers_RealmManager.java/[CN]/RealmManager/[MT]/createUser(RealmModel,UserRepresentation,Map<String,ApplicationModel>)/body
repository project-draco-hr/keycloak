{
  UserModel user=session.users().addUser(newRealm,userRep.getId(),userRep.getUsername(),false);
  user.setEnabled(userRep.isEnabled());
  user.setEmail(userRep.getEmail());
  user.setFirstName(userRep.getFirstName());
  user.setLastName(userRep.getLastName());
  if (userRep.getAttributes() != null) {
    for (    Map.Entry<String,String> entry : userRep.getAttributes().entrySet()) {
      user.setAttribute(entry.getKey(),entry.getValue());
    }
  }
  if (userRep.getRequiredActions() != null) {
    for (    String requiredAction : userRep.getRequiredActions()) {
      user.addRequiredAction(RequiredAction.valueOf(requiredAction));
    }
  }
  if (userRep.getCredentials() != null) {
    for (    CredentialRepresentation cred : userRep.getCredentials()) {
      UserCredentialModel credential=fromRepresentation(cred);
      user.updateCredential(credential);
    }
  }
  if (userRep.getAuthenticationLink() != null) {
    AuthenticationLinkRepresentation link=userRep.getAuthenticationLink();
    AuthenticationLinkModel authLink=new AuthenticationLinkModel(link.getAuthProvider(),link.getAuthUserId());
    user.setAuthenticationLink(authLink);
  }
  if (userRep.getSocialLinks() != null) {
    for (    SocialLinkRepresentation socialLink : userRep.getSocialLinks()) {
      SocialLinkModel mappingModel=new SocialLinkModel(socialLink.getSocialProvider(),socialLink.getSocialUserId(),socialLink.getSocialUsername());
      session.users().addSocialLink(newRealm,user,mappingModel);
    }
  }
  if (userRep.getRealmRoles() != null) {
    for (    String roleString : userRep.getRealmRoles()) {
      RoleModel role=newRealm.getRole(roleString.trim());
      if (role == null) {
        role=newRealm.addRole(roleString.trim());
      }
      user.grantRole(role);
    }
  }
  if (userRep.getApplicationRoles() != null) {
    ApplicationManager manager=new ApplicationManager(this);
    for (    Map.Entry<String,List<String>> entry : userRep.getApplicationRoles().entrySet()) {
      ApplicationModel app=appMap.get(entry.getKey());
      if (app == null) {
        throw new RuntimeException("Unable to find application role mappings for app: " + entry.getKey());
      }
      manager.createRoleMappings(app,user,entry.getValue());
    }
  }
  return user;
}
