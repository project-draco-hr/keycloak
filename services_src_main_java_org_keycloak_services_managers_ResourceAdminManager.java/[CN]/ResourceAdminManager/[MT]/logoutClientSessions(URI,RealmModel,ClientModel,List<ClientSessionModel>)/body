{
  String managementUrl=getManagementUrl(requestUri,resource);
  if (managementUrl != null) {
    MultivaluedHashMap<String,String> adapterSessionIds=null;
    List<String> userSessions=new LinkedList<>();
    if (clientSessions != null && clientSessions.size() > 0) {
      adapterSessionIds=new MultivaluedHashMap<String,String>();
      for (      ClientSessionModel clientSession : clientSessions) {
        String adapterSessionId=clientSession.getNote(AdapterConstants.CLIENT_SESSION_STATE);
        if (adapterSessionId != null) {
          String host=clientSession.getNote(AdapterConstants.CLIENT_SESSION_HOST);
          adapterSessionIds.add(host,adapterSessionId);
        }
        if (clientSession.getUserSession() != null)         userSessions.add(clientSession.getUserSession().getId());
      }
    }
    if (adapterSessionIds == null || adapterSessionIds.isEmpty()) {
      logger.debugv("Can't logout {0}: no logged adapter sessions",resource.getClientId());
      return false;
    }
    if (managementUrl.contains(CLIENT_SESSION_HOST_PROPERTY)) {
      boolean allPassed=true;
      for (      Map.Entry<String,List<String>> entry : adapterSessionIds.entrySet()) {
        String host=entry.getKey();
        List<String> sessionIds=entry.getValue();
        String currentHostMgmtUrl=managementUrl.replace(CLIENT_SESSION_HOST_PROPERTY,host);
        allPassed=sendLogoutRequest(realm,resource,sessionIds,userSessions,0,currentHostMgmtUrl) && allPassed;
      }
      return allPassed;
    }
 else {
      List<String> allSessionIds=new ArrayList<String>();
      for (      List<String> currentIds : adapterSessionIds.values()) {
        allSessionIds.addAll(currentIds);
      }
      return sendLogoutRequest(realm,resource,allSessionIds,userSessions,0,managementUrl);
    }
  }
 else {
    logger.debugv("Can't logout {0}: no management url",resource.getClientId());
    return false;
  }
}
