{
  ObjectInfo<T> objectInfo=(ObjectInfo<T>)objectInfoCache.get(objectClass);
  if (objectInfo == null) {
    Property<String> idProperty=PropertyQueries.<String>createQuery(objectClass).addCriteria(new AnnotatedPropertyCriteria(NoSQLId.class)).getFirstResult();
    if (idProperty == null) {
      throw new IllegalStateException("Class " + objectClass + " doesn't have property with declared annotation "+ NoSQLId.class);
    }
    List<Property<Object>> properties=PropertyQueries.createQuery(objectClass).addCriteria(new AnnotatedPropertyCriteria(NoSQLField.class)).getResultList();
    NoSQLCollection classAnnotation=objectClass.getAnnotation(NoSQLCollection.class);
    if (classAnnotation == null) {
      throw new IllegalStateException("Class " + objectClass + " doesn't have annotation "+ NoSQLCollection.class);
    }
    String dbCollectionName=classAnnotation.collectionName();
    objectInfo=new ObjectInfo<T>((Class<T>)objectClass,dbCollectionName,idProperty,properties);
    ObjectInfo existing=objectInfoCache.putIfAbsent((Class<T>)objectClass,objectInfo);
    if (existing != null) {
      objectInfo=existing;
    }
  }
  return objectInfo;
}
