{
  RoleModel resourceRole=realm.getRole(RealmManager.RESOURCE_ROLE);
  RoleModel identityRequestRole=realm.getRole(RealmManager.IDENTITY_REQUESTER_ROLE);
  boolean isResource=realm.hasRole(client,resourceRole);
  if (!isResource && !realm.hasRole(client,identityRequestRole)) {
    securityFailureForward("Login requester not allowed to request login.");
    return null;
  }
  AccessCodeEntry accessCode=tokenManager.createAccessCode(scopeParam,state,redirect,realm,client,user);
  getLogger().info("processAccessCode: isResource: " + isResource);
  getLogger().info("processAccessCode: go to oauth page?: " + (!isResource && (accessCode.getRealmRolesRequested().size() > 0 || accessCode.getResourceRolesRequested().size() > 0)));
  if (!isResource && (accessCode.getRealmRolesRequested().size() > 0 || accessCode.getResourceRolesRequested().size() > 0)) {
    oauthGrantPage(accessCode,client);
    return null;
  }
  return redirectAccessCode(accessCode,state,redirect);
}
