{
  auditProvider=providers.getProvider(AuditProvider.class);
  account=providers.getProvider(AccountProvider.class).setRealm(realm).setUriInfo(uriInfo);
  boolean passwordUpdateSupported=false;
  AuthenticationManager.AuthResult authResult=authManager.authenticateIdentityCookie(realm,uriInfo,headers);
  if (authResult != null) {
    auth=new Auth(realm,authResult.getToken(),authResult.getUser(),application,true);
  }
 else {
    authResult=authManager.authenticateBearerToken(realm,uriInfo,headers);
    if (authResult != null) {
      auth=new Auth(realm,authResult.getToken(),authResult.getUser(),application,false);
    }
  }
  if (authResult != null) {
    if (authResult.getSession() != null) {
      authResult.getSession().associateClient(application);
    }
    account.setUser(auth.getUser());
    AuthenticationLinkModel authLinkModel=auth.getUser().getAuthenticationLink();
    if (authLinkModel != null) {
      AuthenticationProviderModel authProviderModel=AuthenticationProviderManager.getConfiguredProviderModel(realm,authLinkModel.getAuthProvider());
      passwordUpdateSupported=authProviderModel.isPasswordUpdateSupported();
    }
  }
  boolean auditEnabled=auditProvider != null && realm.isAuditEnabled();
  account.setFeatures(realm.isSocial(),auditEnabled,passwordUpdateSupported);
}
