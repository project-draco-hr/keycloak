{
  eventStore=session.getProvider(EventStoreProvider.class);
  account=session.getProvider(AccountProvider.class).setRealm(realm).setUriInfo(uriInfo).setHttpHeaders(headers);
  AuthenticationManager.AuthResult authResult=authManager.authenticateBearerToken(session,realm,uriInfo,clientConnection,headers);
  if (authResult != null) {
    auth=new Auth(realm,authResult.getToken(),authResult.getUser(),client,authResult.getSession(),false);
  }
 else {
    authResult=authManager.authenticateIdentityCookie(session,realm,uriInfo,clientConnection,headers);
    if (authResult != null) {
      auth=new Auth(realm,authResult.getToken(),authResult.getUser(),client,authResult.getSession(),true);
      Cookie cookie=headers.getCookies().get(KEYCLOAK_STATE_CHECKER);
      if (cookie != null) {
        stateChecker=cookie.getValue();
      }
 else {
        stateChecker=UUID.randomUUID().toString();
        String cookiePath=AuthenticationManager.getRealmCookiePath(realm,uriInfo);
        boolean secureOnly=realm.getSslRequired().isRequired(clientConnection);
        CookieHelper.addCookie(KEYCLOAK_STATE_CHECKER,stateChecker,cookiePath,null,null,-1,secureOnly,true);
      }
      account.setStateChecker(stateChecker);
    }
  }
  String requestOrigin=UriUtils.getOrigin(uriInfo.getBaseUri());
  if (auth != null && auth.isCookieAuthenticated()) {
    String origin=headers.getRequestHeaders().getFirst("Origin");
    if (origin != null && !requestOrigin.equals(origin)) {
      throw new ForbiddenException();
    }
    if (!request.getHttpMethod().equals("GET")) {
      String referrer=headers.getRequestHeaders().getFirst("Referer");
      if (referrer != null && !requestOrigin.equals(UriUtils.getOrigin(referrer))) {
        throw new ForbiddenException();
      }
    }
  }
  if (authResult != null) {
    UserSessionModel userSession=authResult.getSession();
    if (userSession != null) {
      boolean associated=false;
      for (      ClientSessionModel c : userSession.getClientSessions()) {
        if (c.getClient().equals(client)) {
          auth.setClientSession(c);
          associated=true;
          break;
        }
      }
      if (!associated) {
        ClientSessionModel clientSession=session.sessions().createClientSession(realm,client);
        clientSession.setUserSession(userSession);
        auth.setClientSession(clientSession);
      }
    }
    account.setUser(auth.getUser());
  }
  boolean eventsEnabled=eventStore != null && realm.isEventsEnabled();
  account.setFeatures(realm.isIdentityFederationEnabled(),eventsEnabled,true);
}
