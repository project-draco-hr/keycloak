{
  if (auth == null) {
    return login(null);
  }
  require(AccountRoles.MANAGE_ACCOUNT);
  String action=formData.getFirst("submitAction");
  if (action != null && action.equals("Cancel")) {
    setReferrerOnPage();
    return account.createResponse(AccountPages.ACCOUNT);
  }
  UserModel user=auth.getUser();
  String error=Validation.validateUpdateProfileForm(formData);
  if (error != null) {
    setReferrerOnPage();
    return account.setError(error).createResponse(AccountPages.ACCOUNT);
  }
  try {
    user.setFirstName(formData.getFirst("firstName"));
    user.setLastName(formData.getFirst("lastName"));
    String email=formData.getFirst("email");
    String oldEmail=user.getEmail();
    boolean emailChanged=oldEmail != null ? !oldEmail.equals(email) : email != null;
    user.setEmail(formData.getFirst("email"));
    event.event(EventType.UPDATE_PROFILE).client(auth.getClient()).user(auth.getUser()).success();
    if (emailChanged) {
      user.setEmailVerified(false);
      event.clone().event(EventType.UPDATE_EMAIL).detail(Details.PREVIOUS_EMAIL,oldEmail).detail(Details.UPDATED_EMAIL,email).success();
    }
    setReferrerOnPage();
    return account.setSuccess("accountUpdated").createResponse(AccountPages.ACCOUNT);
  }
 catch (  ModelReadOnlyException roe) {
    setReferrerOnPage();
    return account.setError(Messages.READ_ONLY_USER).createResponse(AccountPages.ACCOUNT);
  }
}
