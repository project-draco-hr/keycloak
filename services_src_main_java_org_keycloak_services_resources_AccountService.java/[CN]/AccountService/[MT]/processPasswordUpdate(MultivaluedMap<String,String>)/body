{
  Auth auth=getAuth(true);
  auth.require(application,AccountRoles.MANAGE_ACCOUNT);
  UserModel user=auth.getUser();
  Account account=AccountLoader.load().createAccount(uriInfo).setRealm(realm).setUser(auth.getUser());
  String password=formData.getFirst("password");
  String passwordNew=formData.getFirst("password-new");
  String passwordConfirm=formData.getFirst("password-confirm");
  if (Validation.isEmpty(passwordNew)) {
    return account.setError(Messages.MISSING_PASSWORD).createResponse(AccountPages.PASSWORD);
  }
 else   if (!passwordNew.equals(passwordConfirm)) {
    return account.setError(Messages.INVALID_PASSWORD_CONFIRM).createResponse(AccountPages.PASSWORD);
  }
  if (Validation.isEmpty(password)) {
    return account.setError(Messages.MISSING_PASSWORD).createResponse(AccountPages.PASSWORD);
  }
 else   if (!realm.validatePassword(user,password)) {
    return account.setError(Messages.INVALID_PASSWORD_EXISTING).createResponse(AccountPages.PASSWORD);
  }
  String error=Validation.validatePassword(formData,realm.getPasswordPolicy());
  if (error != null) {
    return account.setError(error).createResponse(AccountPages.PASSWORD);
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.PASSWORD);
  credentials.setValue(passwordNew);
  realm.updateCredential(user,credentials);
  return account.setSuccess("accountPasswordUpdated").createResponse(AccountPages.PASSWORD);
}
