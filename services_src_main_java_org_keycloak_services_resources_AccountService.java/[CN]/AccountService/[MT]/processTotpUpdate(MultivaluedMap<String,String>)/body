{
  AuthenticationManager.Auth auth=getAuth(true);
  UserModel user=auth.getUser();
  String totp=formData.getFirst("totp");
  String totpSecret=formData.getFirst("totpSecret");
  FormFlows forms=Flows.forms(realm,request,uriInfo).setUser(user);
  if (Validation.isEmpty(totp)) {
    return forms.setError(Messages.MISSING_TOTP).forwardToTotp();
  }
 else   if (!new TimeBasedOTP().validate(totp,totpSecret.getBytes())) {
    return forms.setError(Messages.INVALID_TOTP).forwardToTotp();
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.TOTP);
  credentials.setValue(totpSecret);
  realm.updateCredential(user,credentials);
  user.setTotp(true);
  return Flows.forms(realm,request,uriInfo).setError("successTotp").setErrorType(FormFlows.MessageType.SUCCESS).setUser(user).forwardToTotp();
}
