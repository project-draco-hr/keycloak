{
  UserModel user=getUserFromAuthManager();
  if (user == null) {
    return Response.status(Status.FORBIDDEN).build();
  }
  FormFlows forms=Flows.forms(realm,request,uriInfo);
  String totp=formData.getFirst("totp");
  String totpSecret=formData.getFirst("totpSecret");
  String error=null;
  if (Validation.isEmpty(totp)) {
    error=Messages.MISSING_TOTP;
  }
 else   if (!new TimeBasedOTP().validate(totp,totpSecret.getBytes())) {
    error=Messages.INVALID_TOTP;
  }
  if (error != null) {
    return forms.setError(error).setUser(user).forwardToTotp();
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.TOTP);
  credentials.setValue(formData.getFirst("totpSecret"));
  realm.updateCredential(user,credentials);
  user.setTotp(true);
  return Flows.forms(realm,request,uriInfo).setError("successTotp").setErrorType(FormFlows.MessageType.SUCCESS).setUser(user).forwardToTotp();
}
