{
  if (auth == null) {
    return login("totp");
  }
  require(AccountRoles.MANAGE_ACCOUNT);
  String action=formData.getFirst("submitAction");
  if (action != null && action.equals("Cancel")) {
    setReferrerOnPage();
    return account.createResponse(AccountPages.TOTP);
  }
  csrfCheck(formData);
  UserModel user=auth.getUser();
  String totp=formData.getFirst("totp");
  String totpSecret=formData.getFirst("totpSecret");
  if (Validation.isBlank(totp)) {
    setReferrerOnPage();
    return account.setError(Messages.MISSING_TOTP).createResponse(AccountPages.TOTP);
  }
 else   if (!new TimeBasedOTP().validate(totp,totpSecret.getBytes())) {
    setReferrerOnPage();
    return account.setError(Messages.INVALID_TOTP).createResponse(AccountPages.TOTP);
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.TOTP);
  credentials.setValue(totpSecret);
  session.users().updateCredential(realm,user,credentials);
  user.setTotp(true);
  event.event(EventType.UPDATE_TOTP).client(auth.getClient()).user(auth.getUser()).success();
  setReferrerOnPage();
  return account.setSuccess(Messages.SUCCESS_TOTP).createResponse(AccountPages.TOTP);
}
