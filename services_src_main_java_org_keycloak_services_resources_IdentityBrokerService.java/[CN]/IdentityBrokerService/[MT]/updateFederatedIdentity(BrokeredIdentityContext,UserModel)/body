{
  FederatedIdentityModel federatedIdentityModel=this.session.users().getFederatedIdentity(federatedUser,context.getIdpConfig().getAlias(),this.realmModel);
  if (context.getIdpConfig().isStoreToken() && !ObjectUtil.isEqualOrBothNull(context.getToken(),federatedIdentityModel.getToken())) {
    federatedIdentityModel.setToken(context.getToken());
    this.session.users().updateFederatedIdentity(this.realmModel,federatedUser,federatedIdentityModel);
    if (isDebugEnabled()) {
      LOGGER.debugf("Identity [%s] update with response from identity provider [%s].",federatedUser,context.getIdpConfig().getAlias());
    }
  }
  context.getIdp().updateBrokeredUser(session,realmModel,federatedUser,context);
  Set<IdentityProviderMapperModel> mappers=realmModel.getIdentityProviderMappersByAlias(context.getIdpConfig().getAlias());
  if (mappers != null) {
    KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
    for (    IdentityProviderMapperModel mapper : mappers) {
      IdentityProviderMapper target=(IdentityProviderMapper)sessionFactory.getProviderFactory(IdentityProviderMapper.class,mapper.getIdentityProviderMapper());
      target.updateBrokeredUser(session,realmModel,federatedUser,mapper,context);
    }
  }
}
