{
  event.event(EventType.LOGIN);
  if (action == null) {
    logger.error("required action query param was null");
    event.error(Errors.INVALID_CODE);
    throw new WebApplicationException(ErrorPage.error(session,Messages.INVALID_CODE));
  }
  RequiredActionProvider provider=session.getProvider(RequiredActionProvider.class,action);
  if (provider == null) {
    logger.error("required action provider was null");
    event.error(Errors.INVALID_CODE);
    throw new WebApplicationException(ErrorPage.error(session,Messages.INVALID_CODE));
  }
  Checks checks=new Checks();
  if (!checks.check(code,action)) {
    return checks.response;
  }
  final ClientSessionCode clientCode=checks.clientCode;
  final ClientSessionModel clientSession=clientCode.getClientSession();
  if (clientSession.getUserSession() == null) {
    logger.error("user session was null");
    event.error(Errors.USER_SESSION_NOT_FOUND);
    throw new WebApplicationException(ErrorPage.error(session,Messages.SESSION_NOT_ACTIVE));
  }
  RequiredActionContext context=new RequiredActionContext(){
    @Override public EventBuilder getEvent(){
      return event;
    }
    @Override public UserModel getUser(){
      return getUserSession().getUser();
    }
    @Override public RealmModel getRealm(){
      return realm;
    }
    @Override public ClientSessionModel getClientSession(){
      return clientSession;
    }
    @Override public UserSessionModel getUserSession(){
      return clientSession.getUserSession();
    }
    @Override public ClientConnection getConnection(){
      return clientConnection;
    }
    @Override public UriInfo getUriInfo(){
      return uriInfo;
    }
    @Override public KeycloakSession getSession(){
      return session;
    }
    @Override public HttpRequest getHttpRequest(){
      return request;
    }
    @Override public String generateAccessCode(    String action){
      String clientSessionAction=clientSession.getAction();
      if (action.equals(clientSessionAction)) {
        clientSession.setTimestamp(Time.currentTime());
        return code;
      }
      ClientSessionCode code=new ClientSessionCode(getRealm(),getClientSession());
      code.setAction(action);
      return code.getCode();
    }
  }
;
  return provider.jaxrsService(context);
}
