{
  int width=256;
  int height=256;
  if (size != null) {
    String[] s=size.split("x");
    try {
      width=Integer.parseInt(s[0]);
      height=Integer.parseInt(s[1]);
    }
 catch (    Throwable t) {
      return Response.status(Response.Status.BAD_REQUEST).build();
    }
  }
  if (contents == null) {
    return Response.status(Response.Status.BAD_REQUEST).build();
  }
  if (width > 1000 || height > 1000 || contents.length() > 1000) {
    return Response.status(Response.Status.BAD_REQUEST).build();
  }
  QRCodeWriter writer=new QRCodeWriter();
  final BitMatrix bitMatrix=writer.encode(contents,BarcodeFormat.QR_CODE,width,height);
  StreamingOutput stream=new StreamingOutput(){
    @Override public void write(    OutputStream os) throws IOException, WebApplicationException {
      MatrixToImageWriter.writeToStream(bitMatrix,"png",os);
    }
  }
;
  CacheControl cacheControl=CacheControlUtil.noCache();
  return Response.ok(stream).cacheControl(cacheControl).header("Pragma","no-cache").header("Expires","0").build();
}
