{
  if (uriInfo.getQueryParameters().containsKey("key")) {
    AccessCodeEntry accessCode=tokenManager.getAccessCode(uriInfo.getQueryParameters().getFirst("key"));
    if (accessCode == null || accessCode.isExpired() || !accessCode.getRequiredActions().contains(RequiredAction.VERIFY_EMAIL)) {
      return unauthorized();
    }
    UserModel user=getUser(accessCode);
    user.setEmailVerified(true);
    user.removeRequiredAction(RequiredAction.VERIFY_EMAIL);
    accessCode.getRequiredActions().remove(RequiredAction.VERIFY_EMAIL);
    return redirectOauth(user,accessCode);
  }
 else {
    AccessCodeEntry accessCode=getAccessCodeEntry(RequiredAction.VERIFY_EMAIL);
    if (accessCode == null) {
      return unauthorized();
    }
    return Flows.forms(realm,request,uriInfo).setAccessCode(accessCode.getId(),accessCode.getCode()).setUser(accessCode.getUser()).createResponse(RequiredAction.VERIFY_EMAIL);
  }
}
