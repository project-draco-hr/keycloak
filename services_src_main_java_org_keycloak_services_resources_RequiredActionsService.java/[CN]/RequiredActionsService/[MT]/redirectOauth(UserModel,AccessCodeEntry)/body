{
  if (accessCode == null) {
    return null;
  }
  Set<RequiredAction> requiredActions=user.getRequiredActions();
  if (!requiredActions.isEmpty()) {
    return Flows.forms(session,realm,uriInfo).setAccessCode(accessCode.getCode()).setUser(user).createResponse(requiredActions.iterator().next());
  }
 else {
    logger.debugv("redirectOauth: redirecting to: {0}",accessCode.getRedirectUri());
    accessCode.resetExpiration();
    AuthenticationManager authManager=new AuthenticationManager(session);
    UserSessionModel session=realm.getUserSession(accessCode.getSessionState());
    if (!AuthenticationManager.isSessionValid(realm,session)) {
      AuthenticationManager.logout(realm,session,uriInfo);
      return Flows.oauth(this.session,realm,request,uriInfo,authManager,tokenManager).redirectError(accessCode.getClient(),"access_denied",accessCode.getState(),accessCode.getRedirectUri());
    }
    audit.session(session);
    audit.success();
    return Flows.oauth(this.session,realm,request,uriInfo,authManager,tokenManager).redirectAccessCode(accessCode,session,accessCode.getState(),accessCode.getRedirectUri());
  }
}
