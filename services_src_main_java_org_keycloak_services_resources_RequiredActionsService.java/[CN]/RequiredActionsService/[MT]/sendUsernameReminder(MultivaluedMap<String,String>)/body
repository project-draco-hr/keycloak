{
  String email=formData.getFirst("email");
  String clientId=uriInfo.getQueryParameters().getFirst("client_id");
  UserModel client=realm.getUser(clientId);
  if (client == null) {
    return Flows.oauth(realm,request,uriInfo,authManager,tokenManager).forwardToSecurityFailure("Unknown login requester.");
  }
  if (!client.isEnabled()) {
    return Flows.oauth(realm,request,uriInfo,authManager,tokenManager).forwardToSecurityFailure("Login requester not enabled.");
  }
  UserModel user=realm.getUserByEmail(email);
  if (user == null) {
    return Flows.forms(realm,request,uriInfo).setError("emailError").forwardToUsernameReminder();
  }
  try {
    new EmailSender(realm.getSmtpConfig()).sendUsernameReminder(user);
  }
 catch (  EmailException e) {
    logger.error("Failed to send username reminder email",e);
    return Flows.forms(realm,request,uriInfo).setError("emailSendError").forwardToErrorPage();
  }
  return Flows.forms(realm,request,uriInfo).setSuccess("emailUsernameSent").forwardToLogin();
}
