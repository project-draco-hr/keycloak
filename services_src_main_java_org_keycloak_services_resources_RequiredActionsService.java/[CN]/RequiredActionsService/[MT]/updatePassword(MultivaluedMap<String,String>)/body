{
  AccessCode accessCode=getAccessCodeEntry(RequiredAction.UPDATE_PASSWORD);
  if (accessCode == null) {
    return unauthorized();
  }
  UserModel user=getUser(accessCode);
  initAudit(accessCode);
  String passwordNew=formData.getFirst("password-new");
  String passwordConfirm=formData.getFirst("password-confirm");
  LoginFormsProvider loginForms=Flows.forms(session,realm,null,uriInfo).setUser(user);
  if (Validation.isEmpty(passwordNew)) {
    return loginForms.setError(Messages.MISSING_PASSWORD).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
 else   if (!passwordNew.equals(passwordConfirm)) {
    return loginForms.setError(Messages.NOTMATCH_PASSWORD).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
  try {
    session.users().updateCredential(realm,user,UserCredentialModel.password(passwordNew));
  }
 catch (  Exception ape) {
    return loginForms.setError(ape.getMessage()).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
  user.removeRequiredAction(RequiredAction.UPDATE_PASSWORD);
  audit.clone().event(EventType.UPDATE_PASSWORD).success();
  if (accessCode.getSessionState() == null) {
    return Response.seeOther(Urls.accountPage(uriInfo.getBaseUri(),realm.getId())).build();
  }
 else {
    return redirectOauth(user,accessCode);
  }
}
