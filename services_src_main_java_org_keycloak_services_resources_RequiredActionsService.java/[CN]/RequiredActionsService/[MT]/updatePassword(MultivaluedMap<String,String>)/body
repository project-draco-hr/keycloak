{
  logger.debug("updatePassword");
  AccessCodeEntry accessCode=getAccessCodeEntry(RequiredAction.UPDATE_PASSWORD);
  if (accessCode == null) {
    logger.debug("updatePassword access code is null");
    return unauthorized();
  }
  logger.debug("updatePassword has access code");
  UserModel user=getUser(accessCode);
  String passwordNew=formData.getFirst("password-new");
  String passwordConfirm=formData.getFirst("password-confirm");
  LoginForms loginForms=Flows.forms(realm,request,uriInfo).setUser(user);
  if (Validation.isEmpty(passwordNew)) {
    return loginForms.setError(Messages.MISSING_PASSWORD).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
 else   if (!passwordNew.equals(passwordConfirm)) {
    return loginForms.setError(Messages.NOTMATCH_PASSWORD).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
  String error=realm.getPasswordPolicy().validate(passwordNew);
  if (error != null) {
    return loginForms.setError(error).createResponse(RequiredAction.UPDATE_PASSWORD);
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.PASSWORD);
  credentials.setValue(passwordNew);
  realm.updateCredential(user,credentials);
  logger.debug("updatePassword updated credential");
  user.removeRequiredAction(RequiredAction.UPDATE_PASSWORD);
  if (accessCode != null) {
    accessCode.getRequiredActions().remove(RequiredAction.UPDATE_PASSWORD);
  }
  return redirectOauth(user,accessCode);
}
