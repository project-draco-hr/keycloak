{
  AccessCodeEntry accessCode=getAccessCodeEntry(RequiredAction.CONFIGURE_TOTP);
  if (accessCode == null) {
    return unauthorized();
  }
  UserModel user=getUser(accessCode);
  String totp=formData.getFirst("totp");
  String totpSecret=formData.getFirst("totpSecret");
  LoginForms loginForms=Flows.forms(realm,request,uriInfo).setUser(user);
  if (Validation.isEmpty(totp)) {
    return loginForms.setError(Messages.MISSING_TOTP).createResponse(RequiredAction.CONFIGURE_TOTP);
  }
 else   if (!new TimeBasedOTP().validate(totp,totpSecret.getBytes())) {
    return loginForms.setError(Messages.INVALID_TOTP).createResponse(RequiredAction.CONFIGURE_TOTP);
  }
  UserCredentialModel credentials=new UserCredentialModel();
  credentials.setType(CredentialRepresentation.TOTP);
  credentials.setValue(totpSecret);
  realm.updateCredential(user,credentials);
  user.setTotp(true);
  user.removeRequiredAction(RequiredAction.CONFIGURE_TOTP);
  accessCode.getRequiredActions().remove(RequiredAction.CONFIGURE_TOTP);
  return redirectOauth(user,accessCode);
}
