{
  if (!password.equals(confirm)) {
    request.setAttribute("KEYCLOAK_LOGIN_ERROR_MESSAGE","Password confirmation doesn't match.");
    request.forward(saasRegisterPath);
    return null;
  }
  return new Transaction(){
    @Override protected Response callImpl(){
      RealmManager realmManager=new RealmManager(session);
      RealmModel defaultRealm=realmManager.defaultRealm();
      UserRepresentation newUser=new UserRepresentation();
      newUser.setUsername(username);
      newUser.setEmail(email);
      if (fullname != null) {
        StringTokenizer tokenizer=new StringTokenizer(fullname," ");
        StringBuffer first=null;
        String last="";
        while (tokenizer.hasMoreTokens()) {
          String token=tokenizer.nextToken();
          if (tokenizer.hasMoreTokens()) {
            if (first == null) {
              first=new StringBuffer();
            }
 else {
              first.append(" ");
            }
            first.append(token);
          }
 else {
            last=token;
          }
        }
        if (first == null)         first=new StringBuffer();
        newUser.setFirstName(first.toString());
        newUser.setLastName(last);
      }
      newUser.credential(CredentialRepresentation.PASSWORD,password);
      UserModel user=registerMe(defaultRealm,newUser);
      if (user == null) {
        request.setAttribute("KEYCLOAK_LOGIN_ERROR_MESSAGE","Username already exists.");
        request.forward(saasRegisterPath);
        return null;
      }
      NewCookie cookie=authManager.createSaasIdentityCookie(defaultRealm,user,uriInfo);
      return Response.status(302).location(contextRoot(uriInfo).path(adminPath).build()).cookie(cookie).build();
    }
  }
.call();
}
