{
  RealmManager realmManager=new RealmManager(session);
  RealmModel realm=realmManager.getRealmByName(realmName);
  EventBuilder event=new EventsManager(realm,session,clientConnection).createEventBuilder().event(EventType.LOGIN).detail(Details.AUTH_METHOD,"social@" + providerId);
  SocialProvider provider=SocialLoader.load(providerId);
  if (provider == null) {
    event.error(Errors.SOCIAL_PROVIDER_NOT_FOUND);
    return Flows.forms(session,realm,null,uriInfo).setError("Social provider not found").createErrorPage();
  }
  Checks checks=new Checks();
  if (!checks.check(event,realm,code,ClientSessionModel.Action.AUTHENTICATE)) {
    return checks.response;
  }
  ClientSessionCode clientSessionCode=checks.clientCode;
  try {
    return Flows.social(realm,uriInfo,clientConnection,provider).redirectToSocialProvider(clientSessionCode);
  }
 catch (  Throwable t) {
    logger.error("Failed to redirect to social auth",t);
    return Flows.forms(session,realm,null,uriInfo).setError("Failed to redirect to social auth").createErrorPage();
  }
}
