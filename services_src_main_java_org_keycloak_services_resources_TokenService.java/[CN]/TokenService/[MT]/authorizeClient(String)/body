{
  if (authorizationHeader == null) {
    throw new NotAuthorizedException("No Authorization header to authenticate client","Basic realm=\"" + realm.getName() + "\"");
  }
  String[] usernameSecret=BasicAuthHelper.parseHeader(authorizationHeader);
  if (usernameSecret == null) {
    throw new NotAuthorizedException("No Authorization header to authenticate client","Basic realm=\"" + realm.getName() + "\"");
  }
  String client_id=usernameSecret[0];
  String clientSecret=usernameSecret[1];
  ClientModel client=realm.findClient(client_id);
  if (client == null) {
    Map<String,String> error=new HashMap<String,String>();
    error.put("error","invalid_client");
    error.put("error_description","Could not find client");
    throw new BadRequestException("Could not find client",Response.status(Response.Status.BAD_REQUEST).entity(error).type("application/json").build());
  }
  if (!client.isEnabled()) {
    Map<String,String> error=new HashMap<String,String>();
    error.put("error","invalid_client");
    error.put("error_description","Client is not enabled");
    throw new BadRequestException("Client is not enabled",Response.status(Response.Status.BAD_REQUEST).entity(error).type("application/json").build());
  }
  if (!realm.validateSecret(client.getAgent(),clientSecret)) {
    Map<String,String> error=new HashMap<String,String>();
    error.put("error","unauthorized_client");
    throw new BadRequestException("Unauthorized Client",Response.status(Response.Status.BAD_REQUEST).entity(error).type("application/json").build());
  }
  return client;
}
