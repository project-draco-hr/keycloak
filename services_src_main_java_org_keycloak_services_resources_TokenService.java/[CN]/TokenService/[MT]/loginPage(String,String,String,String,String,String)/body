{
  logger.info("TokenService.loginPage");
  OAuthFlows oauth=Flows.oauth(realm,request,uriInfo,authManager,tokenManager);
  if (!checkSsl()) {
    return oauth.forwardToSecurityFailure("HTTPS required");
  }
  if (!realm.isEnabled()) {
    logger.warn("Realm not enabled");
    return oauth.forwardToSecurityFailure("Realm not enabled");
  }
  ClientModel client=realm.findClient(clientId);
  if (client == null) {
    logger.warn("Unknown login requester: " + clientId);
    return oauth.forwardToSecurityFailure("Unknown login requester.");
  }
  if (!client.isEnabled()) {
    logger.warn("Login requester not enabled.");
    return oauth.forwardToSecurityFailure("Login requester not enabled.");
  }
  redirect=verifyRedirectUri(redirect,client);
  if (redirect == null) {
    return oauth.forwardToSecurityFailure("Invalid redirect_uri.");
  }
  logger.info("Checking cookie...");
  UserModel user=authManager.authenticateIdentityCookie(realm,uriInfo,headers);
  if (user != null) {
    logger.debug(user.getLoginName() + " already logged in.");
    return oauth.processAccessCode(scopeParam,state,redirect,client,user);
  }
  if (prompt != null && prompt.equals("none")) {
    return oauth.redirectError(client,"access_denied",state,redirect);
  }
  logger.info("createLogin() now...");
  return Flows.forms(realm,request,uriInfo).createLogin();
}
