{
  OAuthFlows oauth=Flows.oauth(realm,request,uriInfo,authManager,tokenManager);
  if (!realm.isEnabled()) {
    return oauth.forwardToSecurityFailure("Realm not enabled.");
  }
  UserModel client=realm.getUser(clientId);
  if (client == null) {
    return oauth.forwardToSecurityFailure("Unknown login requester.");
  }
  if (!client.isEnabled()) {
    return oauth.forwardToSecurityFailure("Login requester not enabled.");
  }
  String username=formData.getFirst("username");
  UserModel user=realm.getUser(username);
  if (user == null) {
    return Flows.forms(realm,request,uriInfo).setError(Messages.INVALID_USER).setFormData(formData).forwardToLogin();
  }
  isTotpConfigurationRequired(user);
  isEmailVerificationRequired(user);
  AuthenticationStatus status=authManager.authenticateForm(realm,user,formData);
switch (status) {
case SUCCESS:
case ACTIONS_REQUIRED:
    return oauth.processAccessCode(scopeParam,state,redirect,client,user);
case ACCOUNT_DISABLED:
  return Flows.forms(realm,request,uriInfo).setError(Messages.ACCOUNT_DISABLED).setFormData(formData).forwardToLogin();
case MISSING_TOTP:
return Flows.forms(realm,request,uriInfo).setFormData(formData).forwardToLoginTotp();
default :
return Flows.forms(realm,request,uriInfo).setError(Messages.INVALID_USER).setFormData(formData).forwardToLogin();
}
}
