{
  OAuthFlows oauth=Flows.oauth(realm,request,uriInfo,authManager,tokenManager);
  if (!checkSsl()) {
    return oauth.forwardToSecurityFailure("HTTPS required");
  }
  String code=formData.getFirst("code");
  JWSInput input=new JWSInput(code);
  boolean verifiedCode=false;
  try {
    verifiedCode=RSAProvider.verify(input,realm.getPublicKey());
  }
 catch (  Exception ignored) {
    logger.debug("Failed to verify signature",ignored);
  }
  if (!verifiedCode) {
    return oauth.forwardToSecurityFailure("Illegal access code.");
  }
  String key=input.readContentAsString();
  AccessCodeEntry accessCodeEntry=tokenManager.getAccessCode(key);
  if (accessCodeEntry == null) {
    return oauth.forwardToSecurityFailure("Unknown access code.");
  }
  String redirect=accessCodeEntry.getRedirectUri();
  String state=accessCodeEntry.getState();
  if (formData.containsKey("cancel")) {
    return redirectAccessDenied(redirect,state);
  }
  accessCodeEntry.setExpiration(Time.currentTime() + realm.getAccessCodeLifespan());
  return oauth.redirectAccessCode(accessCodeEntry,state,redirect);
}
