{
  auth.requireManage();
  String subject=client.getClientId();
  KeyPair keyPair=null;
  try {
    keyPair=KeyPairGenerator.getInstance("RSA").generateKeyPair();
  }
 catch (  NoSuchAlgorithmException e) {
    throw new RuntimeException(e);
  }
  X509Certificate certificate=null;
  try {
    certificate=CertificateUtils.generateV1SelfSignedCertificate(keyPair,subject);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  String privateKeyPem=KeycloakModelUtils.getPemFromKey(keyPair.getPrivate());
  String certPem=KeycloakModelUtils.getPemFromCertificate(certificate);
  client.setAttribute(privateAttribute,privateKeyPem);
  client.setAttribute(certificateAttribute,certPem);
  KeycloakModelUtils.generateClientKeyPairCertificate(client);
  ClientKeyPairInfo info=new ClientKeyPairInfo();
  info.setCertificate(client.getAttribute(certificateAttribute));
  info.setPrivateKey(client.getAttribute(privateAttribute));
  event.event(EventType.UPDATE_CLIENT_CERTIFICATE).representation(info).success();
  return info;
}
