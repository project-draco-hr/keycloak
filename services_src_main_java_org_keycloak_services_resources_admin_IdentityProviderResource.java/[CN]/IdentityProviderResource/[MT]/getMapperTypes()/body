{
  this.auth.requireView();
  if (identityProviderModel == null) {
    throw new javax.ws.rs.NotFoundException();
  }
  KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
  Map<String,IdentityProviderMapperTypeRepresentation> types=new HashMap<>();
  List<ProviderFactory> factories=sessionFactory.getProviderFactories(IdentityProviderMapper.class);
  for (  ProviderFactory factory : factories) {
    IdentityProviderMapper mapper=(IdentityProviderMapper)factory;
    for (    String type : mapper.getCompatibleProviders()) {
      if (IdentityProviderMapper.ANY_PROVIDER.equals(type) || type.equals(identityProviderModel.getProviderId())) {
        IdentityProviderMapperTypeRepresentation rep=new IdentityProviderMapperTypeRepresentation();
        rep.setId(mapper.getId());
        rep.setCategory(mapper.getDisplayCategory());
        rep.setName(mapper.getDisplayType());
        rep.setHelpText(mapper.getHelpText());
        List<ProviderConfigProperty> configProperties=mapper.getConfigProperties();
        for (        ProviderConfigProperty prop : configProperties) {
          ConfigPropertyRepresentation propRep=ModelToRepresentation.toRepresentation(prop);
          rep.getProperties().add(propRep);
        }
        types.put(rep.getId(),rep);
        break;
      }
    }
  }
  return types;
}
