{
  this.auth.requireManage();
  Map<String,List<InputPart>> formDataMap=input.getFormDataMap();
  String id=formDataMap.get("id").get(0).getBodyAsString();
  String name=formDataMap.get("name").get(0).getBodyAsString();
  String providerId=formDataMap.get("providerId").get(0).getBodyAsString();
  String enabled=formDataMap.get("enabled").get(0).getBodyAsString();
  String updateProfileFirstLogin=formDataMap.get("updateProfileFirstLogin").get(0).getBodyAsString();
  String storeToken=formDataMap.get("storeToken").get(0).getBodyAsString();
  InputPart file=formDataMap.get("file").get(0);
  InputStream inputStream=file.getBody(InputStream.class,null);
  IdentityProviderFactory providerFactory=getProviderFactorytById(providerId);
  Map config=providerFactory.parseConfig(inputStream);
  IdentityProviderRepresentation representation=new IdentityProviderRepresentation();
  representation.setId(id);
  representation.setName(name);
  representation.setProviderId(providerId);
  representation.setEnabled(Boolean.valueOf(enabled));
  representation.setUpdateProfileFirstLogin(Boolean.valueOf(updateProfileFirstLogin));
  representation.setStoreToken(Boolean.valueOf(storeToken));
  representation.setConfig(config);
  return create(uriInfo,representation);
}
