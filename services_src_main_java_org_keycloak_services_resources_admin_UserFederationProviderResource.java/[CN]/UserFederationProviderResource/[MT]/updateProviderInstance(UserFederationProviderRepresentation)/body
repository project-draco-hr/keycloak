{
  auth.requireManage();
  if (federationProviderModel == null) {
    throw new NotFoundException("Could not find federation provider");
  }
  try {
    String displayName=rep.getDisplayName();
    if (displayName != null && displayName.trim().equals("")) {
      displayName=null;
    }
    UserFederationProviderModel model=new UserFederationProviderModel(rep.getId(),rep.getProviderName(),rep.getConfig(),rep.getPriority(),displayName,rep.getFullSyncPeriod(),rep.getChangedSyncPeriod(),rep.getLastSync());
    UserFederationProvidersResource.validateFederationProviderConfig(session,auth,realm,model);
    realm.updateUserFederationProvider(model);
    new UsersSyncManager().notifyToRefreshPeriodicSync(session,realm,model,false);
    boolean kerberosCredsAdded=UserFederationProvidersResource.checkKerberosCredential(session,realm,model);
    if (kerberosCredsAdded) {
      ServicesLogger.LOGGER.addedKerberosToRealmCredentials();
    }
    adminEvent.operation(OperationType.UPDATE).resourcePath(uriInfo).representation(rep).success();
    return Response.noContent().build();
  }
 catch (  ModelDuplicateException e) {
    if (session.getTransactionManager().isActive()) {
      session.getTransactionManager().setRollbackOnly();
    }
    return ErrorResponse.exists("Federation provider exists with same name.");
  }
catch (  ModelException me) {
    if (session.getTransactionManager().isActive()) {
      session.getTransactionManager().setRollbackOnly();
    }
    return ErrorResponse.error("Unable to update federation provider.",Response.Status.INTERNAL_SERVER_ERROR);
  }
}
