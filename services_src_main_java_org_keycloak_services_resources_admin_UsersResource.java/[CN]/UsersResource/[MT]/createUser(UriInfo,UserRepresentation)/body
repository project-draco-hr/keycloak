{
  auth.requireManage();
  if (session.users().getUserByUsername(rep.getUsername(),realm) != null) {
    return ErrorResponse.exists("User exists with same username");
  }
  if (rep.getEmail() != null && session.users().getUserByEmail(rep.getEmail(),realm) != null) {
    return ErrorResponse.exists("User exists with same email");
  }
  try {
    UserModel user=session.users().addUser(realm,rep.getUsername());
    updateUserFromRep(user,rep);
    adminEvent.operation(OperationType.CREATE).resourcePath(uriInfo.getAbsolutePathBuilder().path(user.getUsername()).build().toString().substring(uriInfo.getBaseUri().toString().length())).representation(rep).success();
    if (session.getTransaction().isActive()) {
      session.getTransaction().commit();
    }
    return Response.created(uriInfo.getAbsolutePathBuilder().path(user.getUsername()).build()).build();
  }
 catch (  ModelDuplicateException e) {
    if (session.getTransaction().isActive()) {
      session.getTransaction().setRollbackOnly();
    }
    return ErrorResponse.exists("User exists with same username or email");
  }
}
