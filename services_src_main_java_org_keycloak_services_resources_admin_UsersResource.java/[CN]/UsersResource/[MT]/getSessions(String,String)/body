{
  auth.requireView();
  UserModel user=session.users().getUserById(id,realm);
  if (user == null) {
    throw new NotFoundException("User not found");
  }
  ClientModel client=realm.getClientById(clientId);
  if (client == null) {
    throw new NotFoundException("Client not found");
  }
  List<UserSessionModel> sessions=new UserSessionManager(session).findOfflineSessions(realm,client,user);
  List<UserSessionRepresentation> reps=new ArrayList<UserSessionRepresentation>();
  for (  UserSessionModel session : sessions) {
    UserSessionRepresentation rep=ModelToRepresentation.toRepresentation(session);
    for (    ClientSessionModel clientSession : session.getClientSessions()) {
      if (clientId.equals(clientSession.getClient().getId())) {
        rep.setLastAccess(Time.toMillis(clientSession.getTimestamp()));
        break;
      }
    }
    reps.add(rep);
  }
  return reps;
}
