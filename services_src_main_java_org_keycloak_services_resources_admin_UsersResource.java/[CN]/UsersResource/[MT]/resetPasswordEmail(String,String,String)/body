{
  auth.requireManage();
  UserModel user=session.users().getUserById(id,realm);
  if (user == null) {
    return ErrorResponse.error("User not found",Response.Status.NOT_FOUND);
  }
  if (user.getEmail() == null) {
    return ErrorResponse.error("User email missing",Response.Status.BAD_REQUEST);
  }
  ClientSessionModel clientSession=createClientSession(user,redirectUri,clientId);
  ClientSessionCode accessCode=new ClientSessionCode(realm,clientSession);
  accessCode.setAction(ClientSessionModel.Action.RECOVER_PASSWORD.name());
  try {
    UriBuilder builder=Urls.loginPasswordResetBuilder(uriInfo.getBaseUri());
    builder.queryParam("key",accessCode.getCode());
    String link=builder.build(realm.getName()).toString();
    long expiration=TimeUnit.SECONDS.toMinutes(realm.getAccessCodeLifespanUserAction());
    this.session.getProvider(EmailProvider.class).setRealm(realm).setUser(user).sendPasswordReset(link,expiration);
    adminEvent.operation(OperationType.ACTION).resourcePath(uriInfo).success();
    return Response.ok().build();
  }
 catch (  EmailException e) {
    logger.error("Failed to send password reset email",e);
    return ErrorResponse.error("Failed to send email",Response.Status.INTERNAL_SERVER_ERROR);
  }
}
