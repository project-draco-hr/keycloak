{
  auth.requireManage();
  try {
    UserModel user=session.users().getUserByUsername(username,realm);
    if (user == null) {
      throw new NotFoundException("User not found");
    }
    updateUserFromRep(user,rep);
    adminEvent.operation(OperationType.UPDATE).resourcePath(uriInfo).representation(rep).success();
    if (session.getTransaction().isActive()) {
      session.getTransaction().commit();
    }
    return Response.noContent().build();
  }
 catch (  ModelDuplicateException e) {
    return ErrorResponse.exists("User exists with same username or email");
  }
catch (  ModelReadOnlyException re) {
    return ErrorResponse.exists("User is read only!");
  }
}
