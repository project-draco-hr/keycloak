{
  LinkedHashMap<String,SpiInfoRepresentation> spiReps=new LinkedHashMap<>();
  List<Spi> spis=new LinkedList<>(session.getKeycloakSessionFactory().getSpis());
  Collections.sort(spis,new Comparator<Spi>(){
    @Override public int compare(    Spi s1,    Spi s2){
      return s1.getName().compareTo(s2.getName());
    }
  }
);
  for (  Spi spi : spis) {
    SpiInfoRepresentation spiRep=new SpiInfoRepresentation();
    spiRep.setInternal(spi.isInternal());
    List<String> providerIds=new LinkedList<>(session.listProviderIds(spi.getProviderClass()));
    Collections.sort(providerIds);
    Map<String,ProviderRepresentation> providers=new HashMap<>();
    if (providerIds != null) {
      info.setComponentTypes(new HashMap<>());
      for (      String name : providerIds) {
        ProviderRepresentation provider=new ProviderRepresentation();
        ProviderFactory<?> pi=session.getKeycloakSessionFactory().getProviderFactory(spi.getProviderClass(),name);
        if (ServerInfoAwareProviderFactory.class.isAssignableFrom(pi.getClass())) {
          provider.setOperationalInfo(((ServerInfoAwareProviderFactory)pi).getOperationalInfo());
        }
        if (pi instanceof ConfiguredProvider) {
          ComponentTypeRepresentation rep=new ComponentTypeRepresentation();
          rep.setId(pi.getId());
          ConfiguredProvider configured=(ConfiguredProvider)pi;
          rep.setHelpText(configured.getHelpText());
          List<ProviderConfigProperty> configProperties=configured.getConfigProperties();
          if (configProperties == null)           configProperties=Collections.EMPTY_LIST;
          rep.setProperties(ModelToRepresentation.toRepresentation(configProperties));
          List<ComponentTypeRepresentation> reps=info.getComponentTypes().get(spi.getProviderClass().getName());
          if (reps == null) {
            reps=new LinkedList<>();
            info.getComponentTypes().put(spi.getProviderClass().getName(),reps);
          }
          reps.add(rep);
        }
        providers.put(name,provider);
      }
    }
    spiRep.setProviders(providers);
    spiReps.put(spi.getName(),spiRep);
  }
  info.setProviders(spiReps);
}
