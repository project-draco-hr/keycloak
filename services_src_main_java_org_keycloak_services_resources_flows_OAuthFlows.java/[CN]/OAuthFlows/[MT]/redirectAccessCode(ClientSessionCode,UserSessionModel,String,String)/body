{
  String code=accessCode.getCode();
  UriBuilder redirectUri=UriBuilder.fromUri(redirect).queryParam(OAuth2Constants.CODE,code);
  log.debugv("redirectAccessCode: state: {0}",state);
  if (state != null)   redirectUri.queryParam(OAuth2Constants.STATE,state);
  Response.ResponseBuilder location=Response.status(302).location(redirectUri.build());
  Cookie sessionCookie=request.getHttpHeaders().getCookies().get(AuthenticationManager.KEYCLOAK_SESSION_COOKIE);
  if (sessionCookie != null) {
    String[] split=sessionCookie.getValue().split("/");
    if (split.length >= 3) {
      String oldSessionId=split[2];
      if (!oldSessionId.equals(userSession.getId())) {
        UserSessionModel oldSession=session.sessions().getUserSession(realm,oldSessionId);
        if (oldSession != null) {
          log.debugv("Removing old user session: session: {0}",oldSessionId);
          session.sessions().removeUserSession(realm,oldSession);
        }
      }
    }
  }
  authManager.createLoginCookie(realm,userSession.getUser(),userSession,uriInfo,clientConnection);
  if (userSession.isRememberMe())   authManager.createRememberMeCookie(realm,userSession.getUser().getUsername(),uriInfo,clientConnection);
  return location.build();
}
