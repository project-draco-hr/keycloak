{
  List<FormMessage> errors=new ArrayList<>();
  if (!realm.isRegistrationEmailAsUsername() && isBlank(formData.getFirst(FIELD_USERNAME))) {
    addError(errors,FIELD_USERNAME,Messages.MISSING_USERNAME);
  }
  if (isBlank(formData.getFirst(FIELD_FIRST_NAME))) {
    addError(errors,FIELD_FIRST_NAME,Messages.MISSING_FIRST_NAME);
  }
  if (isBlank(formData.getFirst(FIELD_LAST_NAME))) {
    addError(errors,FIELD_LAST_NAME,Messages.MISSING_LAST_NAME);
  }
  if (isBlank(formData.getFirst(FIELD_EMAIL))) {
    addError(errors,FIELD_EMAIL,Messages.MISSING_EMAIL);
  }
 else   if (!isEmailValid(formData.getFirst(FIELD_EMAIL))) {
    addError(errors,FIELD_EMAIL,Messages.INVALID_EMAIL);
  }
  if (requiredCredentialTypes.contains(CredentialRepresentation.PASSWORD)) {
    if (isBlank(formData.getFirst(FIELD_PASSWORD))) {
      addError(errors,FIELD_PASSWORD,Messages.MISSING_PASSWORD);
    }
 else     if (!formData.getFirst(FIELD_PASSWORD).equals(formData.getFirst(FIELD_PASSWORD_CONFIRM))) {
      addError(errors,FIELD_PASSWORD_CONFIRM,Messages.INVALID_PASSWORD_CONFIRM);
    }
  }
  if (formData.getFirst(FIELD_PASSWORD) != null) {
    PasswordPolicy.Error err=policy.validate(realm.isRegistrationEmailAsUsername() ? formData.getFirst(FIELD_EMAIL) : formData.getFirst(FIELD_USERNAME),formData.getFirst(FIELD_PASSWORD));
    if (err != null)     errors.add(new FormMessage(FIELD_PASSWORD,err.getMessage(),err.getParameters()));
  }
  return errors;
}
