{
  UserRepresentation user=new UserRepresentation();
  user.setUsername("bburke");
  user.credential(RequiredCredentialRepresentation.PASSWORD,"geheim",false);
  WebTarget target=client.target(generateURL("/"));
  Response response=target.path("registrations").request().post(Entity.json(user));
  Assert.assertEquals(201,response.getStatus());
  response.close();
  AccessTokenResponse tokenResponse=null;
  try {
    Form form=new Form();
    form.param(AuthenticationManager.FORM_USERNAME,"bburke");
    form.param(RequiredCredentialRepresentation.PASSWORD,"badpassword");
    tokenResponse=target.path("realms").path(RealmModel.DEFAULT_REALM).path("tokens/grants/identity-token").request().post(Entity.form(form),AccessTokenResponse.class);
    Assert.fail();
  }
 catch (  NotAuthorizedException e) {
  }
  Form form=new Form();
  form.param(AuthenticationManager.FORM_USERNAME,"bburke");
  form.param(RequiredCredentialRepresentation.PASSWORD,"geheim");
  tokenResponse=target.path("realms").path(RealmModel.DEFAULT_REALM).path("tokens/grants/identity-token").request().post(Entity.form(form),AccessTokenResponse.class);
  Assert.assertNotNull(tokenResponse);
  System.out.println(tokenResponse.getToken());
  RealmRepresentation realm=KeycloakTestBase.loadJson("testrealm.json");
  response=target.path("realms").request().header(HttpHeaders.AUTHORIZATION,"Bearer " + tokenResponse.getToken()).post(Entity.json(realm));
  Assert.assertEquals(201,response.getStatus());
  response.close();
}
