{
  Person john=new Person();
  john.setFirstName("john");
  john.setAge(25);
  mongoDB.saveObject(john);
  Person mary=new Person();
  mary.setFirstName("mary");
  mary.setKids(Arrays.asList(new String[]{"Peter","Paul","Wendy"}));
  Address addr1=new Address();
  addr1.setStreet("Elm");
  addr1.setNumber(5);
  addr1.setFlatNumbers(Arrays.asList(new String[]{"flat1","flat2"}));
  Address addr2=new Address();
  List<Address> addresses=new ArrayList<Address>();
  addresses.add(addr1);
  addresses.add(addr2);
  mary.setAddresses(addresses);
  mongoDB.saveObject(mary);
  Assert.assertEquals(2,mongoDB.loadObjects(Person.class,mongoDB.createQueryBuilder().build()).size());
  NoSQLQuery query=mongoDB.createQueryBuilder().andCondition("addresses.flatNumbers","flat1").build();
  List<Person> persons=mongoDB.loadObjects(Person.class,query);
  Assert.assertEquals(1,persons.size());
  mary=persons.get(0);
  Assert.assertEquals(mary.getFirstName(),"mary");
  Assert.assertTrue(mary.getKids().contains("Paul"));
  Assert.assertEquals(2,mary.getAddresses().size());
  Assert.assertEquals(Address.class,mary.getAddresses().get(0).getClass());
  mongoDB.pushItemToList(mary,"kids","Pauline");
  mongoDB.pullItemFromList(mary,"kids","Paul");
  Address addr3=new Address();
  addr3.setNumber(6);
  addr3.setStreet("Broadway");
  mongoDB.pushItemToList(mary,"addresses",addr3);
  mary=mongoDB.loadObject(Person.class,mary.getId());
  Assert.assertEquals(3,mary.getKids().size());
  Assert.assertTrue(mary.getKids().contains("Pauline"));
  Assert.assertFalse(mary.getKids().contains("Paul"));
  Assert.assertEquals(3,mary.getAddresses().size());
}
