{
  String code=callback.getQueryParam(DEFAULT_RESPONSE_TYPE);
  try {
    if (!callback.getQueryParam("state").equals(callback.getAttribute("state"))) {
      throw new SocialProviderException("Invalid state");
    }
    JSONObject token=SimpleHttp.doPost(TOKEN_PATH).param("code",code).param("client_id",config.getKey()).param("client_secret",config.getSecret()).param("redirect_uri",config.getCallbackUrl()).param("grant_type","authorization_code").asJson();
    String accessToken=token.getString("access_token");
    JSONObject profile=SimpleHttp.doGet(PROFILE_PATH).header("Authorization","Bearer " + accessToken).asJson();
    SocialUser user=new SocialUser(profile.getString("sub"));
    user.setUsername(profile.getString("email"));
    user.setFirstName(profile.optString("given_name"));
    user.setLastName(profile.optString("family_name"));
    user.setEmail(profile.optString("email"));
    return user;
  }
 catch (  Exception e) {
    throw new SocialProviderException(e);
  }
}
