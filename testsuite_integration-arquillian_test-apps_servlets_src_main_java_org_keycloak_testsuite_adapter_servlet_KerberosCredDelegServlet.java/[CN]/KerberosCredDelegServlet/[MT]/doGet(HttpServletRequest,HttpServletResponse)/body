{
  String ldapData=null;
  if (req.getRequestURI().endsWith(CRED_DELEG_TEST_PATH)) {
    try {
      KeycloakPrincipal keycloakPrincipal=(KeycloakPrincipal)req.getUserPrincipal();
      String serializedGssCredential=(String)keycloakPrincipal.getKeycloakSecurityContext().getToken().getOtherClaims().get(KerberosConstants.GSS_DELEGATION_CREDENTIAL);
      GSSCredential gssCredential=KerberosSerializationUtils.deserializeCredential(serializedGssCredential);
      try {
        invokeLdap(null);
        throw new RuntimeException("Not expected to authenticate to LDAP without credential");
      }
 catch (      NamingException nse) {
        System.out.println("Expected exception: " + nse.getMessage());
      }
      ldapData=invokeLdap(gssCredential);
    }
 catch (    KerberosSerializationUtils.KerberosSerializationException kse) {
      System.err.println("KerberosSerializationUtils.KerberosSerializationException: " + kse.getMessage());
      ldapData="ERROR";
    }
catch (    Exception e) {
      e.printStackTrace();
      resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
  }
  resp.setContentType("text/html");
  PrintWriter pw=resp.getWriter();
  pw.printf("<html><head><title>%s</title></head><body>","Kerberos Test");
  pw.printf("Kerberos servlet secured content<br>");
  if (ldapData != null) {
    pw.printf("LDAP Data: " + ldapData + "<br>");
  }
  pw.print("</body></html>");
  pw.flush();
}
