{
  Set<ContainerInfo> containers=new LinkedHashSet<>();
  for (  Container c : containerRegistry.get().getContainers()) {
    containers.add(new ContainerInfo(c));
  }
  suiteContext=new SuiteContext(containers);
  String authServerFrontend=AUTH_SERVER_CLUSTER ? "auth-server-balancer-wildfly" : AUTH_SERVER_CONTAINER;
  String authServerBackend=AUTH_SERVER_CONTAINER + "-backend";
  int backends=0;
  for (  ContainerInfo container : suiteContext.getContainers()) {
    if (container.getQualifier().equals(authServerFrontend)) {
      updateWithAuthServerInfo(container);
      suiteContext.setAuthServerInfo(container);
    }
    if (AUTH_SERVER_CLUSTER && container.getQualifier().startsWith(authServerBackend)) {
      updateWithAuthServerInfo(container,++backends);
      suiteContext.getAuthServerBackendsInfo().add(container);
    }
  }
  if (suiteContext.getAuthServerInfo() == null) {
    throw new RuntimeException(String.format("No auth server container matching '%s' found in arquillian.xml.",authServerFrontend));
  }
  if (AUTH_SERVER_CLUSTER && suiteContext.getAuthServerBackendsInfo().isEmpty()) {
    throw new RuntimeException(String.format("No auth server container matching '%sN' found in arquillian.xml.",authServerBackend));
  }
  if (MIGRATED_AUTH_SERVER_CONTAINER != null) {
    if (MIGRATED_AUTH_SERVER_CONTAINER.startsWith("migrated-auth-server-")) {
      for (      ContainerInfo container : suiteContext.getContainers()) {
        if (container.getQualifier().equals(MIGRATED_AUTH_SERVER_CONTAINER)) {
          updateWithAuthServerInfo(container);
          suiteContext.setMigratedAuthServerInfo(container);
        }
      }
    }
 else {
      throw new IllegalArgumentException(String.format("Value of %s should start with 'migrated-auth-server-' prefix.",MIGRATED_AUTH_SERVER_CONTAINER_PROPERTY));
    }
    if (suiteContext.getMigratedAuthServerInfo() == null) {
      throw new RuntimeException(String.format("Migration test was enabled but no auth server from which to migrate was activated. " + "A container matching '%s' needs to be enabled in arquillian.xml.",MIGRATED_AUTH_SERVER_CONTAINER));
    }
  }
  suiteContextProducer.set(suiteContext);
  log.info("\n\n" + suiteContext);
}
