{
  try {
    Document webXmlDoc=loadXML(archive.get(WEBXML_PATH).getAsset().openStream());
    if (isTomcatAppServer(testClass.getJavaClass())) {
      modifyDocElementValue(webXmlDoc,"auth-method","KEYCLOAK","BASIC");
    }
    if (testClass.getJavaClass().isAnnotationPresent(UseServletFilter.class)) {
      log.info("Adding filter to " + testClass.getAnnotation(UseServletFilter.class).filterClass() + " with mapping "+ testClass.getAnnotation(UseServletFilter.class).filterPattern()+ " for "+ archive.getName());
      Element filter=webXmlDoc.createElement("filter");
      Element filterName=webXmlDoc.createElement("filter-name");
      Element filterClass=webXmlDoc.createElement("filter-class");
      filterName.setTextContent(testClass.getAnnotation(UseServletFilter.class).filterName());
      filterClass.setTextContent(testClass.getAnnotation(UseServletFilter.class).filterClass());
      filter.appendChild(filterName);
      filter.appendChild(filterClass);
      appendChildInDocument(webXmlDoc,"web-app",filter);
      Element filterMapping=webXmlDoc.createElement("filter-mapping");
      Element urlPattern=webXmlDoc.createElement("url-pattern");
      filterName=webXmlDoc.createElement("filter-name");
      filterName.setTextContent(testClass.getAnnotation(UseServletFilter.class).filterName());
      urlPattern.setTextContent(getElementTextContent(webXmlDoc,"web-app/security-constraint/web-resource-collection/url-pattern"));
      filterMapping.appendChild(filterName);
      filterMapping.appendChild(urlPattern);
      if (!testClass.getAnnotation(UseServletFilter.class).dispatcherType().isEmpty()) {
        Element dispatcher=webXmlDoc.createElement("dispatcher");
        dispatcher.setTextContent(testClass.getAnnotation(UseServletFilter.class).dispatcherType());
        filterMapping.appendChild(dispatcher);
      }
      appendChildInDocument(webXmlDoc,"web-app",filterMapping);
      removeElementFromDoc(webXmlDoc,"web-app","security-constraint");
      removeElementFromDoc(webXmlDoc,"web-app","login-config");
      removeElementFromDoc(webXmlDoc,"web-app","security-role");
    }
    archive.add(new StringAsset((documentToString(webXmlDoc))),WEBXML_PATH);
  }
 catch (  TransformerException e) {
    log.error("Can't transform document to String");
    throw new RuntimeException(e);
  }
}
