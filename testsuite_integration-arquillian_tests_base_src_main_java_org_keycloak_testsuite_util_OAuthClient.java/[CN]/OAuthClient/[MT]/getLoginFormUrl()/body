{
  UriBuilder b=OIDCLoginProtocolService.authUrl(UriBuilder.fromUri(AUTH_SERVER_ROOT));
  if (responseType != null) {
    b.queryParam(OAuth2Constants.RESPONSE_TYPE,responseType);
  }
  if (responseMode != null) {
    b.queryParam(OIDCLoginProtocol.RESPONSE_MODE_PARAM,responseMode);
  }
  if (clientId != null) {
    b.queryParam(OAuth2Constants.CLIENT_ID,clientId);
  }
  if (redirectUri != null) {
    b.queryParam(OAuth2Constants.REDIRECT_URI,redirectUri);
  }
  if (state != null) {
    b.queryParam(OAuth2Constants.STATE,state);
  }
  if (uiLocales != null) {
    b.queryParam(OAuth2Constants.UI_LOCALES_PARAM,uiLocales);
  }
  if (nonce != null) {
    b.queryParam(OIDCLoginProtocol.NONCE_PARAM,nonce);
  }
  String scopeParam=TokenUtil.attachOIDCScope(scope);
  b.queryParam(OAuth2Constants.SCOPE,scopeParam);
  if (maxAge != null) {
    b.queryParam(OIDCLoginProtocol.MAX_AGE_PARAM,maxAge);
  }
  if (request != null) {
    b.queryParam(OIDCLoginProtocol.REQUEST_PARAM,request);
  }
  if (requestUri != null) {
    b.queryParam(OIDCLoginProtocol.REQUEST_URI_PARAM,requestUri);
  }
  return b.build(realm).toString();
}
