{
  setPasswordPolicy("passwordHistory(2)");
  changePasswordPage.open();
  loginPage.login("test-user@localhost","password");
  events.expectLogin().client("account").detail(Details.REDIRECT_URI,ACCOUNT_REDIRECT + "?path=password").assertEvent();
  changePasswordPage.changePassword("password","password","password");
  Assert.assertEquals("Invalid password: must not be equal to any of last 2 passwords.",profilePage.getError());
  events.expectAccount(EventType.UPDATE_PASSWORD_ERROR).error(Errors.PASSWORD_REJECTED).assertEvent();
  changePasswordPage.changePassword("password","password1","password1");
  Assert.assertEquals("Your password has been updated.",profilePage.getSuccess());
  events.expectAccount(EventType.UPDATE_PASSWORD).assertEvent();
  changePasswordPage.changePassword("password1","password","password");
  Assert.assertEquals("Invalid password: must not be equal to any of last 2 passwords.",profilePage.getError());
  events.expectAccount(EventType.UPDATE_PASSWORD_ERROR).error(Errors.PASSWORD_REJECTED).assertEvent();
  changePasswordPage.changePassword("password1","password1","password1");
  Assert.assertEquals("Invalid password: must not be equal to any of last 2 passwords.",profilePage.getError());
  events.expectAccount(EventType.UPDATE_PASSWORD_ERROR).error(Errors.PASSWORD_REJECTED).assertEvent();
  changePasswordPage.changePassword("password1","password2","password2");
  Assert.assertEquals("Your password has been updated.",profilePage.getSuccess());
  events.expectAccount(EventType.UPDATE_PASSWORD).assertEvent();
}
