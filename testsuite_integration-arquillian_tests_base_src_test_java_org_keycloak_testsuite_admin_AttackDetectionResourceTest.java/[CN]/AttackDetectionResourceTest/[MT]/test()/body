{
  AttackDetectionResource detection=adminClient.realm("test").attackDetection();
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user@localhost").getId()),0,false,false);
  oauthClient.doLogin("test-user@localhost","invalid");
  oauthClient.doLogin("test-user@localhost","invalid");
  oauthClient.doLogin("test-user@localhost","invalid");
  oauthClient.doLogin("test-user2","invalid");
  oauthClient.doLogin("test-user2","invalid");
  oauthClient.doLogin("nosuchuser","invalid");
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user@localhost").getId()),3,true,true);
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user2").getId()),2,true,true);
  assertBruteForce(detection.bruteForceUserStatus("nosuchuser"),0,false,false);
  detection.clearBruteForceForUser(findUser("test-user@localhost").getId());
  assertAdminEvents.assertEvent("test",OperationType.DELETE,AdminEventPaths.attackDetectionClearBruteForceForUserPath(findUser("test-user@localhost").getId()),ResourceType.USER);
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user@localhost").getId()),0,false,false);
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user2").getId()),2,true,true);
  detection.clearAllBruteForce();
  assertAdminEvents.assertEvent("test",OperationType.DELETE,AdminEventPaths.attackDetectionClearAllBruteForcePath(),ResourceType.USER);
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user@localhost").getId()),0,false,false);
  assertBruteForce(detection.bruteForceUserStatus(findUser("test-user2").getId()),0,false,false);
}
