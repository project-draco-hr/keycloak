{
  Object entBody=new SAMLEntityDescriptorParser().parse(StaxParserUtil.getXMLEventReader(new ByteArrayInputStream(body.getBytes(Charset.forName("utf-8")))));
  Assert.assertEquals("Parsed export type",EntityDescriptorType.class,entBody.getClass());
  EntityDescriptorType entity=(EntityDescriptorType)entBody;
  Assert.assertEquals("EntityID","http://localhost:8180/auth/realms/admin-client-test",entity.getEntityID());
  Assert.assertNotNull("ChoiceType not null",entity.getChoiceType());
  Assert.assertEquals("ChoiceType.size",1,entity.getChoiceType().size());
  List<EntityDescriptorType.EDTDescriptorChoiceType> descriptors=entity.getChoiceType().get(0).getDescriptors();
  Assert.assertNotNull("Descriptors not null",descriptors);
  Assert.assertEquals("Descriptors.size",1,descriptors.size());
  SPSSODescriptorType desc=descriptors.get(0).getSpDescriptor();
  Assert.assertNotNull("SPSSODescriptor not null",desc);
  Assert.assertTrue("AuthnRequestsSigned",desc.isAuthnRequestsSigned());
  Set<String> expected=new HashSet(Arrays.asList("urn:oasis:names:tc:SAML:2.0:protocol","urn:oasis:names:tc:SAML:1.1:protocol","http://schemas.xmlsoap.org/ws/2003/07/secext"));
  Set<String> actual=new HashSet(desc.getProtocolSupportEnumeration());
  Assert.assertEquals("ProtocolSupportEnumeration",expected,actual);
  Assert.assertNotNull("AssertionConsumerService not null",desc.getAssertionConsumerService());
  Assert.assertEquals("AssertionConsumerService.size",1,desc.getAssertionConsumerService().size());
  IndexedEndpointType endpoint=desc.getAssertionConsumerService().get(0);
  Assert.assertEquals("AssertionConsumerService.Location",new URI("http://localhost:8180/auth/realms/admin-client-test/broker/saml/endpoint"),endpoint.getLocation());
  Assert.assertEquals("AssertionConsumerService.Binding",new URI("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"),endpoint.getBinding());
  Assert.assertTrue("AssertionConsumerService.isDefault",endpoint.isIsDefault());
  Assert.assertNotNull("SingleLogoutService not null",desc.getSingleLogoutService());
  Assert.assertEquals("SingleLogoutService.size",1,desc.getSingleLogoutService().size());
  EndpointType sloEndpoint=desc.getSingleLogoutService().get(0);
  Assert.assertEquals("SingleLogoutService.Location",new URI("http://localhost:8180/auth/realms/admin-client-test/broker/saml/endpoint"),sloEndpoint.getLocation());
  Assert.assertEquals("SingleLogoutService.Binding",new URI("urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"),sloEndpoint.getBinding());
  Assert.assertNotNull("KeyDescriptor not null",desc.getKeyDescriptor());
  Assert.assertEquals("KeyDescriptor.size",1,desc.getKeyDescriptor().size());
  Assert.assertEquals("KeyDescriptor.Use",KeyTypes.SIGNING,desc.getKeyDescriptor().get(0).getUse());
}
