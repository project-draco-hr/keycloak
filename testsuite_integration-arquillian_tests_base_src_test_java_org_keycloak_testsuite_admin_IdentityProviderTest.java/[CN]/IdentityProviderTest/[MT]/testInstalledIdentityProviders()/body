{
  Response response=realm.identityProviders().getIdentityProviders("oidc");
  Assert.assertEquals("Status",200,response.getStatus());
  Map<String,String> body=response.readEntity(Map.class);
  assertProviderInfo(body,"oidc","OpenID Connect v1.0");
  response=realm.identityProviders().getIdentityProviders("keycloak-oidc");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"keycloak-oidc","Keycloak OpenID Connect");
  response=realm.identityProviders().getIdentityProviders("saml");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"saml","SAML v2.0");
  response=realm.identityProviders().getIdentityProviders("google");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"google","Google");
  response=realm.identityProviders().getIdentityProviders("facebook");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"facebook","Facebook");
  response=realm.identityProviders().getIdentityProviders("github");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"github","GitHub");
  response=realm.identityProviders().getIdentityProviders("twitter");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"twitter","Twitter");
  response=realm.identityProviders().getIdentityProviders("linkedin");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"linkedin","LinkedIn");
  response=realm.identityProviders().getIdentityProviders("microsoft");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"microsoft","Microsoft");
  response=realm.identityProviders().getIdentityProviders("stackoverflow");
  Assert.assertEquals("Status",200,response.getStatus());
  body=response.readEntity(Map.class);
  assertProviderInfo(body,"stackoverflow","StackOverflow");
  response=realm.identityProviders().getIdentityProviders("nonexistent");
  Assert.assertEquals("Status",400,response.getStatus());
}
