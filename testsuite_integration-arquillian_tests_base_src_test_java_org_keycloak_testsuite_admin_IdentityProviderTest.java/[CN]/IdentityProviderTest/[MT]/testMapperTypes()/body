{
  IdentityProviderResource provider;
  Map<String,IdentityProviderMapperTypeRepresentation> mapperTypes;
  create(createRep("google","google"));
  provider=realm.identityProviders().get("google");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"google-user-attribute-mapper");
  create(createRep("facebook","facebook"));
  provider=realm.identityProviders().get("facebook");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"facebook-user-attribute-mapper");
  create(createRep("github","github"));
  provider=realm.identityProviders().get("github");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"github-user-attribute-mapper");
  create(createRep("twitter","twitter"));
  provider=realm.identityProviders().get("twitter");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes);
  create(createRep("linkedin","linkedin"));
  provider=realm.identityProviders().get("linkedin");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"linkedin-user-attribute-mapper");
  create(createRep("microsoft","microsoft"));
  provider=realm.identityProviders().get("microsoft");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"microsoft-user-attribute-mapper");
  create(createRep("stackoverflow","stackoverflow"));
  provider=realm.identityProviders().get("stackoverflow");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"stackoverflow-user-attribute-mapper");
  create(createRep("keycloak-oidc","keycloak-oidc"));
  provider=realm.identityProviders().get("keycloak-oidc");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"keycloak-oidc-role-to-role-idp-mapper","oidc-user-attribute-idp-mapper","oidc-role-idp-mapper","oidc-username-idp-mapper");
  create(createRep("oidc","oidc"));
  provider=realm.identityProviders().get("oidc");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"oidc-user-attribute-idp-mapper","oidc-role-idp-mapper","oidc-username-idp-mapper");
  create(createRep("saml","saml"));
  provider=realm.identityProviders().get("saml");
  mapperTypes=provider.getMapperTypes();
  assertMapperTypes(mapperTypes,"saml-user-attribute-idp-mapper","saml-role-idp-mapper","saml-username-idp-mapper");
}
