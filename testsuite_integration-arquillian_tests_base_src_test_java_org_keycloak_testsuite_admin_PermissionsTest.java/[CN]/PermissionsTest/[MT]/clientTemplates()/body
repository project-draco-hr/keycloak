{
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().findAll();
    }
  }
,Resource.CLIENT,false);
  invoke(new InvocationWithResponse(){
    public void invoke(    RealmResource realm,    AtomicReference<Response> response){
      response.set(realm.clientTemplates().create(new ClientTemplateRepresentation()));
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").toRepresentation();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").update(new ClientTemplateRepresentation());
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").remove();
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().getMappers();
    }
  }
,Resource.CLIENT,false,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().getMappersPerProtocol("nosuch");
    }
  }
,Resource.CLIENT,false,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().getMapperById("nosuch");
    }
  }
,Resource.CLIENT,false,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().update("nosuch",new ProtocolMapperRepresentation());
    }
  }
,Resource.CLIENT,true);
  invoke(new InvocationWithResponse(){
    public void invoke(    RealmResource realm,    AtomicReference<Response> response){
      response.set(realm.clientTemplates().get("nosuch").getProtocolMappers().createMapper(new ProtocolMapperRepresentation()));
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().createMapper(Collections.<ProtocolMapperRepresentation>emptyList());
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getProtocolMappers().delete("nosuch");
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().getAll();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().realmLevel().listAll();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().realmLevel().listAvailable();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().realmLevel().listEffective();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().realmLevel().add(Collections.<RoleRepresentation>emptyList());
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().realmLevel().remove(Collections.<RoleRepresentation>emptyList());
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().clientLevel("nosuch").listAll();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().clientLevel("nosuch").listAvailable();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().clientLevel("nosuch").listEffective();
    }
  }
,Resource.CLIENT,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().clientLevel("nosuch").add(Collections.<RoleRepresentation>emptyList());
    }
  }
,Resource.CLIENT,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.clientTemplates().get("nosuch").getScopeMappings().clientLevel("nosuch").remove(Collections.<RoleRepresentation>emptyList());
    }
  }
,Resource.CLIENT,true);
}
