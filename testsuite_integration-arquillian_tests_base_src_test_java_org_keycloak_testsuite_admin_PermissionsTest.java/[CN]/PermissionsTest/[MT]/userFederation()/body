{
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().getProviderInstances();
    }
  }
,Resource.REALM,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().getProviderFactories();
    }
  }
,Resource.REALM,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().getProviderFactory("nosuch");
    }
  }
,Resource.REALM,false);
  invoke(new InvocationWithResponse(){
    public void invoke(    RealmResource realm,    AtomicReference<Response> response){
      UserFederationProviderRepresentation rep=new UserFederationProviderRepresentation();
      rep.setProviderName("ldap");
      response.set(realm.userFederation().create(rep));
    }
  }
,Resource.REALM,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").toRepresentation();
    }
  }
,Resource.REALM,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").update(new UserFederationProviderRepresentation());
    }
  }
,Resource.REALM,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").remove();
    }
  }
,Resource.REALM,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").syncUsers("nosuch");
    }
  }
,Resource.REALM,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").getMapperTypes();
    }
  }
,Resource.REALM,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").getMappers();
    }
  }
,Resource.REALM,false);
  invoke(new InvocationWithResponse(){
    public void invoke(    RealmResource realm,    AtomicReference<Response> response){
      response.set(realm.userFederation().get("nosuch").addMapper(new UserFederationMapperRepresentation()));
    }
  }
,Resource.REALM,true);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").getMapperById("nosuch");
    }
  }
,Resource.REALM,false);
  invoke(new Invocation(){
    public void invoke(    RealmResource realm){
      realm.userFederation().get("nosuch").syncMapperData("nosuch","nosuch");
    }
  }
,Resource.REALM,true);
}
