{
  UserFederationProviderRepresentation dummyRep1=UserFederationProviderBuilder.create().providerName("dummy").build();
  String id1=createUserFederationProvider(dummyRep1);
  try {
    userFederation().get(id1).syncUsers("unknown");
    Assert.fail("Not expected to sync with unknown action");
  }
 catch (  NotFoundException nfe) {
  }
  Assert.assertEquals(-1,userFederation().get(id1).toRepresentation().getLastSync());
  UserFederationSyncResultRepresentation syncResult=userFederation().get(id1).syncUsers("triggerFullSync");
  Assert.assertEquals("0 imported users, 0 updated users",syncResult.getStatus());
  Map<String,Object> eventRep=new HashMap<>();
  eventRep.put("action","triggerFullSync");
  assertAdminEvents.assertEvent(realmId,OperationType.ACTION,AdminEventPaths.userFederationResourcePath(id1) + "/sync",eventRep);
  int fullSyncTime=userFederation().get(id1).toRepresentation().getLastSync();
  Assert.assertTrue(fullSyncTime > 0);
  setTimeOffset(50);
  syncResult=userFederation().get(id1).syncUsers("triggerChangedUsersSync");
  eventRep.put("action","triggerChangedUsersSync");
  assertAdminEvents.assertEvent(realmId,OperationType.ACTION,AdminEventPaths.userFederationResourcePath(id1) + "/sync",eventRep);
  Assert.assertEquals("0 imported users, 0 updated users",syncResult.getStatus());
  int changedSyncTime=userFederation().get(id1).toRepresentation().getLastSync();
  Assert.assertTrue(fullSyncTime + 50 <= changedSyncTime);
  resetTimeOffset();
  removeUserFederationProvider(id1);
}
