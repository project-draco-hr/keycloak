{
  UserFederationProviderRepresentation ldapRep=UserFederationProviderBuilder.create().providerName("ldap").priority(2).configProperty(LDAPConstants.BIND_DN,"cn=manager").configProperty(LDAPConstants.BIND_CREDENTIAL,"password").build();
  String id=createUserFederationProvider(ldapRep);
  assertFederationProvider(userFederation().get(id).toRepresentation(),id,id,"ldap",2,-1,-1,-1,LDAPConstants.BIND_DN,"cn=manager",LDAPConstants.BIND_CREDENTIAL,"password");
  ldapRep=userFederation().get(id).toRepresentation();
  ldapRep.setDisplayName("");
  ldapRep.getConfig().put(LDAPConstants.CUSTOM_USER_SEARCH_FILTER,"(dc=something2");
  ldapRep.getConfig().put(LDAPConstants.BIND_DN,"cn=manager-updated");
  try {
    userFederation().get(id).update(ldapRep);
    Assert.fail("Not expected to successfull update");
  }
 catch (  BadRequestException bre) {
  }
  assertFederationProvider(userFederation().get(id).toRepresentation(),id,id,"ldap",2,-1,-1,-1,LDAPConstants.BIND_DN,"cn=manager",LDAPConstants.BIND_CREDENTIAL,"password");
  ldapRep.getConfig().put(LDAPConstants.CUSTOM_USER_SEARCH_FILTER,"(dc=something2)");
  userFederation().get(id).update(ldapRep);
  assertAdminEvents.assertEvent(realmId,OperationType.UPDATE,AdminEventPaths.userFederationResourcePath(id),ldapRep,ResourceType.USER_FEDERATION_PROVIDER);
  ldapRep=userFederation().get(id).toRepresentation();
  assertFederationProvider(ldapRep,id,id,"ldap",2,-1,-1,-1,LDAPConstants.BIND_DN,"cn=manager-updated",LDAPConstants.BIND_CREDENTIAL,"password",LDAPConstants.CUSTOM_USER_SEARCH_FILTER,"(dc=something2)");
  ldapRep.setDisplayName("ldap2");
  userFederation().get(id).update(ldapRep);
  assertAdminEvents.assertEvent(realmId,OperationType.UPDATE,AdminEventPaths.userFederationResourcePath(id),ldapRep,ResourceType.USER_FEDERATION_PROVIDER);
  assertFederationProvider(userFederation().get(id).toRepresentation(),id,"ldap2","ldap",2,-1,-1,-1,LDAPConstants.BIND_DN,"cn=manager-updated",LDAPConstants.BIND_CREDENTIAL,"password",LDAPConstants.CUSTOM_USER_SEARCH_FILTER,"(dc=something2)");
  removeUserFederationProvider(id);
}
