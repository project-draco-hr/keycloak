{
  AuthenticationFlowRepresentation clientFlow=newFlow("new-client-flow","desc",AuthenticationFlow.CLIENT_FLOW,true,false);
  createFlow(clientFlow);
  Map<String,String> executionData=new HashMap<>();
  executionData.put("provider",ClientIdAndSecretAuthenticator.PROVIDER_ID);
  authMgmtResource.addExecution("new-client-flow",executionData);
  assertAdminEvents.assertEvent(REALM_NAME,OperationType.CREATE,AdminEventPaths.authAddExecutionPath("new-client-flow"),executionData,ResourceType.AUTH_EXECUTION);
  try {
    authMgmtResource.getExecutions("not-existent");
    Assert.fail("Not expected to find executions");
  }
 catch (  NotFoundException nfe) {
  }
  List<AuthenticationExecutionInfoRepresentation> executions=authMgmtResource.getExecutions("new-client-flow");
  AuthenticationExecutionInfoRepresentation executionRep=findExecutionByProvider(ClientIdAndSecretAuthenticator.PROVIDER_ID,executions);
  Assert.assertNotNull(executionRep);
  try {
    authMgmtResource.updateExecutions("not-existent",executionRep);
    Assert.fail("Not expected to update execution with not-existent flow");
  }
 catch (  NotFoundException nfe) {
  }
  try {
    AuthenticationExecutionInfoRepresentation executionRep2=new AuthenticationExecutionInfoRepresentation();
    executionRep2.setId("not-existent");
    authMgmtResource.updateExecutions("new-client-flow",executionRep2);
    Assert.fail("Not expected to update not-existent execution");
  }
 catch (  NotFoundException nfe) {
  }
  executionRep.setRequirement(ALTERNATIVE);
  authMgmtResource.updateExecutions("new-client-flow",executionRep);
  assertAdminEvents.assertEvent(REALM_NAME,OperationType.UPDATE,AdminEventPaths.authUpdateExecutionPath("new-client-flow"),executionRep,ResourceType.AUTH_EXECUTION);
  executionRep=findExecutionByProvider(ClientIdAndSecretAuthenticator.PROVIDER_ID,authMgmtResource.getExecutions("new-client-flow"));
  Assert.assertEquals(ALTERNATIVE,executionRep.getRequirement());
  try {
    authMgmtResource.removeExecution("not-existent");
    Assert.fail("Didn't expect to find execution");
  }
 catch (  NotFoundException nfe) {
  }
  authMgmtResource.removeExecution(executionRep.getId());
  assertAdminEvents.assertEvent(REALM_NAME,OperationType.DELETE,AdminEventPaths.authExecutionPath(executionRep.getId()),ResourceType.AUTH_EXECUTION);
  AuthenticationFlowRepresentation rep=findFlowByAlias("new-client-flow",authMgmtResource.getFlows());
  authMgmtResource.deleteFlow(rep.getId());
  assertAdminEvents.assertEvent(REALM_NAME,OperationType.DELETE,AdminEventPaths.authFlowPath(rep.getId()),ResourceType.AUTH_FLOW);
}
