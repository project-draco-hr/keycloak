{
  try {
    authMgmtResource.getAuthenticatorConfigDescription("not-existent");
    Assert.fail("Don't expected to find provider 'not-existent'");
  }
 catch (  NotFoundException nfe) {
  }
  AuthenticatorConfigInfoRepresentation infoRep=authMgmtResource.getAuthenticatorConfigDescription(IdpCreateUserIfUniqueAuthenticatorFactory.PROVIDER_ID);
  Assert.assertEquals("Create User If Unique",infoRep.getName());
  Assert.assertEquals(IdpCreateUserIfUniqueAuthenticatorFactory.PROVIDER_ID,infoRep.getProviderId());
  Assert.assertEquals("Detect if there is existing Keycloak account with same email like identity provider. If no, create new user",infoRep.getHelpText());
  Assert.assertEquals(1,infoRep.getProperties().size());
  Assert.assertProviderConfigProperty(infoRep.getProperties().get(0),"require.password.update.after.registration","Require Password Update After Registration",null,"If this option is true and new user is successfully imported from Identity Provider to Keycloak (there is no duplicated email or username detected in Keycloak DB), then this user is required to update his password","boolean");
}
