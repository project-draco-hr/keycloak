{
  HashMap<String,String> params=new HashMap<>();
  params.put("newName","Copy of browser");
  Response response=authMgmtResource.copy("browser",params);
  try {
    Assert.assertEquals("Copy flow",201,response.getStatus());
  }
  finally {
    response.close();
  }
  List<AuthenticationExecutionInfoRepresentation> executions=authMgmtResource.getExecutions("Copy of browser");
  AuthenticationExecutionInfoRepresentation last=executions.get(executions.size() - 1);
  AuthenticationExecutionInfoRepresentation oneButLast=executions.get(executions.size() - 2);
  authMgmtResource.raisePriority(last.getId());
  List<AuthenticationExecutionInfoRepresentation> executions2=authMgmtResource.getExecutions("Copy of browser");
  AuthenticationExecutionInfoRepresentation last2=executions2.get(executions.size() - 1);
  AuthenticationExecutionInfoRepresentation oneButLast2=executions2.get(executions.size() - 2);
  Assert.assertEquals("Execution shifted up - N",last.getId(),oneButLast2.getId());
  Assert.assertEquals("Execution shifted up - N-1",oneButLast.getId(),last2.getId());
  authMgmtResource.lowerPriority(oneButLast2.getId());
  executions2=authMgmtResource.getExecutions("Copy of browser");
  last2=executions2.get(executions.size() - 1);
  oneButLast2=executions2.get(executions.size() - 2);
  Assert.assertEquals("Execution shifted down - N",last.getId(),last2.getId());
  Assert.assertEquals("Execution shifted down - N-1",oneButLast.getId(),oneButLast2.getId());
}
