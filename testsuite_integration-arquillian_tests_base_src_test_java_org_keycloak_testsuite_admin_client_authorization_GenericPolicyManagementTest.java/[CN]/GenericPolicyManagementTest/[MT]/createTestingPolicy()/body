{
  Map<String,String> config=new HashMap<>();
  config.put("configA","configuration for A");
  config.put("configB","configuration for B");
  config.put("configC","configuration for C");
  config.put("applyPolicies",buildConfigOption(createPolicy("Test Associated A",new HashMap<>()).toRepresentation().getId(),createPolicy("Test Associated B",new HashMap<>()).toRepresentation().getId(),createPolicy("Test Associated C",new HashMap<>()).toRepresentation().getId()));
  config.put("resources",buildConfigOption(createResource("Test Resource A").toRepresentation().getId(),createResource("Test Resource B").toRepresentation().getId(),createResource("Test Resource C").toRepresentation().getId()));
  config.put("scopes",buildConfigOption(createScope("Test Scope A").toRepresentation().getId(),createScope("Test Scope B").toRepresentation().getId(),createScope("Test Scope C").toRepresentation().getId()));
  return createPolicy("Test Generic Policy",config);
}
