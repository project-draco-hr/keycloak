{
  RealmResource realm=adminClient.realms().realm("test");
{
    UserRepresentation user=realm.users().search("topGroupUser",-1,-1).get(0);
    AccessToken token=login(user.getUsername(),"test-app","password",user.getId());
    Assert.assertTrue(token.getRealmAccess().getRoles().contains("user"));
    List<String> groups=(List<String>)token.getOtherClaims().get("groups");
    Assert.assertNotNull(groups);
    Assert.assertTrue(groups.size() == 1);
    Assert.assertEquals("topGroup",groups.get(0));
    Assert.assertEquals("true",token.getOtherClaims().get("topAttribute"));
  }
{
    UserRepresentation user=realm.users().search("level2GroupUser",-1,-1).get(0);
    AccessToken token=login(user.getUsername(),"test-app","password",user.getId());
    Assert.assertTrue(token.getRealmAccess().getRoles().contains("user"));
    Assert.assertTrue(token.getRealmAccess().getRoles().contains("admin"));
    Assert.assertTrue(token.getResourceAccess("test-app").getRoles().contains("customer-user"));
    List<String> groups=(List<String>)token.getOtherClaims().get("groups");
    Assert.assertNotNull(groups);
    Assert.assertTrue(groups.size() == 1);
    Assert.assertEquals("level2group",groups.get(0));
    Assert.assertEquals("true",token.getOtherClaims().get("topAttribute"));
    Assert.assertEquals("true",token.getOtherClaims().get("level2Attribute"));
  }
}
