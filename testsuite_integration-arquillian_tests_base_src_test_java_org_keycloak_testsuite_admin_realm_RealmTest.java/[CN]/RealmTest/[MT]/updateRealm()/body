{
  RealmRepresentation rep=realm.toRepresentation();
  rep.setSsoSessionIdleTimeout(123);
  rep.setSsoSessionMaxLifespan(12);
  rep.setAccessCodeLifespanLogin(1234);
  rep.setRegistrationAllowed(true);
  rep.setRegistrationEmailAsUsername(true);
  rep.setEditUsernameAllowed(true);
  realm.update(rep);
  assertAdminEvents.assertEvent(realmId,OperationType.UPDATE,Matchers.nullValue(String.class),rep,ResourceType.REALM);
  rep=realm.toRepresentation();
  assertEquals(123,rep.getSsoSessionIdleTimeout().intValue());
  assertEquals(12,rep.getSsoSessionMaxLifespan().intValue());
  assertEquals(1234,rep.getAccessCodeLifespanLogin().intValue());
  assertEquals(Boolean.TRUE,rep.isRegistrationAllowed());
  assertEquals(Boolean.TRUE,rep.isRegistrationEmailAsUsername());
  assertEquals(Boolean.TRUE,rep.isEditUsernameAllowed());
  rep.setRegistrationAllowed(false);
  rep.setRegistrationEmailAsUsername(false);
  rep.setEditUsernameAllowed(false);
  realm.update(rep);
  assertAdminEvents.assertEvent(realmId,OperationType.UPDATE,Matchers.nullValue(String.class),rep,ResourceType.REALM);
  rep=realm.toRepresentation();
  assertEquals(Boolean.FALSE,rep.isRegistrationAllowed());
  assertEquals(Boolean.FALSE,rep.isRegistrationEmailAsUsername());
  assertEquals(Boolean.FALSE,rep.isEditUsernameAllowed());
}
