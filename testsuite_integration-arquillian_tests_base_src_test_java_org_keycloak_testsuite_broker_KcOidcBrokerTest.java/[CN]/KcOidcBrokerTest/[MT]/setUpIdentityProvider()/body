{
  IdentityProviderRepresentation idp=createIdentityProvider(IDP_ALIAS,IDP_PROVIDER_ID);
  Map<String,String> config=idp.getConfig();
  config.put("clientId",CLIENT_ID);
  config.put("clientSecret",CLIENT_SECRET);
  config.put("prompt","login");
  config.put("authorizationUrl",getAuthRoot() + "/auth/realms/" + REALM_PROV_NAME+ "/protocol/openid-connect/auth");
  config.put("tokenUrl",getAuthRoot() + "/auth/realms/" + REALM_PROV_NAME+ "/protocol/openid-connect/token");
  config.put("logoutUrl",getAuthRoot() + "/auth/realms/" + REALM_PROV_NAME+ "/protocol/openid-connect/logout");
  config.put("userInfoUrl",getAuthRoot() + "/auth/realms/" + REALM_PROV_NAME+ "/protocol/openid-connect/userinfo");
  config.put("defaultScope","email profile");
  config.put("backchannelSupported","true");
  return idp;
}
