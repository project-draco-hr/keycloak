{
  KcRegExec exe=execute("--help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Keycloak Client Registration CLI",exe.stdoutLines().get(0));
  exe=execute("create --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " create [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("get --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " get CLIENT [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("update --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " update CLIENT [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("delete --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " delete CLIENT [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("attrs --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " attrs [ATTRIBUTE] [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("update-token --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " update-token CLIENT [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("config --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + OsUtil.CMD + " config SUB_COMMAND [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("config credentials --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " config credentials --server SERVER_URL --realm REALM [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("config initial-token --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " config initial-token --server SERVER --realm REALM [--delete | TOKEN] [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("config registration-token --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " config registration-token --server SERVER --realm REALM --client CLIENT [--delete | TOKEN] [ARGUMENTS]",exe.stdoutLines().get(0));
  exe=execute("config truststore --help");
  Assert.assertEquals("exit code",0,exe.exitCode());
  Assert.assertEquals("no stderr",0,exe.stderrLines().size());
  Assert.assertEquals("stdout first line","Usage: " + CMD + " config truststore [TRUSTSTORE | --delete] [--trustpass PASSWOD] [ARGUMENTS]",exe.stdoutLines().get(0));
}
