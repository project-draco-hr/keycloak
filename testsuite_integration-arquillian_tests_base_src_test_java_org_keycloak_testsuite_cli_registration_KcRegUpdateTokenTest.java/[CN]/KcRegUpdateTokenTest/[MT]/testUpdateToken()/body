{
  FileConfigHandler handler=initCustomConfigFile();
  ConfigUtil.setHandler(handler);
  try (TempFileResource configFile=new TempFileResource(handler.getConfigFile())){
    KcRegExec exe=execute("config credentials --config '" + configFile.getName() + "' --server "+ serverUrl+ " --realm master --user admin --password admin");
    assertExitCodeAndStreamSizes(exe,0,0,1);
    ConfigData data=ConfigUtil.loadConfig();
    RealmConfigData rdata=data.getRealmConfigData(serverUrl,"test");
    Assert.assertNull("realm info set",rdata);
    exe=execute("update-token --config '" + configFile.getName() + "' reg-cli-secret-direct  --server "+ serverUrl+ " --realm test --user user1 --password userpass");
    assertExitCodeAndStreamSizes(exe,0,0,1);
    data=ConfigUtil.loadConfig();
    rdata=data.getRealmConfigData(serverUrl,"test");
    Assert.assertEquals("current session realm unchanged","master",data.getRealm());
    Assert.assertNotNull("realm info set",rdata);
    Assert.assertNull("on the fly login was transient",rdata.getToken());
    Assert.assertNotNull("client info has registration access token",rdata.getClients().get("reg-cli-secret-direct"));
    exe=execute("update-token reg-cli-secret-direct --no-config --server " + serverUrl + " --realm test --user user1 --password userpass");
    assertExitCodeAndStreamSizes(exe,0,1,1);
    String token=exe.stdoutLines().get(0);
    exe=execute("get reg-cli-secret-direct --no-config --server " + serverUrl + " --realm test -t "+ token);
    Assert.assertEquals("exit code",0,exe.exitCode());
    ClientRepresentation client=JsonSerialization.readValue(exe.stdout(),ClientRepresentation.class);
    Assert.assertEquals("client representation returned","reg-cli-secret-direct",client.getClientId());
  }
 }
