{
  clientMappersPage.mapperTable().createMapper();
  setInitialValues("user session note",false,null);
  createClientMappersPage.form().setMapperType(USER_SESSION_NOTE);
  createClientMappersPage.form().setUserSessionNote("session note");
  createClientMappersPage.form().setTokenClaimName("claim name");
  createClientMappersPage.form().setClaimJSONType("int");
  createClientMappersPage.form().setAddToIDToken(false);
  createClientMappersPage.form().setAddToAccessToken(false);
  createClientMappersPage.form().save();
  assertFlashMessageSuccess();
  ProtocolMapperRepresentation found=findClientMapperByName(id,"user session note");
  assertNotNull(found);
  assertFalse(found.isConsentRequired());
  assertEquals("oidc-usersessionmodel-note-mapper",found.getProtocolMapper());
  Map<String,String> config=found.getConfig();
  assertNull(config.get("id.token.claim"));
  assertNull(config.get("access.token.claim"));
  assertEquals("claim name",config.get("claim.name"));
  assertEquals("session note",config.get("user.session.note"));
  assertEquals("int",config.get("jsonType.label"));
}
