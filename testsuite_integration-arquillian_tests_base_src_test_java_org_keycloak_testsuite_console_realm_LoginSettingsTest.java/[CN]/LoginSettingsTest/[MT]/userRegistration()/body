{
  log.info("enabling registration");
  loginSettingsPage.form().setRegistrationAllowed(true);
  assertTrue(loginSettingsPage.form().isRegistrationAllowed());
  loginSettingsPage.form().save();
  assertAlertSuccess();
  log.debug("enabled");
  testRealmAdminConsolePage.navigateTo();
  testRealmLoginPage.form().register();
  assertCurrentUrlStartsWith(testRealmRegistrationPage);
  testRealmRegistrationPage.waitForConfirmPasswordInputPresent();
  testRealmRegistrationPage.waitForUsernameInputPresent();
  log.info("verified registration is enabled");
  log.info("enabling email as username");
  loginSettingsPage.navigateTo();
  loginSettingsPage.form().setEmailAsUsername(true);
  assertTrue(loginSettingsPage.form().isEmailAsUsername());
  loginSettingsPage.form().save();
  assertAlertSuccess();
  log.debug("enabled");
  testRealmAdminConsolePage.navigateTo();
  testRealmLoginPage.form().register();
  assertCurrentUrlStartsWith(testRealmRegistrationPage);
  testRealmRegistrationPage.waitForConfirmPasswordInputPresent();
  testRealmRegistrationPage.waitForUsernameInputNotPresent();
  log.info("verified email as username");
  log.info("disabling registration");
  loginSettingsPage.navigateTo();
  loginSettingsPage.form().setRegistrationAllowed(false);
  assertFalse(loginSettingsPage.form().isRegistrationAllowed());
  loginSettingsPage.form().save();
  assertAlertSuccess();
  log.debug("disabled");
  testRealmAdminConsolePage.navigateTo();
  testRealmLoginPage.form().waitForRegisterLinkNotPresent();
  log.info("verified regisration is disabled");
}
