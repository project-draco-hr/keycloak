{
  ClientTemplateRepresentation templateRep=new ClientTemplateRepresentation();
  templateRep.setName("template1");
  templateRep.setDescription("template1-desc");
  templateRep.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);
  templateRep.setFullScopeAllowed(true);
  String template1Id=createTemplate(templateRep);
  templateRep=clientTemplates().get(template1Id).toRepresentation();
  Assert.assertEquals("template1",templateRep.getName());
  Assert.assertEquals("template1-desc",templateRep.getDescription());
  Assert.assertEquals(OIDCLoginProtocol.LOGIN_PROTOCOL,templateRep.getProtocol());
  Assert.assertEquals(true,templateRep.isFullScopeAllowed());
  templateRep.setName("template1-updated");
  templateRep.setDescription("template1-desc-updated");
  templateRep.setProtocol(SamlProtocol.LOGIN_PROTOCOL);
  templateRep.setFullScopeAllowed(false);
  clientTemplates().get(template1Id).update(templateRep);
  templateRep=clientTemplates().get(template1Id).toRepresentation();
  Assert.assertEquals("template1-updated",templateRep.getName());
  Assert.assertEquals("template1-desc-updated",templateRep.getDescription());
  Assert.assertEquals(SamlProtocol.LOGIN_PROTOCOL,templateRep.getProtocol());
  Assert.assertEquals(false,templateRep.isFullScopeAllowed());
  clientTemplates().get(template1Id).remove();
}
