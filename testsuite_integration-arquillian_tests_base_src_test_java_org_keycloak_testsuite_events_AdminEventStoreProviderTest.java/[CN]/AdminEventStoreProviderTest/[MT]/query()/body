{
  long oldest=System.currentTimeMillis() - 30000;
  long newest=System.currentTimeMillis() + 30000;
  testing().onAdminEvent(create("realmId",OperationType.CREATE,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(newest,"realmId",OperationType.ACTION,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(newest,"realmId",OperationType.ACTION,"realmId","clientId","userId2","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create("realmId2",OperationType.CREATE,"realmId2","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(oldest,"realmId",OperationType.CREATE,"realmId","clientId2","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create("realmId",OperationType.CREATE,"realmId","clientId","userId2","127.0.0.1","/admin/realms/master","error"),false);
  Assert.assertEquals(5,testing().getAdminEvents(null,null,null,"clientId",null,null,null,null,null,null,null).size());
  Assert.assertEquals(5,testing().getAdminEvents(null,null,"realmId",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,toList(OperationType.CREATE),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(6,testing().getAdminEvents(null,toList(OperationType.CREATE,OperationType.ACTION),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,"userId",null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().getAdminEvents(null,toList(OperationType.ACTION),null,null,"userId",null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().getAdminEvents(null,null,null,null,null,null,null,null,null,null,2).size());
  Assert.assertEquals(1,testing().getAdminEvents(null,null,null,null,null,null,null,null,null,5,null).size());
  Assert.assertEquals(newest,testing().getAdminEvents(null,null,null,null,null,null,null,null,null,null,1).get(0).getTime());
  Assert.assertEquals(oldest,testing().getAdminEvents(null,null,null,null,null,null,null,null,null,5,1).get(0).getTime());
  testing().clearAdminEventStore("realmId");
  testing().clearAdminEventStore("realmId2");
  Assert.assertEquals(0,testing().getAdminEvents(null,null,null,null,null,null,null,null,null,null,null).size());
  String d1=new String("2015-03-04");
  String d2=new String("2015-03-05");
  String d3=new String("2015-03-06");
  String d4=new String("2015-03-07");
  String d5=new String("2015-03-01");
  String d6=new String("2015-03-03");
  String d7=new String("2015-03-08");
  String d8=new String("2015-03-10");
  SimpleDateFormat formatter=new SimpleDateFormat("yyyy-MM-dd");
  Date date1=null, date2=null, date3=null, date4=null;
  Date date5=null, date6=null, date7=null, date8=null;
  try {
    date1=formatter.parse(d1);
    date2=formatter.parse(d2);
    date3=formatter.parse(d3);
    date4=formatter.parse(d4);
    date5=formatter.parse(d5);
    date6=formatter.parse(d6);
    date7=formatter.parse(d7);
    date8=formatter.parse(d8);
  }
 catch (  ParseException e) {
    e.printStackTrace();
  }
  testing().onAdminEvent(create(date1,"realmId",OperationType.CREATE,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date1,"realmId",OperationType.CREATE,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date2,"realmId",OperationType.ACTION,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date2,"realmId",OperationType.ACTION,"realmId","clientId","userId","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date3,"realmId",OperationType.UPDATE,"realmId","clientId","userId2","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date3,"realmId",OperationType.DELETE,"realmId","clientId","userId2","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date4,"realmId2",OperationType.CREATE,"realmId2","clientId2","userId2","127.0.0.1","/admin/realms/master","error"),false);
  testing().onAdminEvent(create(date4,"realmId2",OperationType.CREATE,"realmId2","clientId2","userId2","127.0.0.1","/admin/realms/master","error"),false);
  Assert.assertEquals(6,testing().getAdminEvents(null,null,null,"clientId",null,null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().getAdminEvents(null,null,null,"clientId2",null,null,null,null,null,null,null).size());
  Assert.assertEquals(6,testing().getAdminEvents(null,null,"realmId",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().getAdminEvents(null,null,"realmId2",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,"userId",null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,"userId2",null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().getAdminEvents(null,toList(OperationType.ACTION),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(6,testing().getAdminEvents(null,toList(OperationType.CREATE,OperationType.ACTION),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().getAdminEvents(null,toList(OperationType.UPDATE),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().getAdminEvents(null,toList(OperationType.DELETE),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,toList(OperationType.CREATE),null,null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(8,testing().getAdminEvents(null,null,null,null,null,null,null,date1,null,null,null).size());
  Assert.assertEquals(8,testing().getAdminEvents(null,null,null,null,null,null,null,null,date4,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,null,null,null,date3,null,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,null,null,null,null,date2,null,null).size());
  Assert.assertEquals(0,testing().getAdminEvents(null,null,null,null,null,null,null,date7,null,null,null).size());
  Assert.assertEquals(0,testing().getAdminEvents(null,null,null,null,null,null,null,null,date6,null,null).size());
  Assert.assertEquals(8,testing().getAdminEvents(null,null,null,null,null,null,null,date1,date4,null,null).size());
  Assert.assertEquals(6,testing().getAdminEvents(null,null,null,null,null,null,null,date2,date4,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,null,null,null,date1,date2,null,null).size());
  Assert.assertEquals(4,testing().getAdminEvents(null,null,null,null,null,null,null,date3,date4,null,null).size());
  Assert.assertEquals(0,testing().getAdminEvents(null,null,null,null,null,null,null,date5,date6,null,null).size());
  Assert.assertEquals(0,testing().getAdminEvents(null,null,null,null,null,null,null,date7,date8,null,null).size());
}
