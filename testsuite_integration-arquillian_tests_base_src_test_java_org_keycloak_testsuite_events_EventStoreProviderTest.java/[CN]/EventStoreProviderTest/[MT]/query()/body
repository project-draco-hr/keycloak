{
  long oldest=System.currentTimeMillis() - 30000;
  long newest=System.currentTimeMillis() + 30000;
  testing().onEvent(create(EventType.LOGIN,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId2","127.0.0.1","error"));
  testing().onEvent(create(EventType.LOGIN,"realmId2","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(oldest,EventType.LOGIN,"realmId","clientId2","userId","127.0.0.1","error"));
  testing().onEvent(create(EventType.LOGIN,"realmId","clientId","userId2","127.0.0.1","error"));
  Assert.assertEquals(5,testing().queryEvents(null,null,"clientId",null,null,null,null,null,null).size());
  Assert.assertEquals(5,testing().queryEvents("realmId",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,toList(EventType.LOGIN),null,null,null,null,null,null,null).size());
  Assert.assertEquals(6,testing().queryEvents(null,toList(EventType.LOGIN,EventType.REGISTER),null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,"userId",null,null,null,null,null).size());
  Assert.assertEquals(1,testing().queryEvents(null,toList(EventType.REGISTER),null,"userId",null,null,null,null,null).size());
  Assert.assertEquals(2,testing().queryEvents(null,null,null,null,null,null,null,null,2).size());
  Assert.assertEquals(1,testing().queryEvents(null,null,null,null,null,null,null,5,null).size());
  Assert.assertEquals(newest,testing().queryEvents(null,null,null,null,null,null,null,null,1).get(0).getTime());
  Assert.assertEquals(oldest,testing().queryEvents(null,null,null,null,null,null,null,5,1).get(0).getTime());
  testing().clearEventStore("realmId");
  testing().clearEventStore("realmId2");
  Assert.assertEquals(0,testing().queryEvents(null,null,null,null,null,null,null,null,null).size());
  String d1=new String("2015-03-04");
  String d2=new String("2015-03-05");
  String d3=new String("2015-03-06");
  String d4=new String("2015-03-07");
  String d5=new String("2015-03-01");
  String d6=new String("2015-03-03");
  String d7=new String("2015-03-08");
  String d8=new String("2015-03-10");
  SimpleDateFormat formatter=new SimpleDateFormat("yyyy-MM-dd");
  Date date1=null, date2=null, date3=null, date4=null;
  try {
    date1=formatter.parse(d1);
    date2=formatter.parse(d2);
    date3=formatter.parse(d3);
    date4=formatter.parse(d4);
  }
 catch (  ParseException e) {
    e.printStackTrace();
  }
  testing().onEvent(create(date1,EventType.LOGIN,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(date1,EventType.LOGIN,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(date2,EventType.REGISTER,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(date2,EventType.REGISTER,"realmId","clientId","userId","127.0.0.1","error"));
  testing().onEvent(create(date3,EventType.CODE_TO_TOKEN,"realmId","clientId","userId2","127.0.0.1","error"));
  testing().onEvent(create(date3,EventType.LOGOUT,"realmId","clientId","userId2","127.0.0.1","error"));
  testing().onEvent(create(date4,EventType.UPDATE_PROFILE,"realmId2","clientId2","userId2","127.0.0.1","error"));
  testing().onEvent(create(date4,EventType.UPDATE_EMAIL,"realmId2","clientId2","userId2","127.0.0.1","error"));
  Assert.assertEquals(6,testing().queryEvents(null,null,"clientId",null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().queryEvents(null,null,"clientId2",null,null,null,null,null,null).size());
  Assert.assertEquals(6,testing().queryEvents("realmId",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().queryEvents("realmId2",null,null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,"userId",null,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,"userId2",null,null,null,null,null).size());
  Assert.assertEquals(2,testing().queryEvents(null,toList(EventType.LOGIN),null,null,null,null,null,null,null).size());
  Assert.assertEquals(2,testing().queryEvents(null,toList(EventType.REGISTER),null,null,null,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,toList(EventType.LOGIN,EventType.REGISTER),null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().queryEvents(null,toList(EventType.CODE_TO_TOKEN),null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().queryEvents(null,toList(EventType.LOGOUT),null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().queryEvents(null,toList(EventType.UPDATE_PROFILE),null,null,null,null,null,null,null).size());
  Assert.assertEquals(1,testing().queryEvents(null,toList(EventType.UPDATE_EMAIL),null,null,null,null,null,null,null).size());
  Assert.assertEquals(8,testing().queryEvents(null,null,null,null,d1,null,null,null,null).size());
  Assert.assertEquals(8,testing().queryEvents(null,null,null,null,null,d4,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,null,d3,null,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,null,null,d2,null,null,null).size());
  Assert.assertEquals(0,testing().queryEvents(null,null,null,null,d7,null,null,null,null).size());
  Assert.assertEquals(0,testing().queryEvents(null,null,null,null,null,d6,null,null,null).size());
  Assert.assertEquals(8,testing().queryEvents(null,null,null,null,d1,d4,null,null,null).size());
  Assert.assertEquals(6,testing().queryEvents(null,null,null,null,d2,d4,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,null,d1,d2,null,null,null).size());
  Assert.assertEquals(4,testing().queryEvents(null,null,null,null,d3,d4,null,null,null).size());
  Assert.assertEquals(0,testing().queryEvents(null,null,null,null,d5,d6,null,null,null).size());
  Assert.assertEquals(0,testing().queryEvents(null,null,null,null,d7,d8,null,null,null).size());
}
