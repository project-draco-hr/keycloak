{
  testingClient.testing().exportImport().setAction(ExportImportConfig.ACTION_EXPORT);
  testingClient.testing().exportImport().setRealmName("test");
  testingClient.testing().exportImport().runExport();
  List<ComponentRepresentation> components=adminClient.realm("test").components().query();
  KeysMetadataRepresentation keyMetadata=adminClient.realm("test").keys().getKeyMetadata();
  adminClient.realm("test").remove();
  assertEquals(2,adminClient.realms().findAll().size());
  assertNotAuthenticated("test","test-user@localhost","password");
  assertNotAuthenticated("test","user1","password");
  assertNotAuthenticated("test","user2","password");
  assertNotAuthenticated("test","user3","password");
  testingClient.testing().exportImport().setAction(ExportImportConfig.ACTION_IMPORT);
  testingClient.testing().exportImport().runImport();
  assertEquals(3,adminClient.realms().findAll().size());
  assertAuthenticated("test","test-user@localhost","password");
  assertAuthenticated("test","user1","password");
  assertAuthenticated("test","user2","password");
  assertAuthenticated("test","user3","password");
  List<ComponentRepresentation> componentsImported=adminClient.realm("test").components().query();
  assertComponents(components,componentsImported);
  KeysMetadataRepresentation keyMetadataImported=adminClient.realm("test").keys().getKeyMetadata();
  assertEquals(keyMetadata.getActive(),keyMetadataImported.getActive());
}
