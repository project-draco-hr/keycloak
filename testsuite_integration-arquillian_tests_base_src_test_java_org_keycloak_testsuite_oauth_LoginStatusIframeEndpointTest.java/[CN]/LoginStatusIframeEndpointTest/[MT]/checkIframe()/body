{
  CookieStore cookieStore=new BasicCookieStore();
  CloseableHttpClient client=HttpClients.custom().setDefaultCookieStore(cookieStore).build();
  try {
    String redirectUri=URLEncoder.encode(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/admin/master/console","UTF-8");
    HttpGet get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/auth?response_type=code&client_id=" + Constants.ADMIN_CONSOLE_CLIENT_ID+ "&redirect_uri="+ redirectUri);
    CloseableHttpResponse response=client.execute(get);
    String s=IOUtils.toString(response.getEntity().getContent());
    response.close();
    Matcher matcher=Pattern.compile("action=\"([^\"]*)\"").matcher(s);
    matcher.find();
    String action=matcher.group(1);
    HttpPost post=new HttpPost(action);
    List<NameValuePair> params=new LinkedList<>();
    params.add(new BasicNameValuePair("username","admin"));
    params.add(new BasicNameValuePair("password","admin"));
    post.setHeader("Content-Type","application/x-www-form-urlencoded");
    post.setEntity(new UrlEncodedFormEntity(params));
    response=client.execute(post);
    assertEquals("CP=\"This is not a P3P policy!\"",response.getFirstHeader("P3P").getValue());
    Header setIdentityCookieHeader=null;
    Header setSessionCookieHeader=null;
    for (    Header h : response.getAllHeaders()) {
      if (h.getName().equals("Set-Cookie")) {
        if (h.getValue().contains("KEYCLOAK_SESSION")) {
          setSessionCookieHeader=h;
        }
 else         if (h.getValue().contains("KEYCLOAK_IDENTITY")) {
          setIdentityCookieHeader=h;
        }
      }
    }
    assertNotNull(setIdentityCookieHeader);
    assertTrue(setIdentityCookieHeader.getValue().contains("HttpOnly"));
    assertNotNull(setSessionCookieHeader);
    assertFalse(setSessionCookieHeader.getValue().contains("HttpOnly"));
    response.close();
    Cookie sessionCookie=null;
    for (    Cookie cookie : cookieStore.getCookies()) {
      if (cookie.getName().equals("KEYCLOAK_SESSION")) {
        sessionCookie=cookie;
        break;
      }
    }
    assertNotNull(sessionCookie);
    get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/login-status-iframe.html");
    response=client.execute(get);
    assertEquals(200,response.getStatusLine().getStatusCode());
    s=IOUtils.toString(response.getEntity().getContent());
    assertTrue(s.contains("function getCookie()"));
    assertEquals("CP=\"This is not a P3P policy!\"",response.getFirstHeader("P3P").getValue());
    response.close();
    get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/login-status-iframe.html/init");
    response=client.execute(get);
    assertEquals(403,response.getStatusLine().getStatusCode());
    response.close();
    get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/login-status-iframe.html/init?" + "client_id=invalid"+ "&origin="+ suiteContext.getAuthServerInfo().getContextRoot());
    response=client.execute(get);
    assertEquals(403,response.getStatusLine().getStatusCode());
    response.close();
    get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/login-status-iframe.html/init?" + "client_id="+ Constants.ADMIN_CONSOLE_CLIENT_ID+ "&origin=http://invalid");
    response=client.execute(get);
    assertEquals(403,response.getStatusLine().getStatusCode());
    response.close();
    get=new HttpGet(suiteContext.getAuthServerInfo().getContextRoot() + "/auth/realms/master/protocol/openid-connect/login-status-iframe.html/init?" + "client_id="+ Constants.ADMIN_CONSOLE_CLIENT_ID+ "&origin="+ suiteContext.getAuthServerInfo().getContextRoot());
    response=client.execute(get);
    assertEquals(204,response.getStatusLine().getStatusCode());
    response.close();
  }
  finally {
    client.close();
  }
}
