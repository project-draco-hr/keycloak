{
  try {
    RealmManager.realm(adminClient.realm("test")).revokeRefreshToken(true);
    oauth.doLogin("test-user@localhost","password");
    EventRepresentation loginEvent=events.expectLogin().assertEvent();
    String sessionId=loginEvent.getSessionId();
    String codeId=loginEvent.getDetails().get(Details.CODE_ID);
    String code=oauth.getCurrentQuery().get(OAuth2Constants.CODE);
    OAuthClient.AccessTokenResponse response1=oauth.doAccessTokenRequest(code,"password");
    RefreshToken refreshToken1=oauth.verifyRefreshToken(response1.getRefreshToken());
    events.expectCodeToToken(codeId,sessionId).assertEvent();
    Time.setOffset(2);
    OAuthClient.AccessTokenResponse response2=oauth.doRefreshTokenRequest(response1.getRefreshToken(),"password");
    RefreshToken refreshToken2=oauth.verifyRefreshToken(response2.getRefreshToken());
    assertEquals(200,response2.getStatusCode());
    events.expectRefresh(refreshToken1.getId(),sessionId).assertEvent();
    OAuthClient.AccessTokenResponse response3=oauth.doRefreshTokenRequest(response1.getRefreshToken(),"password");
    assertEquals(400,response3.getStatusCode());
    events.expectRefresh(refreshToken1.getId(),sessionId).removeDetail(Details.TOKEN_ID).removeDetail(Details.UPDATED_REFRESH_TOKEN_ID).error("invalid_token").assertEvent();
    oauth.doRefreshTokenRequest(response2.getRefreshToken(),"password");
    events.expectRefresh(refreshToken2.getId(),sessionId).assertEvent();
  }
  finally {
    Time.setOffset(0);
    RealmManager.realm(adminClient.realm("test")).revokeRefreshToken(false);
  }
}
