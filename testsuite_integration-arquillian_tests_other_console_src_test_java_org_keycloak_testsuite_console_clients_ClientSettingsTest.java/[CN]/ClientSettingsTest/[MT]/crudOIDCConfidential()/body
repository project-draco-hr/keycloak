{
  newClient=createOidcClientRep(CONFIDENTIAL,"oidc-confidential",TEST_REDIRECT_URIS);
  createClient(newClient);
  assertAlertSuccess();
  ClientRepresentation found=findClientByClientId(newClient.getClientId());
  assertNotNull("Client " + newClient.getClientId() + " was not found.",found);
  assertClientSettingsEqual(newClient,found);
  newClient.setClientId("oidc-confidential-updated");
  newClient.setName("updatedName");
  List<String> redirectUris=new ArrayList<>();
  redirectUris.add("http://example2.test/app/*");
  redirectUris.add("http://example2.test/app2/*");
  redirectUris.add("http://example3.test/app/*");
  newClient.setRedirectUris(redirectUris);
  List<String> webOrigins=new ArrayList<>();
  webOrigins.clear();
  webOrigins.add("http://example2.test");
  webOrigins.add("http://example3.test");
  newClient.setWebOrigins(webOrigins);
  clientSettingsPage.form().setClientId("oidc-confidential-updated");
  clientSettingsPage.form().setName("updatedName");
  clientSettingsPage.form().setRedirectUris(redirectUris);
  clientSettingsPage.form().setWebOrigins(webOrigins);
  clientSettingsPage.form().save();
  assertAlertSuccess();
  found=findClientByClientId(newClient.getClientId());
  assertNotNull("Client " + newClient.getClientId() + " was not found.",found);
  assertClientSettingsEqual(newClient,found);
  clientPage.delete();
  assertAlertSuccess();
  found=findClientByClientId(newClient.getClientId());
  assertNull("Deleted client " + newClient.getClientId() + " was found.",found);
}
