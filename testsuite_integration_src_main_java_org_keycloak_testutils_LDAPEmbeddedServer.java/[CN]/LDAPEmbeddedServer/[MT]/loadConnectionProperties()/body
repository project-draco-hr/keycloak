{
  Properties p=new Properties();
  try {
    InputStream is=Thread.currentThread().getContextClassLoader().getResourceAsStream(CONNECTION_PROPERTIES);
    p.load(is);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  connectionUrl=p.getProperty(IDM_TEST_LDAP_CONNECTION_URL,connectionUrl);
  baseDn=p.getProperty(IDM_TEST_LDAP_BASE_DN,baseDn);
  userDnSuffix=p.getProperty(IDM_TEST_LDAP_USER_DN_SUFFIX,userDnSuffix);
  rolesDnSuffix=p.getProperty(IDM_TEST_LDAP_ROLES_DN_SUFFIX,rolesDnSuffix);
  groupDnSuffix=p.getProperty(IDM_TEST_LDAP_GROUP_DN_SUFFIX,groupDnSuffix);
  agentDnSuffix=p.getProperty(IDM_TEST_LDAP_AGENT_DN_SUFFIX,agentDnSuffix);
  startEmbeddedLdapLerver=Boolean.parseBoolean(p.getProperty(IDM_TEST_LDAP_START_EMBEDDED_LDAP_SERVER,"true"));
  bindDn=p.getProperty(IDM_TEST_LDAP_BIND_DN,bindDn);
  bindCredential=p.getProperty(IDM_TEST_LDAP_BIND_CREDENTIAL,bindCredential);
  vendor=p.getProperty(IDM_TEST_LDAP_VENDOR);
  connectionPooling=Boolean.parseBoolean(p.getProperty(IDM_TEST_LDAP_CONNECTION_POOLING,"true"));
  pagination=Boolean.parseBoolean(p.getProperty(IDM_TEST_LDAP_PAGINATION,"true"));
}
