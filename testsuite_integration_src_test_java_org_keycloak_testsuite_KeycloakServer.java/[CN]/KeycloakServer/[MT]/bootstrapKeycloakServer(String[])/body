{
  File f=new File(System.getProperty("user.home"),".keycloak-server.properties");
  if (f.isFile()) {
    Properties p=new Properties();
    p.load(new FileInputStream(f));
    System.getProperties().putAll(p);
  }
  KeycloakServerConfig config=new KeycloakServerConfig();
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("-b")) {
      config.setHost(args[++i]);
    }
    if (args[i].equals("-p")) {
      config.setPort(Integer.valueOf(args[++i]));
    }
  }
  if (System.getProperty("keycloak.port") != null) {
    config.setPort(Integer.valueOf(System.getProperty("keycloak.port")));
  }
  if (System.getProperty("keycloak.bind.address") != null) {
    config.setHost(System.getProperty("keycloak.bind.address"));
  }
  if (System.getenv("KEYCLOAK_DEV_PORT") != null) {
    config.setPort(Integer.valueOf(System.getenv("KEYCLOAK_DEV_PORT")));
  }
  if (System.getProperties().containsKey("resources")) {
    String resources=System.getProperty("resources");
    if (resources == null || resources.equals("") || resources.equals("true")) {
      if (System.getProperties().containsKey("maven.home")) {
        resources=System.getProperty("user.dir").replaceFirst("testsuite.integration.*","");
      }
 else {
        for (        String c : System.getProperty("java.class.path").split(File.pathSeparator)) {
          if (c.contains(File.separator + "testsuite" + File.separator+ "integration")) {
            resources=c.replaceFirst("testsuite.integration.*","");
          }
        }
      }
    }
    File dir=new File(resources).getAbsoluteFile();
    if (!dir.isDirectory() || !new File(dir,"forms").isDirectory()) {
      throw new RuntimeException("Invalid resources directory");
    }
    if (!System.getProperties().containsKey("keycloak.theme.dir")) {
      System.setProperty("keycloak.theme.dir",file(dir.getAbsolutePath(),"forms","common-themes","src","main","resources","theme").getAbsolutePath());
    }
    if (!System.getProperties().containsKey("keycloak.theme.cacheTemplates")) {
      System.setProperty("keycloak.theme.cacheTemplates","false");
    }
    if (!System.getProperties().containsKey("keycloak.theme.staticMaxAge")) {
      System.setProperty("keycloak.theme.staticMaxAge","-1");
    }
    config.setResourcesHome(dir.getAbsolutePath());
  }
  if (System.getProperties().containsKey("undertowWorkerThreads")) {
    int undertowWorkerThreads=Integer.parseInt(System.getProperty("undertowWorkerThreads"));
    config.setWorkerThreads(undertowWorkerThreads);
  }
  final KeycloakServer keycloak=new KeycloakServer(config);
  keycloak.sysout=true;
  keycloak.start();
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("-import")) {
      keycloak.importRealm(new FileInputStream(args[++i]));
    }
  }
  if (System.getProperties().containsKey("import")) {
    keycloak.importRealm(new FileInputStream(System.getProperty("import")));
  }
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      keycloak.stop();
    }
  }
);
  return keycloak;
}
