{
  keycloakRule.configure(new KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel appRealm){
      appRealm.setAuditEnabled(true);
    }
  }
);
  try {
    List<Event> e=new LinkedList<Event>();
    loginPage.open();
    loginPage.clickRegister();
    registerPage.register("view","log","view-log@localhost","view-log","password","password");
    e.add(events.poll());
    e.add(events.poll());
    profilePage.open();
    profilePage.updateProfile("view","log2","view-log@localhost");
    e.add(events.poll());
    logPage.open();
    e.add(events.poll());
    Collections.reverse(e);
    Assert.assertTrue(logPage.isCurrent());
    List<List<String>> actual=logPage.getEvents();
    Assert.assertEquals(e.size(),actual.size());
    Iterator<List<String>> itr=actual.iterator();
    for (    Event event : e) {
      List<String> a=itr.next();
      Assert.assertEquals(event.getEvent().replace('_',' '),a.get(1));
      Assert.assertEquals(event.getIpAddress(),a.get(2));
      Assert.assertEquals(event.getClientId(),a.get(3));
    }
  }
  finally {
    keycloakRule.configure(new KeycloakSetup(){
      @Override public void config(      RealmManager manager,      RealmModel adminstrationRealm,      RealmModel appRealm){
        appRealm.setAuditEnabled(false);
      }
    }
);
  }
}
