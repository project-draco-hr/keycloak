{
  loginPage.open();
  loginPage.clickRegister();
  registerPage.register("firstName2","lastName2","email2@mail.com","setupTotp2","password2","password2");
  String userId=events.expectRegister("setupTotp2","email2@mail.com").assertEvent().getUserId();
  totpPage.assertCurrent();
  String totpCode=totpPage.getTotpSecret();
  totpPage.configure(totp.generate(totpCode));
  Assert.assertEquals(RequestType.AUTH_RESPONSE,appPage.getRequestType());
  events.expectRequiredAction(EventType.UPDATE_TOTP).user(userId).detail(Details.USERNAME,"setupTotp2").assertEvent();
  Event loginEvent=events.expectLogin().user(userId).detail(Details.USERNAME,"setupTotp2").assertEvent();
  oauth.openLogout();
  events.expectLogout(loginEvent.getSessionId()).user(userId).assertEvent();
  loginPage.open();
  loginPage.login("setupTotp2","password2");
  Assert.assertTrue(loginPage.isCurrent());
  Assert.assertFalse(totpPage.isCurrent());
  loginTotpPage.login(totp.generate(totpCode));
  loginEvent=events.expectLogin().user(userId).detail(Details.USERNAME,"setuptotp2").assertEvent();
  accountTotpPage.open();
  accountTotpPage.assertCurrent();
  accountTotpPage.removeTotp();
  events.expectAccount(EventType.REMOVE_TOTP).user(userId).assertEvent();
  oauth.openLogout();
  events.expectLogout(loginEvent.getSessionId()).user(userId).assertEvent();
  loginPage.open();
  loginPage.login("setupTotp2","password2");
  totpPage.assertCurrent();
  totpPage.configure(totp.generate(totpPage.getTotpSecret()));
  String sessionId=events.expectRequiredAction(EventType.UPDATE_TOTP).user(userId).detail(Details.USERNAME,"setuptotp2").assertEvent().getSessionId();
  Assert.assertEquals(RequestType.AUTH_RESPONSE,appPage.getRequestType());
  events.expectLogin().user(userId).session(sessionId).detail(Details.USERNAME,"setuptotp2").assertEvent();
}
