{
  final AtomicInteger origTokenLifespan=new AtomicInteger();
  keycloakRule.update(new KeycloakRule.KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel demoRealm){
      ApplicationModel sessionPortal=demoRealm.getApplicationByName("session-portal");
      sessionPortal.setManagementUrl(null);
      origTokenLifespan.set(demoRealm.getAccessTokenLifespan());
      demoRealm.setAccessTokenLifespan(1);
    }
  }
,"demo");
  loginAndCheckSession(driver,loginPage);
  String logoutUri=OIDCLoginProtocolService.logoutUrl(UriBuilder.fromUri(AUTH_SERVER_URL)).queryParam(OAuth2Constants.REDIRECT_URI,APP_SERVER_BASE_URL + "/session-portal").build("demo").toString();
  driver.navigate().to(logoutUri);
  Thread.sleep(2000);
  driver.navigate().to(APP_SERVER_BASE_URL + "/session-portal");
  String currentUrl=driver.getCurrentUrl();
  Assert.assertTrue(currentUrl.startsWith(LOGIN_URL));
  loginPage.login("bburke@redhat.com","password");
  Assert.assertEquals(driver.getCurrentUrl(),APP_SERVER_BASE_URL + "/session-portal" + slash);
  String pageSource=driver.getPageSource();
  Assert.assertTrue(pageSource.contains("Counter=1"));
  keycloakRule.update(new KeycloakRule.KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel demoRealm){
      ApplicationModel sessionPortal=demoRealm.getApplicationByName("session-portal");
      sessionPortal.setManagementUrl(APP_SERVER_BASE_URL + "/session-portal");
      demoRealm.setAccessTokenLifespan(origTokenLifespan.get());
    }
  }
,"demo");
}
