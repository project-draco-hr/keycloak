{
  driver.navigate().to("http://localhost:8081/customer-portal");
  Assert.assertTrue(driver.getCurrentUrl().startsWith(LOGIN_URL));
  loginPage.login("bburke@redhat.com","password");
  Assert.assertEquals(driver.getCurrentUrl(),"http://localhost:8081/customer-portal");
  String pageSource=driver.getPageSource();
  Assert.assertTrue(pageSource.contains("Bill Burke") && pageSource.contains("Stian Thorgersen"));
  driver.navigate().to("http://localhost:8081/product-portal");
  Assert.assertEquals(driver.getCurrentUrl(),"http://localhost:8081/product-portal");
  pageSource=driver.getPageSource();
  Assert.assertTrue(pageSource.contains("iPhone") && pageSource.contains("iPad"));
  List<Map<String,String>> stats=Keycloak.getInstance("http://localhost:8081/auth","master","admin","admin",Constants.ADMIN_CLI_CLIENT_ID).realm("demo").getClientSessionStats();
  Map<String,String> customerPortalStats=null;
  Map<String,String> productPortalStats=null;
  for (  Map<String,String> s : stats) {
    if (s.get("clientId").equals("customer-portal")) {
      customerPortalStats=s;
    }
 else     if (s.get("clientId").equals("product-portal")) {
      productPortalStats=s;
    }
  }
  Assert.assertEquals(1,Integer.parseInt(customerPortalStats.get("active")));
  Assert.assertEquals(1,Integer.parseInt(productPortalStats.get("active")));
  String logoutUri=OIDCLoginProtocolService.logoutUrl(UriBuilder.fromUri("http://localhost:8081/auth")).queryParam(OAuth2Constants.REDIRECT_URI,"/customer-portal").build("demo").toString();
  driver.navigate().to(logoutUri);
  Assert.assertTrue(driver.getCurrentUrl().startsWith(LOGIN_URL));
  driver.navigate().to("http://localhost:8081/product-portal");
  Assert.assertTrue(driver.getCurrentUrl().startsWith(LOGIN_URL));
  driver.navigate().to("http://localhost:8081/customer-portal");
  Assert.assertTrue(driver.getCurrentUrl().startsWith(LOGIN_URL));
}
