{
  AddUser.main(new String[]{"-u","addusertest-admin","-p","password"});
  assertEquals(1,dir.listFiles().length);
  List<RealmRepresentation> realms=JsonSerialization.readValue(new FileInputStream(new File(dir,"keycloak-add-user.json")),new TypeReference<List<RealmRepresentation>>(){
  }
);
  assertEquals(1,realms.size());
  assertEquals(1,realms.get(0).getUsers().size());
  UserRepresentation user=realms.get(0).getUsers().get(0);
  assertEquals(new Integer(100000),user.getCredentials().get(0).getHashIterations());
  assertNull(user.getCredentials().get(0).getValue());
  CredentialRepresentation credentials=user.getCredentials().get(0);
  assertEquals(Pbkdf2PasswordHashProvider.ID,credentials.getAlgorithm());
  assertEquals(new Integer(100000),credentials.getHashIterations());
  KeycloakServer server=new KeycloakServer();
  try {
    server.start();
    Keycloak keycloak=Keycloak.getInstance("http://localhost:8081/auth","master","addusertest-admin","password",Constants.ADMIN_CLI_CLIENT_ID);
    keycloak.realms().findAll();
    RealmRepresentation testRealm=new RealmRepresentation();
    testRealm.setEnabled(true);
    testRealm.setId("test");
    testRealm.setRealm("test");
    keycloak.realms().create(testRealm);
    RealmResource realm=keycloak.realm("master");
    List<UserRepresentation> users=realm.users().search("addusertest-admin",null,null,null,null,null);
    assertEquals(1,users.size());
    UserRepresentation created=users.get(0);
    assertNotNull(created.getCreatedTimestamp());
    UserResource userResource=realm.users().get(created.getId());
    List<RoleRepresentation> realmRoles=userResource.roles().realmLevel().listAll();
    assertRoles(realmRoles,"admin","offline_access");
    List<ClientRepresentation> clients=realm.clients().findAll();
    String accountId=null;
    for (    ClientRepresentation c : clients) {
      if (c.getClientId().equals("account")) {
        accountId=c.getId();
      }
    }
    List<RoleRepresentation> accountRoles=userResource.roles().clientLevel(accountId).listAll();
    assertRoles(accountRoles,"view-profile","manage-account");
    keycloak.close();
    assertEquals(0,dir.listFiles().length);
  }
  finally {
    server.stop();
  }
}
