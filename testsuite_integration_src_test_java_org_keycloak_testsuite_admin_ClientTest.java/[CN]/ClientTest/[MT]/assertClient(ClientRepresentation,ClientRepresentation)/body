{
  if (client.getClientId() != null)   Assert.assertEquals(client.getClientId(),storedClient.getClientId());
  if (client.getName() != null)   Assert.assertEquals(client.getName(),storedClient.getName());
  if (client.isEnabled() != null)   Assert.assertEquals(client.isEnabled(),storedClient.isEnabled());
  if (client.isBearerOnly() != null)   Assert.assertEquals(client.isBearerOnly(),storedClient.isBearerOnly());
  if (client.isPublicClient() != null)   Assert.assertEquals(client.isPublicClient(),storedClient.isPublicClient());
  if (client.isFullScopeAllowed() != null)   Assert.assertEquals(client.isFullScopeAllowed(),storedClient.isFullScopeAllowed());
  if (client.getRootUrl() != null)   Assert.assertEquals(client.getRootUrl(),storedClient.getRootUrl());
  if (client.getAdminUrl() != null)   Assert.assertEquals(client.getAdminUrl(),storedClient.getAdminUrl());
  if (client.getBaseUrl() != null)   Assert.assertEquals(client.getBaseUrl(),storedClient.getBaseUrl());
  if (client.isSurrogateAuthRequired() != null)   Assert.assertEquals(client.isSurrogateAuthRequired(),storedClient.isSurrogateAuthRequired());
  if (client.getClientAuthenticatorType() != null)   Assert.assertEquals(client.getClientAuthenticatorType(),storedClient.getClientAuthenticatorType());
  if (client.getNotBefore() != null) {
    Assert.assertEquals(client.getNotBefore(),storedClient.getNotBefore());
  }
  if (client.getDefaultRoles() != null) {
    Set<String> set=new HashSet<String>();
    for (    String val : client.getDefaultRoles()) {
      set.add(val);
    }
    Set<String> storedSet=new HashSet<String>();
    for (    String val : storedClient.getDefaultRoles()) {
      storedSet.add(val);
    }
    Assert.assertEquals(set,storedSet);
  }
  List<String> redirectUris=client.getRedirectUris();
  if (redirectUris != null) {
    Set<String> set=new HashSet<String>();
    for (    String val : client.getRedirectUris()) {
      set.add(val);
    }
    Set<String> storedSet=new HashSet<String>();
    for (    String val : storedClient.getRedirectUris()) {
      storedSet.add(val);
    }
    Assert.assertEquals(set,storedSet);
  }
  List<String> webOrigins=client.getWebOrigins();
  if (webOrigins != null) {
    Set<String> set=new HashSet<String>();
    for (    String val : client.getWebOrigins()) {
      set.add(val);
    }
    Set<String> storedSet=new HashSet<String>();
    for (    String val : storedClient.getWebOrigins()) {
      storedSet.add(val);
    }
    Assert.assertEquals(set,storedSet);
  }
}
