{
  String originalPublicKey=realm.toRepresentation().getPublicKey();
  RealmRepresentation rep=new RealmRepresentation();
  rep.setPrivateKey("INVALID");
  rep.setPublicKey(PUBLIC_KEY);
  try {
    realm.update(rep);
    fail("Expected BadRequestException");
  }
 catch (  BadRequestException e) {
  }
  rep.setPrivateKey(PRIVATE_KEY);
  rep.setPublicKey("INVALID");
  try {
    realm.update(rep);
    fail("Expected BadRequestException");
  }
 catch (  BadRequestException e) {
  }
  assertEquals(originalPublicKey,realm.toRepresentation().getPublicKey());
  rep.setPublicKey(PUBLIC_KEY);
  realm.update(rep);
  assertEquals(PUBLIC_KEY,rep.getPublicKey());
  String privateKey2048=IOUtils.toString(getClass().getResourceAsStream("/keys/private2048.pem"));
  String publicKey2048=IOUtils.toString(getClass().getResourceAsStream("/keys/public2048.pem"));
  rep.setPrivateKey(privateKey2048);
  try {
    realm.update(rep);
    fail("Expected BadRequestException");
  }
 catch (  BadRequestException e) {
  }
  assertEquals(PUBLIC_KEY,realm.toRepresentation().getPublicKey());
  rep.setPublicKey(publicKey2048);
  realm.update(rep);
  assertEquals(publicKey2048,realm.toRepresentation().getPublicKey());
  String privateKey4096=IOUtils.toString(getClass().getResourceAsStream("/keys/private4096.pem"));
  String publicKey4096=IOUtils.toString(getClass().getResourceAsStream("/keys/public4096.pem"));
  rep.setPrivateKey(privateKey4096);
  rep.setPublicKey(publicKey4096);
  realm.update(rep);
  assertEquals(publicKey4096,realm.toRepresentation().getPublicKey());
}
