{
  KeycloakSession session=brokerServerRule.startSession();
  setUpdateProfileFirstLogin(session.realms().getRealmByName("realm-with-broker"),IdentityProviderRepresentation.UPFLM_OFF);
  brokerServerRule.stopSession(session,true);
  driver.navigate().to("http://localhost:8081/test-app");
  loginPage.clickSocial(getProviderId());
  loginPage.login("test-user","password");
  driver.navigate().to("http://localhost:8081/test-app/logout");
  try {
    session=brokerServerRule.startSession();
    RealmModel brokerRealm=session.realms().getRealmByName("realm-with-broker");
    brokerRealm.setBruteForceProtected(true);
    brokerRealm.setFailureFactor(2);
    brokerServerRule.stopSession(session,true);
    driver.navigate().to("http://localhost:8081/test-app");
    loginPage.login("test-user","fail");
    loginPage.login("test-user","fail");
    driver.navigate().to("http://localhost:8081/test-app");
    assertTrue(driver.getCurrentUrl().startsWith("http://localhost:8081/auth/realms/realm-with-broker/protocol/openid-connect/auth"));
    loginPage.clickSocial(getProviderId());
    loginPage.login("test-user","password");
    assertTrue(errorPage.isCurrent());
    assertEquals("Account is disabled, contact admin.",errorPage.getError());
  }
  finally {
    session=brokerServerRule.startSession();
    RealmModel brokerRealm=session.realms().getRealmByName("realm-with-broker");
    brokerRealm.setBruteForceProtected(false);
    brokerRealm.setFailureFactor(0);
    brokerServerRule.stopSession(session,true);
  }
}
