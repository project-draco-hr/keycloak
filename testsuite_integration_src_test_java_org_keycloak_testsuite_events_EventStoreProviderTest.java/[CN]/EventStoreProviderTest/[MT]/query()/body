{
  long oldest=System.currentTimeMillis() - 30000;
  long newest=System.currentTimeMillis() + 30000;
  eventStore.onEvent(create(EventType.LOGIN,"realmId","clientId","userId","127.0.0.1","error"));
  eventStore.onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId","127.0.0.1","error"));
  eventStore.onEvent(create(newest,EventType.REGISTER,"realmId","clientId","userId2","127.0.0.1","error"));
  eventStore.onEvent(create(EventType.LOGIN,"realmId2","clientId","userId","127.0.0.1","error"));
  eventStore.onEvent(create(oldest,EventType.LOGIN,"realmId","clientId2","userId","127.0.0.1","error"));
  eventStore.onEvent(create(EventType.LOGIN,"realmId","clientId","userId2","127.0.0.1","error"));
  resetSession();
  Assert.assertEquals(5,eventStore.createQuery().client("clientId").getResultList().size());
  Assert.assertEquals(5,eventStore.createQuery().realm("realmId").getResultList().size());
  Assert.assertEquals(4,eventStore.createQuery().type(EventType.LOGIN).getResultList().size());
  Assert.assertEquals(6,eventStore.createQuery().type(EventType.LOGIN,EventType.REGISTER).getResultList().size());
  Assert.assertEquals(4,eventStore.createQuery().user("userId").getResultList().size());
  Assert.assertEquals(1,eventStore.createQuery().user("userId").type(EventType.REGISTER).getResultList().size());
  Assert.assertEquals(2,eventStore.createQuery().maxResults(2).getResultList().size());
  Assert.assertEquals(1,eventStore.createQuery().firstResult(5).getResultList().size());
  Assert.assertEquals(newest,eventStore.createQuery().maxResults(1).getResultList().get(0).getTime());
  Assert.assertEquals(oldest,eventStore.createQuery().firstResult(5).maxResults(1).getResultList().get(0).getTime());
}
