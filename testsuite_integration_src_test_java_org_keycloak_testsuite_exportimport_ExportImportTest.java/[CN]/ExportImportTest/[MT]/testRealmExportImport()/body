{
  ExportImportConfig.setAction(ExportImportConfig.ACTION_EXPORT);
  ExportImportConfig.setRealmName("test");
  keycloakRule.restartServer();
  KeycloakSession session=keycloakRule.startSession();
  try {
    RealmProvider realmProvider=session.realms();
    UserProvider userProvider=session.users();
    new RealmManager(session).removeRealm(realmProvider.getRealmByName("test"));
    Assert.assertEquals(2,realmProvider.getRealms().size());
    RealmModel master=realmProvider.getRealmByName(Config.getAdminRealm());
    UserModel admin2=session.users().getUserByUsername("admin2",master);
    session.users().removeUser(master,admin2);
    assertNotAuthenticated(userProvider,realmProvider,Config.getAdminRealm(),"admin2","admin2");
    assertNotAuthenticated(userProvider,realmProvider,"test","test-user@localhost","password");
    assertNotAuthenticated(userProvider,realmProvider,"test","user1","password");
    assertNotAuthenticated(userProvider,realmProvider,"test","user2","password");
    assertNotAuthenticated(userProvider,realmProvider,"test","user3","password");
  }
  finally {
    keycloakRule.stopSession(session,true);
  }
  ExportImportConfig.setAction(ExportImportConfig.ACTION_IMPORT);
  keycloakRule.restartServer();
  session=keycloakRule.startSession();
  try {
    RealmProvider realmProvider=session.realms();
    UserProvider userProvider=session.users();
    Assert.assertEquals(3,realmProvider.getRealms().size());
    assertNotAuthenticated(userProvider,realmProvider,Config.getAdminRealm(),"admin2","admin2");
    assertAuthenticated(userProvider,realmProvider,"test","test-user@localhost","password");
    assertAuthenticated(userProvider,realmProvider,"test","user1","password");
    assertAuthenticated(userProvider,realmProvider,"test","user2","password");
    assertAuthenticated(userProvider,realmProvider,"test","user3","password");
    addUser(userProvider,realmProvider.getRealmByName(Config.getAdminRealm()),"admin2","admin2");
  }
  finally {
    keycloakRule.stopSession(session,true);
  }
}
