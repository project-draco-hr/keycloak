{
  ExportImportConfig.setAction(ExportImportConfig.ACTION_EXPORT);
  ExportImportConfig.setRealmName("test");
  keycloakRule.restartServer();
  KeycloakSession session=keycloakRule.startSession();
  try {
    ModelProvider model=session.model();
    new RealmManager(session).removeRealm(model.getRealmByName("test"));
    Assert.assertEquals(1,model.getRealms().size());
    RealmModel master=model.getRealmByName(Config.getAdminRealm());
    master.removeUser("admin2");
    assertNotAuthenticated(model,Config.getAdminRealm(),"admin2","admin2");
    assertNotAuthenticated(model,"test","test-user@localhost","password");
    assertNotAuthenticated(model,"test","user1","password");
    assertNotAuthenticated(model,"test","user2","password");
    assertNotAuthenticated(model,"test","user3","password");
  }
  finally {
    keycloakRule.stopSession(session,true);
  }
  ExportImportConfig.setAction(ExportImportConfig.ACTION_IMPORT);
  keycloakRule.restartServer();
  session=keycloakRule.startSession();
  try {
    ModelProvider model=session.model();
    Assert.assertEquals(2,model.getRealms().size());
    assertNotAuthenticated(model,Config.getAdminRealm(),"admin2","admin2");
    assertAuthenticated(model,"test","test-user@localhost","password");
    assertAuthenticated(model,"test","user1","password");
    assertAuthenticated(model,"test","user2","password");
    assertAuthenticated(model,"test","user3","password");
    addUser(model.getRealmByName(Config.getAdminRealm()),"admin2","admin2");
  }
  finally {
    keycloakRule.stopSession(session,true);
  }
}
