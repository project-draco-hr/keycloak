{
  UsersSyncManager usersSyncManager=new UsersSyncManager();
  sleep(1000);
  KeycloakSession session=keycloakRule.startSession();
  try {
    KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
    usersSyncManager.syncAllUsers(sessionFactory,"test",ldapModel);
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
  session=keycloakRule.startSession();
  try {
    RealmModel testRealm=session.realms().getRealm("test");
    UserProvider userProvider=session.userStorage();
    assertUserImported(userProvider,testRealm,"user1","User1FN","User1LN","user1@email.org");
    assertUserImported(userProvider,testRealm,"user2","User2FN","User2LN","user2@email.org");
    assertUserImported(userProvider,testRealm,"user3","User3FN","User3LN","user3@email.org");
    assertUserImported(userProvider,testRealm,"user4","User4FN","User4LN","user4@email.org");
    assertUserImported(userProvider,testRealm,"user5","User5FN","User5LN","user5@email.org");
    Assert.assertTrue(ldapModel.getLastSync() > 0);
    for (    UserFederationProviderModel persistentFedModel : testRealm.getUserFederationProviders()) {
      if (LDAPFederationProviderFactory.PROVIDER_NAME.equals(persistentFedModel.getProviderName())) {
        Assert.assertTrue(persistentFedModel.getLastSync() > 0);
      }
 else {
        Assert.assertEquals(0,persistentFedModel.getLastSync());
      }
    }
    sleep(1000);
    LDAPIdentityStore ldapStore=FederationProvidersIntegrationTest.getLdapIdentityStore(session,ldapModel);
    LDAPUtils.addUser(ldapStore,"user6","User6FN","User6LN","user6@email.org");
    LDAPUtils.updateUser(ldapStore,"user5","User5FNUpdated","User5LNUpdated","user5Updated@email.org");
    assertUserImported(userProvider,testRealm,"user5","User5FN","User5LN","user5@email.org");
    Assert.assertNull(userProvider.getUserByUsername("user6",testRealm));
    KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
    usersSyncManager.syncChangedUsers(sessionFactory,"test",ldapModel);
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
  session=keycloakRule.startSession();
  try {
    RealmModel testRealm=session.realms().getRealm("test");
    UserProvider userProvider=session.userStorage();
    assertUserImported(userProvider,testRealm,"user5","User5FNUpdated","User5LNUpdated","user5Updated@email.org");
    assertUserImported(userProvider,testRealm,"user6","User6FN","User6LN","user6@email.org");
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
}
