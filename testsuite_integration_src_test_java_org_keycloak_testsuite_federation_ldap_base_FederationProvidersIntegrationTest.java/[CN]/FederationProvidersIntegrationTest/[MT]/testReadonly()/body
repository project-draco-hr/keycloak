{
  KeycloakSession session=keycloakRule.startSession();
  try {
    RealmModel appRealm=session.realms().getRealmByName("test");
    UserFederationProviderModel model=new UserFederationProviderModel(ldapModel.getId(),ldapModel.getProviderName(),ldapModel.getConfig(),ldapModel.getPriority(),ldapModel.getDisplayName(),-1,-1,0);
    model.getConfig().put(LDAPConstants.EDIT_MODE,UserFederationProvider.EditMode.READ_ONLY.toString());
    appRealm.updateUserFederationProvider(model);
    UserModel user=session.users().getUserByUsername("johnkeycloak",appRealm);
    Assert.assertNotNull(user);
    Assert.assertNotNull(user.getFederationLink());
    Assert.assertEquals(user.getFederationLink(),ldapModel.getId());
    try {
      user.setEmail("error@error.com");
      Assert.fail("should fail");
    }
 catch (    ModelReadOnlyException e) {
    }
    try {
      user.setLastName("Berk");
      Assert.fail("should fail");
    }
 catch (    ModelReadOnlyException e) {
    }
    try {
      user.setFirstName("Bilbo");
      Assert.fail("should fail");
    }
 catch (    ModelReadOnlyException e) {
    }
    try {
      UserCredentialModel cred=UserCredentialModel.password("PoopyPoop1");
      user.updateCredential(cred);
      Assert.fail("should fail");
    }
 catch (    ModelReadOnlyException e) {
    }
    Assert.assertTrue(session.users().removeUser(appRealm,user));
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
  session=keycloakRule.startSession();
  try {
    RealmModel appRealm=session.realms().getRealmByName("test");
    Assert.assertEquals(UserFederationProvider.EditMode.WRITABLE.toString(),appRealm.getUserFederationProviders().get(0).getConfig().get(LDAPConstants.EDIT_MODE));
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
}
