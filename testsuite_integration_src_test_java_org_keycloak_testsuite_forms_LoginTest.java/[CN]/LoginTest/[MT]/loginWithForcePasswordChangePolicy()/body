{
  keycloakRule.update(new KeycloakRule.KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel appRealm){
      appRealm.setPasswordPolicy(new PasswordPolicy("forceExpiredPasswordChange(1)"));
    }
  }
);
  try {
    Time.setOffset(86405);
    loginPage.open();
    loginPage.login("login-test","password");
    updatePasswordPage.assertCurrent();
    updatePasswordPage.changePassword("updatedPassword","updatedPassword");
    events.expectRequiredAction(EventType.UPDATE_PASSWORD).user(userId).detail(Details.USERNAME,"login-test").assertEvent();
    assertEquals(RequestType.AUTH_RESPONSE,appPage.getRequestType());
    events.expectLogin().user(userId).detail(Details.USERNAME,"login-test").assertEvent();
  }
  finally {
    keycloakRule.update(new KeycloakRule.KeycloakSetup(){
      @Override public void config(      RealmManager manager,      RealmModel adminstrationRealm,      RealmModel appRealm){
        appRealm.setPasswordPolicy(new PasswordPolicy(null));
        UserModel user=manager.getSession().users().getUserByUsername("login-test",appRealm);
        UserCredentialModel cred=new UserCredentialModel();
        cred.setType(CredentialRepresentation.PASSWORD);
        cred.setValue("password");
        user.updateCredential(cred);
      }
    }
);
    Time.setOffset(0);
  }
}
