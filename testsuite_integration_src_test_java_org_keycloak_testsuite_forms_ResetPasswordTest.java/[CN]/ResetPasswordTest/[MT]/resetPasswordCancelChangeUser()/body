{
  loginPage.open();
  loginPage.resetPassword();
  resetPasswordPage.assertCurrent();
  resetPasswordPage.changePassword("test-user@localhost");
  loginPage.assertCurrent();
  assertEquals("You should receive an email shortly with further instructions.",loginPage.getSuccessMessage());
  events.expectRequiredAction(EventType.SEND_RESET_PASSWORD).detail(Details.USERNAME,"test-user@localhost").session((String)null).detail(Details.EMAIL,"test-user@localhost").assertEvent();
  loginPage.login("login@test.com","password");
  Event loginEvent=events.expectLogin().user(userId).detail(Details.USERNAME,"login@test.com").assertEvent();
  String code=oauth.getCurrentQuery().get("code");
  OAuthClient.AccessTokenResponse tokenResponse=oauth.doAccessTokenRequest(code,"password");
  assertEquals(200,tokenResponse.getStatusCode());
  assertEquals(userId,oauth.verifyToken(tokenResponse.getAccessToken()).getSubject());
  events.expectCodeToToken(loginEvent.getDetails().get(Details.CODE_ID),loginEvent.getSessionId()).user(userId).assertEvent();
}
