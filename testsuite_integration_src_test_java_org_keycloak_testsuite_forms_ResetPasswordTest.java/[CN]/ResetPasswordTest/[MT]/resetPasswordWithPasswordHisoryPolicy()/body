{
  keycloakRule.update(new KeycloakRule.KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel appRealm){
      appRealm.setPasswordPolicy(new PasswordPolicy("passwordHistory"));
    }
  }
);
  try {
    Time.setOffset(2000000);
    resetPassword("login-test","password1");
    resetPasswordInvalidPassword("login-test","password1","Invalid password: must not be equal to any of last 3 passwords.");
    Time.setOffset(4000000);
    resetPassword("login-test","password2");
    resetPasswordInvalidPassword("login-test","password1","Invalid password: must not be equal to any of last 3 passwords.");
    resetPasswordInvalidPassword("login-test","password2","Invalid password: must not be equal to any of last 3 passwords.");
    Time.setOffset(8000000);
    resetPassword("login-test","password3");
    resetPasswordInvalidPassword("login-test","password1","Invalid password: must not be equal to any of last 3 passwords.");
    resetPasswordInvalidPassword("login-test","password2","Invalid password: must not be equal to any of last 3 passwords.");
    resetPasswordInvalidPassword("login-test","password3","Invalid password: must not be equal to any of last 3 passwords.");
    resetPassword("login-test","password");
  }
  finally {
    keycloakRule.update(new KeycloakRule.KeycloakSetup(){
      @Override public void config(      RealmManager manager,      RealmModel adminstrationRealm,      RealmModel appRealm){
        appRealm.setPasswordPolicy(new PasswordPolicy(null));
      }
    }
);
    Time.setOffset(0);
  }
}
