{
  loginPage.open();
  loginPage.login("test-user@localhost","password");
  assertEquals(RequestType.AUTH_RESPONSE,appPage.getRequestType());
  Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));
  String sessionId=events.expectLogin().assertEvent().getSessionId();
  appPage.open();
  oauth.openLoginForm();
  assertEquals(RequestType.AUTH_RESPONSE,appPage.getRequestType());
  profilePage.open();
  Assert.assertTrue(profilePage.isCurrent());
  String sessionId2=events.expectLogin().detail(Details.AUTH_METHOD,"sso").removeDetail(Details.USERNAME).client("test-app").assertEvent().getSessionId();
  assertEquals(sessionId,sessionId2);
  keycloakRule.removeUserSession(sessionId);
  oauth.doLogin("test-user@localhost","password");
  String sessionId4=events.expectLogin().assertEvent().getSessionId();
  assertNotEquals(sessionId,sessionId4);
  events.clear();
}
