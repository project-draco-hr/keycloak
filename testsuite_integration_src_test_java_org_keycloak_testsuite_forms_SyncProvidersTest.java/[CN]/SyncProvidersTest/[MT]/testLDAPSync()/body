{
  KeycloakSession session=keycloakRule.startSession();
  try {
    KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
    UserFederationProviderFactory ldapFedFactory=(UserFederationProviderFactory)sessionFactory.getProviderFactory(UserFederationProvider.class,LDAPFederationProviderFactory.PROVIDER_NAME);
    ldapFedFactory.syncAllUsers(sessionFactory,"test",ldapModel);
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
  session=keycloakRule.startSession();
  try {
    RealmModel testRealm=session.realms().getRealm("test");
    UserProvider userProvider=session.userStorage();
    assertUserImported(userProvider,testRealm,"user1","User1FN","User1LN","user1@email.org");
    assertUserImported(userProvider,testRealm,"user2","User2FN","User2LN","user2@email.org");
    assertUserImported(userProvider,testRealm,"user3","User3FN","User3LN","user3@email.org");
    assertUserImported(userProvider,testRealm,"user4","User4FN","User4LN","user4@email.org");
    assertUserImported(userProvider,testRealm,"user5","User5FN","User5LN","user5@email.org");
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException ie) {
      throw new RuntimeException(ie);
    }
    Date beforeLDAPUpdate=new Date();
    PartitionManager partitionManager=FederationProvidersIntegrationTest.getPartitionManager(session,ldapModel);
    LDAPUtils.addUser(partitionManager,"user6","User6FN","User6LN","user6@email.org");
    LDAPUtils.updateUser(partitionManager,"user5","User5FNUpdated","User5LNUpdated","user5Updated@email.org");
    assertUserImported(userProvider,testRealm,"user5","User5FN","User5LN","user5@email.org");
    Assert.assertNull(userProvider.getUserByUsername("user6",testRealm));
    KeycloakSessionFactory sessionFactory=session.getKeycloakSessionFactory();
    UserFederationProviderFactory ldapFedFactory=(UserFederationProviderFactory)sessionFactory.getProviderFactory(UserFederationProvider.class,LDAPFederationProviderFactory.PROVIDER_NAME);
    ldapFedFactory.syncChangedUsers(sessionFactory,"test",ldapModel,beforeLDAPUpdate);
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
  session=keycloakRule.startSession();
  try {
    RealmModel testRealm=session.realms().getRealm("test");
    UserProvider userProvider=session.userStorage();
    assertUserImported(userProvider,testRealm,"user5","User5FNUpdated","User5LNUpdated","user5Updated@email.org");
    assertUserImported(userProvider,testRealm,"user6","User6FN","User6LN","user6@email.org");
  }
  finally {
    keycloakRule.stopSession(session,false);
  }
}
