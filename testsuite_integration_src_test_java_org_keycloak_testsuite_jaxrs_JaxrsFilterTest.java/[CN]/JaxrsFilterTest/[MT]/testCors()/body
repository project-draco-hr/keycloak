{
  keycloakRule.update(new KeycloakRule.KeycloakSetup(){
    @Override public void config(    RealmManager manager,    RealmModel adminstrationRealm,    RealmModel appRealm){
      Map<String,String> initParams=new TreeMap<String,String>();
      initParams.put(CONFIG_FILE_INIT_PARAM,"classpath:jaxrs-test/jaxrs-keycloak.json");
      keycloakRule.deployJaxrsApplication("JaxrsSimpleApp","/jaxrs-simple",JaxrsTestApplication.class,initParams);
    }
  }
);
  Response optionsResp=client.target(JAXRS_APP_URL).request().header(CorsHeaders.ORIGIN,"http://localhost:8081").options();
  Assert.assertEquals("true",optionsResp.getHeaderString(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS));
  Assert.assertEquals("http://localhost:8081",optionsResp.getHeaderString(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));
  optionsResp.close();
  OAuthClient.AccessTokenResponse accessTokenResp=retrieveAccessToken();
  String authHeader="Bearer " + accessTokenResp.getAccessToken();
  Response badOriginResp=client.target(JAXRS_APP_URL).request().header(HttpHeaders.AUTHORIZATION,authHeader).header(CorsHeaders.ORIGIN,"http://evil.org").get();
  Assert.assertEquals(403,badOriginResp.getStatus());
  badOriginResp.close();
  Response goodResp=client.target(JAXRS_APP_URL).request().header(HttpHeaders.AUTHORIZATION,authHeader).header(CorsHeaders.ORIGIN,"http://localhost:8081").get();
  Assert.assertEquals(200,goodResp.getStatus());
  Assert.assertEquals("true",optionsResp.getHeaderString(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS));
  Assert.assertEquals("http://localhost:8081",optionsResp.getHeaderString(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN));
  JaxrsTestResource.SimpleRepresentation getRep=goodResp.readEntity(JaxrsTestResource.SimpleRepresentation.class);
  Assert.assertEquals("get",getRep.getMethod());
  goodResp.close();
}
