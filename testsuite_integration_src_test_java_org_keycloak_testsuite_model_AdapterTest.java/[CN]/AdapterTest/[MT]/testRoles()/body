{
  test1CreateRealm();
  realmModel.addRole("admin");
  realmModel.addRole("user");
  Set<RoleModel> roles=realmModel.getRoles();
  Assert.assertEquals(3,roles.size());
  UserModel user=realmManager.getSession().users().addUser(realmModel,"bburke");
  RoleModel realmUserRole=realmModel.getRole("user");
  user.grantRole(realmUserRole);
  Assert.assertTrue(user.hasRole(realmUserRole));
  RoleModel found=realmModel.getRoleById(realmUserRole.getId());
  assertNotNull(found);
  assertRolesEquals(found,realmUserRole);
  ClientModel application=realmModel.addClient("app1");
  application.addRole("user");
  application.addRole("bar");
  Set<RoleModel> appRoles=application.getRoles();
  Assert.assertEquals(2,appRoles.size());
  RoleModel appBarRole=application.getRole("bar");
  assertNotNull(appBarRole);
  found=realmModel.getRoleById(appBarRole.getId());
  assertNotNull(found);
  assertRolesEquals(found,appBarRole);
  user.grantRole(appBarRole);
  user.grantRole(application.getRole("user"));
  roles=user.getRealmRoleMappings();
  Assert.assertEquals(roles.size(),2);
  assertRolesContains(realmUserRole,roles);
  Assert.assertTrue(user.hasRole(realmUserRole));
  Assert.assertTrue(user.hasRole(realmModel.getRole("foo")));
  roles=user.getApplicationRoleMappings(application);
  Assert.assertEquals(roles.size(),2);
  assertRolesContains(application.getRole("user"),roles);
  assertRolesContains(appBarRole,roles);
  Assert.assertTrue(user.hasRole(appBarRole));
  Assert.assertNotEquals(realmModel.getRole("user").getId(),application.getRole("user").getId());
  Assert.assertEquals(6,user.getRoleMappings().size());
  user.deleteRoleMapping(realmModel.getRole("foo"));
  user.deleteRoleMapping(appBarRole);
  roles=user.getRoleMappings();
  Assert.assertEquals(4,roles.size());
  assertRolesContains(realmUserRole,roles);
  assertRolesContains(application.getRole("user"),roles);
  Assert.assertFalse(user.hasRole(appBarRole));
}
