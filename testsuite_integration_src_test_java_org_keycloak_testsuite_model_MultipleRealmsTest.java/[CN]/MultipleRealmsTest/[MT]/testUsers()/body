{
  UserModel r1user1=session.users().getUserByUsername("user1",realm1);
  UserModel r2user1=session.users().getUserByUsername("user1",realm2);
  Assert.assertEquals(r1user1.getUsername(),r2user1.getUsername());
  Assert.assertNotEquals(r1user1.getId(),r2user1.getId());
  r1user1.updateCredential(UserCredentialModel.password("pass1"));
  r2user1.updateCredential(UserCredentialModel.password("pass2"));
  Assert.assertTrue(session.users().validCredentials(session,realm1,r1user1,UserCredentialModel.password("pass1")));
  Assert.assertFalse(session.users().validCredentials(session,realm1,r1user1,UserCredentialModel.password("pass2")));
  Assert.assertFalse(session.users().validCredentials(session,realm2,r2user1,UserCredentialModel.password("pass1")));
  Assert.assertTrue(session.users().validCredentials(session,realm2,r2user1,UserCredentialModel.password("pass2")));
  Assert.assertEquals(2,session.users().searchForUser("user",realm1).size());
  commit();
  realm1=model.getRealm("id1");
  realm2=model.getRealm("id2");
  session.users().removeUser(realm1,r1user1);
  UserModel user2=session.users().getUserByUsername("user2",realm1);
  session.users().removeUser(realm1,user2);
  Assert.assertEquals(0,session.users().searchForUser("user",realm1).size());
  Assert.assertEquals(2,session.users().searchForUser("user",realm2).size());
}
