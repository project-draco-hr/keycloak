{
  RealmModel realm=realmManager.createRealm("original");
  ClientModel fooClient=realm.addClient("foo-client");
  ClientModel barClient=realm.addClient("bar-client");
  RoleModel realmRole=realm.addRole("realm-role");
  RoleModel barClientRole=barClient.addRole("bar-client-role");
  ProtocolMapperModel fooMapper=new ProtocolMapperModel();
  fooMapper.setName("foo");
  fooMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);
  fooMapper.setProtocolMapper(UserPropertyMapper.PROVIDER_ID);
  fooMapper=fooClient.addProtocolMapper(fooMapper);
  ProtocolMapperModel barMapper=new ProtocolMapperModel();
  barMapper.setName("bar");
  barMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);
  barMapper.setProtocolMapper(UserPropertyMapper.PROVIDER_ID);
  barMapper=barClient.addProtocolMapper(barMapper);
  UserModel john=session.users().addUser(realm,"john");
  UserModel mary=session.users().addUser(realm,"mary");
  UserConsentModel johnFooGrant=new UserConsentModel(realm,fooClient.getId());
  johnFooGrant.addGrantedRole(realmRole.getId());
  johnFooGrant.addGrantedRole(barClientRole.getId());
  johnFooGrant.addGrantedProtocolMapper(fooMapper.getId());
  john.addGrantedConsent(johnFooGrant);
  UserConsentModel johnBarGrant=new UserConsentModel(realm,barClient.getId());
  johnBarGrant.addGrantedProtocolMapper(barMapper.getId());
  johnBarGrant.addGrantedRole(realmRole.getId());
  try {
    john.updateGrantedConsent(johnBarGrant);
    Assert.fail("Not expected to end here");
  }
 catch (  ModelException expected) {
  }
  john.addGrantedConsent(johnBarGrant);
  UserConsentModel maryFooGrant=new UserConsentModel(realm,fooClient.getId());
  maryFooGrant.addGrantedRole(realmRole.getId());
  maryFooGrant.addGrantedProtocolMapper(fooMapper.getId());
  mary.addGrantedConsent(maryFooGrant);
  commit();
}
