{
  RealmModel realm=realmManager.createRealm("test-realm");
  UserFederationProviderModel fedProvider=realm.addUserFederationProvider("dummy",new TreeMap<String,String>(),1,"my-cool-provider",-1,-1,0);
  UserFederationProviderModel fedProvider2=realm.addUserFederationProvider("dummy",new TreeMap<String,String>(),1,"my-cool-provider2",-1,-1,0);
  UserFederationMapperModel mapperModel1=createMapper("name1",fedProvider.getId(),"key1","value1");
  UserFederationMapperModel mapperModel2=createMapper("name2",fedProvider.getId(),"key2","value2");
  UserFederationMapperModel mapperModel3=createMapper("name1",fedProvider2.getId(),"key3","value3");
  mapperModel1=realm.addUserFederationMapper(mapperModel1);
  mapperModel2=realm.addUserFederationMapper(mapperModel2);
  mapperModel3=realm.addUserFederationMapper(mapperModel3);
  commit();
  try {
    UserFederationMapperModel conflictMapper=createMapper("name1",fedProvider.getId(),"key4","value4");
    realmManager.getRealmByName("test-realm").addUserFederationMapper(conflictMapper);
    commit();
    Assert.fail("Don't expect to end here");
  }
 catch (  ModelDuplicateException expected) {
  }
  realm=realmManager.getRealmByName("test-realm");
  Set<UserFederationMapperModel> mappers=realm.getUserFederationMappers();
  Assert.assertEquals(3,mappers.size());
  Assert.assertTrue(mappers.contains(mapperModel1));
  Assert.assertTrue(mappers.contains(mapperModel2));
  Assert.assertTrue(mappers.contains(mapperModel3));
  mappers=realm.getUserFederationMappersByFederationProvider(fedProvider.getId());
  Assert.assertEquals(2,mappers.size());
  Assert.assertTrue(mappers.contains(mapperModel1));
  Assert.assertTrue(mappers.contains(mapperModel2));
  mapperModel3.getConfig().put("otherKey","otherValue");
  realm.updateUserFederationMapper(mapperModel3);
  commit();
  realm=realmManager.getRealmByName("test-realm");
  mapperModel3=realm.getUserFederationMapperById(mapperModel3.getId());
  Assert.assertEquals(2,mapperModel3.getConfig().size());
  Assert.assertEquals("value3",mapperModel3.getConfig().get("key3"));
  Assert.assertEquals("otherValue",mapperModel3.getConfig().get("otherKey"));
}
