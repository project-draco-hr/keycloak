{
  RealmModel realm=realmManager.createRealm("original");
  KeycloakSession session=realmManager.getSession();
  UserModel user=session.users().addUser(realm,"user");
  user.setFirstName("first-name");
  user.setLastName("last-name");
  user.setEmail("email");
  assertNotNull(user.getCreatedTimestamp());
  Assert.assertTrue((System.currentTimeMillis() - user.getCreatedTimestamp()) < 10000);
  user.addRequiredAction(RequiredAction.CONFIGURE_TOTP);
  user.addRequiredAction(RequiredAction.UPDATE_PASSWORD);
  RealmModel searchRealm=realmManager.getRealm(realm.getId());
  UserModel persisted=session.users().getUserByUsername("user",searchRealm);
  assertEquals(user,persisted);
  searchRealm=realmManager.getRealm(realm.getId());
  UserModel persisted2=session.users().getUserById(user.getId(),searchRealm);
  assertEquals(user,persisted2);
  Map<String,String> attributes=new HashMap<String,String>();
  attributes.put(UserModel.LAST_NAME,"last-name");
  List<UserModel> search=session.users().searchForUserByAttributes(attributes,realm);
  Assert.assertEquals(search.size(),1);
  Assert.assertEquals(search.get(0).getUsername(),"user");
  attributes.clear();
  attributes.put(UserModel.EMAIL,"email");
  search=session.users().searchForUserByAttributes(attributes,realm);
  Assert.assertEquals(search.size(),1);
  Assert.assertEquals(search.get(0).getUsername(),"user");
  attributes.clear();
  attributes.put(UserModel.LAST_NAME,"last-name");
  attributes.put(UserModel.EMAIL,"email");
  search=session.users().searchForUserByAttributes(attributes,realm);
  Assert.assertEquals(search.size(),1);
  Assert.assertEquals(search.get(0).getUsername(),"user");
}
