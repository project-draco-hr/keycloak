{
  UserSessionModel[] sessions=new UserSessionModel[3];
  sessions[0]=session.sessions().createUserSession(realm,session.users().getUserByUsername("user1",realm),"user1","127.0.0.1","form",true,null,null);
  Set<String> roles=new HashSet<String>();
  roles.add("one");
  roles.add("two");
  Set<String> protocolMappers=new HashSet<String>();
  protocolMappers.add("mapper-one");
  protocolMappers.add("mapper-two");
  createClientSession(realm.getClientByClientId("test-app"),sessions[0],"http://redirect","state",roles,protocolMappers);
  createClientSession(realm.getClientByClientId("third-party"),sessions[0],"http://redirect","state",new HashSet<String>(),new HashSet<String>());
  sessions[1]=session.sessions().createUserSession(realm,session.users().getUserByUsername("user1",realm),"user1","127.0.0.2","form",true,null,null);
  createClientSession(realm.getClientByClientId("test-app"),sessions[1],"http://redirect","state",new HashSet<String>(),new HashSet<String>());
  sessions[2]=session.sessions().createUserSession(realm,session.users().getUserByUsername("user2",realm),"user2","127.0.0.3","form",true,null,null);
  createClientSession(realm.getClientByClientId("test-app"),sessions[2],"http://redirect","state",new HashSet<String>(),new HashSet<String>());
  resetSession();
  return sessions;
}
