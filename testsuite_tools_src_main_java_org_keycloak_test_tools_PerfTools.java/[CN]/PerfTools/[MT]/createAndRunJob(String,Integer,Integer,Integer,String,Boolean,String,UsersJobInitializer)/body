{
  if (count == null) {
    count=1;
  }
  if (batch == null) {
    batch=1000;
  }
  if (start == null) {
    start=0;
  }
  if (prefix == null) {
    prefix=String.valueOf(System.currentTimeMillis());
  }
  if (async == null) {
    async=true;
  }
  int executorsCount=count / batch;
  if (count % batch > 0) {
    executorsCount++;
  }
  CountDownLatch latch=new CountDownLatch(executorsCount);
  JobRepresentation job=new JobRepresentation(jobName + " " + prefix+ "-"+ start+ " to "+ prefix+ "-"+ (start + count),count);
  jobs.add(job);
  List<UsersJob> usersJobs=new ArrayList<UsersJob>();
  for (int s=start; s < (start + count); s+=batch) {
    int c=s + batch <= (start + count) ? batch : (start + count) - s;
    UsersJob usersJob=initializer.instantiateJob();
    usersJob.init(job,sessionFactory,realmName,s,c,prefix,latch);
    usersJobs.add(usersJob);
  }
  for (  UsersJob usersJob : usersJobs) {
    executor.submit(usersJob);
  }
  if (!async) {
    latch.await();
  }
}
