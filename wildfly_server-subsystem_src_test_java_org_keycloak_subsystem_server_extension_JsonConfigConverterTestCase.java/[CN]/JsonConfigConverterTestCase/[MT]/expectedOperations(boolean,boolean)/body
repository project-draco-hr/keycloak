{
  List<ModelNode> ops=new ArrayList<>();
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"write-attribute\",\n" + "    \"address\" => [(\"subsystem\" => \"keycloak-server\")],\n"+ "    \"name\" => \"master-realm-name\",\n"+ "    \"value\" => \"master\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"write-attribute\",\n" + "    \"address\" => [(\"subsystem\" => \"keycloak-server\")],\n"+ "    \"name\" => \"scheduled-task-interval\",\n"+ "    \"value\" => 900L\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"write-attribute\",\n" + "    \"address\" => [(\"subsystem\" => \"keycloak-server\")],\n"+ "    \"name\" => \"providers\",\n"+ "    \"value\" => [\"classpath:${jboss.home.dir}/providers/*\"]\n"+ "}"));
  if (includeModules) {
    ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"theme\" => \"defaults\")\n"+ "    ],\n"+ "    \"staticMaxAge\" => 2592001L,\n"+ "    \"cacheTemplates\" => false,\n"+ "    \"cacheThemes\" => false,\n"+ "    \"dir\" => \"${jboss.home.dir}/themes\",\n"+ "    \"welcomeTheme\" => \"welcome\",\n"+ "    \"default\" => \"default\",\n"+ "    \"modules\" => [\"org.keycloak.example.themes\"]\n"+ "}"));
  }
 else {
    ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"theme\" => \"defaults\")\n"+ "    ],\n"+ "    \"staticMaxAge\" => 2592001L,\n"+ "    \"cacheTemplates\" => false,\n"+ "    \"cacheThemes\" => false,\n"+ "    \"dir\" => \"${jboss.home.dir}/themes\",\n"+ "    \"welcomeTheme\" => \"welcome\",\n"+ "    \"default\" => \"default\",\n"+ "}"));
  }
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"eventsStore\")\n"+ "    ],\n"+ "    \"default-provider\" => \"jpa\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"eventsStore\"),\n"+ "        (\"provider\" => \"jpa\")\n"+ "    ],\n"+ "    \"properties\" => {\"exclude-events\" => \"[\\\"REFRESH_TOKEN\\\"]\"},\n"+ "    \"enabled\" => true\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"realm\")\n"+ "    ],\n"+ "    \"default-provider\" => \"jpa\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"user\")\n"+ "    ],\n"+ "    \"default-provider\" => \"jpa\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"userCache\")\n"+ "    ]\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"userCache\"),\n"+ "        (\"provider\" => \"default\")\n"+ "    ],\n"+ "    \"enabled\" => true\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"userSessionPersister\")\n"+ "    ],\n"+ "    \"default-provider\" => \"jpa\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"authorizationPersister\")\n"+ "    ],\n"+ "    \"default-provider\" => \"jpa\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"timer\")\n"+ "    ],\n"+ "    \"default-provider\" => \"basic\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsHttpClient\")\n"+ "    ]\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsHttpClient\"),\n"+ "        (\"provider\" => \"default\")\n"+ "    ],\n"+ "    \"enabled\" => true\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsJpa\")\n"+ "    ]\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsJpa\"),\n"+ "        (\"provider\" => \"default\")\n"+ "    ],\n"+ "    \"properties\" => {\n"+ "        \"dataSource\" => \"java:jboss/datasources/KeycloakDS\",\n"+ "        \"databaseSchema\" => \"update\"\n"+ "    },\n"+ "    \"enabled\" => true\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"realmCache\")\n"+ "    ]\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"realmCache\"),\n"+ "        (\"provider\" => \"default\")\n"+ "    ],\n"+ "    \"enabled\" => true\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsInfinispan\")\n"+ "    ],\n"+ "    \"default-provider\" => \"default\"\n"+ "}"));
  ops.add(ModelNode.fromString("{\n" + "    \"operation\" => \"add\",\n" + "    \"address\" => [\n"+ "        (\"subsystem\" => \"keycloak-server\"),\n"+ "        (\"spi\" => \"connectionsInfinispan\"),\n"+ "        (\"provider\" => \"default\")\n"+ "    ],\n"+ "    \"properties\" => {\"cacheContainer\" => \"java:comp/env/infinispan/Keycloak\"},\n"+ "    \"enabled\" => true\n"+ "}"));
  if (isDomain) {
    for (    ModelNode op : ops) {
      PathAddress addr=PathAddress.pathAddress(op.get(ADDRESS));
      PathAddress domainAddr=PathAddress.pathAddress(domainRoot).append(addr);
      op.get(ADDRESS).set(domainAddr.toModelNode());
    }
  }
  return ops;
}
